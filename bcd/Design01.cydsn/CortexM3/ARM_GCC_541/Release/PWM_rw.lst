ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_rw.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_rw_Enable,"ax",%progbits
  20              		.align	1
  21              		.global	PWM_rw_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	PWM_rw_Enable, %function
  25              	PWM_rw_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\PWM_rw.c"
   1:Generated_Source\PSoC5/PWM_rw.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_rw.c **** * File Name: PWM_rw.c
   3:Generated_Source\PSoC5/PWM_rw.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_rw.c **** *
   5:Generated_Source\PSoC5/PWM_rw.c **** * Description:
   6:Generated_Source\PSoC5/PWM_rw.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_rw.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_rw.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_rw.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_rw.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_rw.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_rw.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_rw.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_rw.c **** *
  15:Generated_Source\PSoC5/PWM_rw.c **** * Note:
  16:Generated_Source\PSoC5/PWM_rw.c **** *
  17:Generated_Source\PSoC5/PWM_rw.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_rw.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_rw.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_rw.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_rw.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_rw.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_rw.c **** 
  24:Generated_Source\PSoC5/PWM_rw.c **** #include "PWM_rw.h"
  25:Generated_Source\PSoC5/PWM_rw.c **** 
  26:Generated_Source\PSoC5/PWM_rw.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_rw.c **** #ifdef PWM_rw_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_rw.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_rw.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_rw.c **** #endif /* PWM_rw_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 2


  31:Generated_Source\PSoC5/PWM_rw.c **** 
  32:Generated_Source\PSoC5/PWM_rw.c **** uint8 PWM_rw_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_rw.c **** 
  34:Generated_Source\PSoC5/PWM_rw.c **** 
  35:Generated_Source\PSoC5/PWM_rw.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_rw.c **** * Function Name: PWM_rw_Start
  37:Generated_Source\PSoC5/PWM_rw.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_rw.c **** *
  39:Generated_Source\PSoC5/PWM_rw.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_rw.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_rw.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_rw.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_rw.c **** *
  44:Generated_Source\PSoC5/PWM_rw.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_rw.c **** *  None
  46:Generated_Source\PSoC5/PWM_rw.c **** *
  47:Generated_Source\PSoC5/PWM_rw.c **** * Return:
  48:Generated_Source\PSoC5/PWM_rw.c **** *  None
  49:Generated_Source\PSoC5/PWM_rw.c **** *
  50:Generated_Source\PSoC5/PWM_rw.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_rw.c **** *  PWM_rw_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_rw.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_rw.c **** *
  54:Generated_Source\PSoC5/PWM_rw.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_rw.c **** void PWM_rw_Start(void) 
  56:Generated_Source\PSoC5/PWM_rw.c **** {
  57:Generated_Source\PSoC5/PWM_rw.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_rw.c ****     if(PWM_rw_initVar == 0u)
  59:Generated_Source\PSoC5/PWM_rw.c ****     {
  60:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_Init();
  61:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_initVar = 1u;
  62:Generated_Source\PSoC5/PWM_rw.c ****     }
  63:Generated_Source\PSoC5/PWM_rw.c ****     PWM_rw_Enable();
  64:Generated_Source\PSoC5/PWM_rw.c **** 
  65:Generated_Source\PSoC5/PWM_rw.c **** }
  66:Generated_Source\PSoC5/PWM_rw.c **** 
  67:Generated_Source\PSoC5/PWM_rw.c **** 
  68:Generated_Source\PSoC5/PWM_rw.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_rw.c **** * Function Name: PWM_rw_Init
  70:Generated_Source\PSoC5/PWM_rw.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_rw.c **** *
  72:Generated_Source\PSoC5/PWM_rw.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_rw.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_rw.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_rw.c **** *  PWM_rw_Start().
  76:Generated_Source\PSoC5/PWM_rw.c **** *
  77:Generated_Source\PSoC5/PWM_rw.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_rw.c **** *  None
  79:Generated_Source\PSoC5/PWM_rw.c **** *
  80:Generated_Source\PSoC5/PWM_rw.c **** * Return:
  81:Generated_Source\PSoC5/PWM_rw.c **** *  None
  82:Generated_Source\PSoC5/PWM_rw.c **** *
  83:Generated_Source\PSoC5/PWM_rw.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_rw.c **** void PWM_rw_Init(void) 
  85:Generated_Source\PSoC5/PWM_rw.c **** {
  86:Generated_Source\PSoC5/PWM_rw.c ****     #if (PWM_rw_UsingFixedFunction || PWM_rw_UseControl)
  87:Generated_Source\PSoC5/PWM_rw.c ****         uint8 ctrl;
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 3


  88:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (PWM_rw_UsingFixedFunction || PWM_rw_UseControl) */
  89:Generated_Source\PSoC5/PWM_rw.c **** 
  90:Generated_Source\PSoC5/PWM_rw.c ****     #if(!PWM_rw_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_rw.c ****         #if(PWM_rw_UseStatus)
  92:Generated_Source\PSoC5/PWM_rw.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_rw.c ****             uint8 PWM_rw_interruptState;
  94:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_UseStatus) */
  95:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (!PWM_rw_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_rw.c **** 
  97:Generated_Source\PSoC5/PWM_rw.c ****     #if (PWM_rw_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_rw.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_CONTROL |= PWM_rw_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_rw.c ****         #if (PWM_rw_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_CONTROL |= PWM_rw_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_rw.c **** 
 104:Generated_Source\PSoC5/PWM_rw.c ****         ctrl = PWM_rw_CONTROL3 & ((uint8 )(~PWM_rw_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_CONTROL3 = ctrl | PWM_rw_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_rw.c **** 
 107:Generated_Source\PSoC5/PWM_rw.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_RT1 &= ((uint8)(~PWM_rw_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_RT1 |= PWM_rw_SYNC;
 110:Generated_Source\PSoC5/PWM_rw.c **** 
 111:Generated_Source\PSoC5/PWM_rw.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_RT1 &= ((uint8)(~PWM_rw_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_RT1 |= PWM_rw_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_rw.c **** 
 115:Generated_Source\PSoC5/PWM_rw.c ****     #elif (PWM_rw_UseControl)
 116:Generated_Source\PSoC5/PWM_rw.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_rw.c ****         ctrl = PWM_rw_CONTROL & ((uint8)(~PWM_rw_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_rw.c ****                 ((uint8)(~PWM_rw_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_CONTROL = ctrl | PWM_rw_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_rw.c ****                                    PWM_rw_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (PWM_rw_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_rw.c **** 
 123:Generated_Source\PSoC5/PWM_rw.c ****     #if (!PWM_rw_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_rw.c ****         #if (PWM_rw_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_rw.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_AUX_CONTROLDP0 |= (PWM_rw_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_rw.c ****         #else /* (PWM_rw_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_rw.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_AUX_CONTROLDP0 |= (PWM_rw_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_AUX_CONTROLDP1 |= (PWM_rw_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_rw.c **** 
 133:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_WriteCounter(PWM_rw_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (!PWM_rw_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_rw.c **** 
 136:Generated_Source\PSoC5/PWM_rw.c ****     PWM_rw_WritePeriod(PWM_rw_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/PWM_rw.c **** 
 138:Generated_Source\PSoC5/PWM_rw.c ****         #if (PWM_rw_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_WriteCompare(PWM_rw_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_rw.c ****         #else
 141:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_WriteCompare1(PWM_rw_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_WriteCompare2(PWM_rw_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_rw.c **** 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 4


 145:Generated_Source\PSoC5/PWM_rw.c ****         #if (PWM_rw_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_WriteKillTime(PWM_rw_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_rw.c **** 
 149:Generated_Source\PSoC5/PWM_rw.c ****         #if (PWM_rw_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_WriteDeadTime(PWM_rw_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_rw.c **** 
 153:Generated_Source\PSoC5/PWM_rw.c ****     #if (PWM_rw_UseStatus || PWM_rw_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_SetInterruptMode(PWM_rw_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (PWM_rw_UseStatus || PWM_rw_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_rw.c **** 
 157:Generated_Source\PSoC5/PWM_rw.c ****     #if (PWM_rw_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_rw.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_GLOBAL_ENABLE |= PWM_rw_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_rw.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_CONTROL2 |= PWM_rw_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_rw.c ****     #else
 163:Generated_Source\PSoC5/PWM_rw.c ****         #if(PWM_rw_UseStatus)
 164:Generated_Source\PSoC5/PWM_rw.c **** 
 165:Generated_Source\PSoC5/PWM_rw.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_rw.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_rw.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_STATUS_AUX_CTRL |= PWM_rw_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_rw.c **** 
 171:Generated_Source\PSoC5/PWM_rw.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_rw.c ****             CyExitCriticalSection(PWM_rw_interruptState);
 173:Generated_Source\PSoC5/PWM_rw.c **** 
 174:Generated_Source\PSoC5/PWM_rw.c ****             /* Clear the FIFO to enable the PWM_rw_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_rw.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_UseStatus) */
 178:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (PWM_rw_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_rw.c **** }
 180:Generated_Source\PSoC5/PWM_rw.c **** 
 181:Generated_Source\PSoC5/PWM_rw.c **** 
 182:Generated_Source\PSoC5/PWM_rw.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_rw.c **** * Function Name: PWM_rw_Enable
 184:Generated_Source\PSoC5/PWM_rw.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_rw.c **** *
 186:Generated_Source\PSoC5/PWM_rw.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_rw.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_rw.c **** *
 189:Generated_Source\PSoC5/PWM_rw.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_rw.c **** *  None
 191:Generated_Source\PSoC5/PWM_rw.c **** *
 192:Generated_Source\PSoC5/PWM_rw.c **** * Return:
 193:Generated_Source\PSoC5/PWM_rw.c **** *  None
 194:Generated_Source\PSoC5/PWM_rw.c **** *
 195:Generated_Source\PSoC5/PWM_rw.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_rw.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_rw.c **** *
 198:Generated_Source\PSoC5/PWM_rw.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_rw.c **** void PWM_rw_Enable(void) 
 200:Generated_Source\PSoC5/PWM_rw.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/PWM_rw.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_rw.c ****     #if (PWM_rw_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_GLOBAL_ENABLE |= PWM_rw_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_GLOBAL_STBY_ENABLE |= PWM_rw_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (PWM_rw_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_rw.c **** 
 207:Generated_Source\PSoC5/PWM_rw.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_rw.c ****     #if (PWM_rw_UseControl || PWM_rw_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_CONTROL |= PWM_rw_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 79640040 		.word	1073767545
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	PWM_rw_Enable, .-PWM_rw_Enable
  46              		.section	.text.PWM_rw_Stop,"ax",%progbits
  47              		.align	1
  48              		.global	PWM_rw_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PWM_rw_Stop, %function
  52              	PWM_rw_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (PWM_rw_UseControl || PWM_rw_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_rw.c **** }
 212:Generated_Source\PSoC5/PWM_rw.c **** 
 213:Generated_Source\PSoC5/PWM_rw.c **** 
 214:Generated_Source\PSoC5/PWM_rw.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_rw.c **** * Function Name: PWM_rw_Stop
 216:Generated_Source\PSoC5/PWM_rw.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_rw.c **** *
 218:Generated_Source\PSoC5/PWM_rw.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_rw.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_rw.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_rw.c **** *
 222:Generated_Source\PSoC5/PWM_rw.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_rw.c **** *  None
 224:Generated_Source\PSoC5/PWM_rw.c **** *
 225:Generated_Source\PSoC5/PWM_rw.c **** * Return:
 226:Generated_Source\PSoC5/PWM_rw.c **** *  None
 227:Generated_Source\PSoC5/PWM_rw.c **** *
 228:Generated_Source\PSoC5/PWM_rw.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_rw.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_rw.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_rw.c **** *
 232:Generated_Source\PSoC5/PWM_rw.c **** *******************************************************************************/
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 6


 233:Generated_Source\PSoC5/PWM_rw.c **** void PWM_rw_Stop(void) 
 234:Generated_Source\PSoC5/PWM_rw.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/PWM_rw.c ****     #if (PWM_rw_UseControl || PWM_rw_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_CONTROL &= ((uint8)(~PWM_rw_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 79640040 		.word	1073767545
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	PWM_rw_Stop, .-PWM_rw_Stop
  72              		.section	.text.PWM_rw_WriteCounter,"ax",%progbits
  73              		.align	1
  74              		.global	PWM_rw_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	PWM_rw_WriteCounter, %function
  78              	PWM_rw_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (PWM_rw_UseControl || PWM_rw_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_rw.c **** 
 239:Generated_Source\PSoC5/PWM_rw.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_rw.c ****     #if (PWM_rw_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_GLOBAL_ENABLE &= ((uint8)(~PWM_rw_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_rw_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (PWM_rw_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_rw.c **** }
 245:Generated_Source\PSoC5/PWM_rw.c **** 
 246:Generated_Source\PSoC5/PWM_rw.c **** #if (PWM_rw_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_rw.c ****     #if (PWM_rw_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_rw.c **** 
 249:Generated_Source\PSoC5/PWM_rw.c **** 
 250:Generated_Source\PSoC5/PWM_rw.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_rw.c ****         * Function Name: PWM_rw_SetCompareMode
 252:Generated_Source\PSoC5/PWM_rw.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_rw.c ****         *
 254:Generated_Source\PSoC5/PWM_rw.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_rw.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_rw.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_rw.c ****         *
 258:Generated_Source\PSoC5/PWM_rw.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_rw.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_rw.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_rw.c ****         *
 262:Generated_Source\PSoC5/PWM_rw.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_rw.c ****         *  None
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 7


 264:Generated_Source\PSoC5/PWM_rw.c ****         *
 265:Generated_Source\PSoC5/PWM_rw.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_rw.c ****         void PWM_rw_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_rw.c ****         {
 268:Generated_Source\PSoC5/PWM_rw.c ****             #if(PWM_rw_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_rw.c **** 
 270:Generated_Source\PSoC5/PWM_rw.c ****                 #if(0 != PWM_rw_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_rw.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_rw_CTRL_CMPMODE1_S
 272:Generated_Source\PSoC5/PWM_rw.c ****                 #else
 273:Generated_Source\PSoC5/PWM_rw.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_rw.c ****                 #endif /* (0 != PWM_rw_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_rw.c **** 
 276:Generated_Source\PSoC5/PWM_rw.c ****                 PWM_rw_CONTROL3 &= ((uint8)(~PWM_rw_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/PWM_rw.c ****                 PWM_rw_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_rw.c **** 
 279:Generated_Source\PSoC5/PWM_rw.c ****             #elif (PWM_rw_UseControl)
 280:Generated_Source\PSoC5/PWM_rw.c **** 
 281:Generated_Source\PSoC5/PWM_rw.c ****                 #if(0 != PWM_rw_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_rw.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_rw_CTRL_CMPMODE1_
 283:Generated_Source\PSoC5/PWM_rw.c ****                                                 PWM_rw_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_rw.c ****                 #else
 285:Generated_Source\PSoC5/PWM_rw.c ****                     uint8 comparemode1masked = comparemode & PWM_rw_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_rw.c ****                 #endif /* (0 != PWM_rw_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_rw.c **** 
 288:Generated_Source\PSoC5/PWM_rw.c ****                 #if(0 != PWM_rw_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_rw.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_rw_CTRL_CMPMODE2_
 290:Generated_Source\PSoC5/PWM_rw.c ****                                                PWM_rw_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_rw.c ****                 #else
 292:Generated_Source\PSoC5/PWM_rw.c ****                     uint8 comparemode2masked = comparemode & PWM_rw_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_rw.c ****                 #endif /* (0 != PWM_rw_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_rw.c **** 
 295:Generated_Source\PSoC5/PWM_rw.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_rw.c ****                 PWM_rw_CONTROL &= ((uint8)(~(PWM_rw_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_rw.c ****                                             PWM_rw_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_rw.c ****                 PWM_rw_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_rw.c **** 
 300:Generated_Source\PSoC5/PWM_rw.c ****             #else
 301:Generated_Source\PSoC5/PWM_rw.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_rw.c ****             #endif /* (PWM_rw_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_rw.c ****         }
 304:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* PWM_rw_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_rw.c **** 
 306:Generated_Source\PSoC5/PWM_rw.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_rw.c **** 
 308:Generated_Source\PSoC5/PWM_rw.c ****     #if (PWM_rw_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_rw.c **** 
 310:Generated_Source\PSoC5/PWM_rw.c **** 
 311:Generated_Source\PSoC5/PWM_rw.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_rw.c ****         * Function Name: PWM_rw_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_rw.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_rw.c ****         *
 315:Generated_Source\PSoC5/PWM_rw.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_rw.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_rw.c ****         *
 318:Generated_Source\PSoC5/PWM_rw.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_rw.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_rw.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 8


 321:Generated_Source\PSoC5/PWM_rw.c ****         *
 322:Generated_Source\PSoC5/PWM_rw.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_rw.c ****         *  None
 324:Generated_Source\PSoC5/PWM_rw.c ****         *
 325:Generated_Source\PSoC5/PWM_rw.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_rw.c ****         void PWM_rw_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_rw.c ****         {
 328:Generated_Source\PSoC5/PWM_rw.c ****             #if(0 != PWM_rw_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_rw.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_rw_CTRL_CMPMODE1_SHIFT
 330:Generated_Source\PSoC5/PWM_rw.c ****                                            PWM_rw_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_rw.c ****             #else
 332:Generated_Source\PSoC5/PWM_rw.c ****                 uint8 comparemodemasked = comparemode & PWM_rw_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_rw.c ****             #endif /* (0 != PWM_rw_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_rw.c **** 
 335:Generated_Source\PSoC5/PWM_rw.c ****             #if (PWM_rw_UseControl)
 336:Generated_Source\PSoC5/PWM_rw.c ****                 PWM_rw_CONTROL &= ((uint8)(~PWM_rw_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM_rw.c ****                 PWM_rw_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_rw.c ****             #endif /* (PWM_rw_UseControl) */
 339:Generated_Source\PSoC5/PWM_rw.c ****         }
 340:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* PWM_rw_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_rw.c **** 
 342:Generated_Source\PSoC5/PWM_rw.c **** #if (PWM_rw_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_rw.c **** 
 344:Generated_Source\PSoC5/PWM_rw.c **** 
 345:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_rw.c ****     *
 349:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_rw.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_rw.c ****     *
 352:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_rw.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_rw.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_rw.c ****     *
 356:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 358:Generated_Source\PSoC5/PWM_rw.c ****     *
 359:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_rw.c ****     void PWM_rw_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_rw.c ****     {
 362:Generated_Source\PSoC5/PWM_rw.c **** 
 363:Generated_Source\PSoC5/PWM_rw.c ****         #if(0 != PWM_rw_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_rw.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_rw_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM_rw.c ****                                                  PWM_rw_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_rw.c ****         #else
 367:Generated_Source\PSoC5/PWM_rw.c ****             uint8 comparemodemasked = comparemode & PWM_rw_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (0 != PWM_rw_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_rw.c **** 
 370:Generated_Source\PSoC5/PWM_rw.c ****         #if (PWM_rw_UseControl)
 371:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_CONTROL &= ((uint8)(~PWM_rw_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_UseControl) */
 374:Generated_Source\PSoC5/PWM_rw.c ****     }
 375:Generated_Source\PSoC5/PWM_rw.c ****     #endif /*PWM_rw_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_rw.c **** 
 377:Generated_Source\PSoC5/PWM_rw.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 9


 378:Generated_Source\PSoC5/PWM_rw.c **** 
 379:Generated_Source\PSoC5/PWM_rw.c **** 
 380:Generated_Source\PSoC5/PWM_rw.c **** #if (!PWM_rw_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_rw.c **** 
 382:Generated_Source\PSoC5/PWM_rw.c **** 
 383:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_WriteCounter
 385:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_rw.c ****     *
 387:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_rw.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_rw.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_rw.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_rw.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_rw.c ****     *
 393:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_rw.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_rw.c ****     *
 396:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 398:Generated_Source\PSoC5/PWM_rw.c ****     *
 399:Generated_Source\PSoC5/PWM_rw.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_rw.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_rw.c ****     *
 402:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_rw.c ****     void PWM_rw_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/PWM_rw.c ****                                        
 405:Generated_Source\PSoC5/PWM_rw.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/PWM_rw.c ****         CY_SET_REG8(PWM_rw_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 08640040 		.word	1073767432
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	PWM_rw_WriteCounter, .-PWM_rw_WriteCounter
  97              		.section	.text.PWM_rw_ReadCounter,"ax",%progbits
  98              		.align	1
  99              		.global	PWM_rw_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	PWM_rw_ReadCounter, %function
 103              	PWM_rw_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/PWM_rw.c ****     }
 408:Generated_Source\PSoC5/PWM_rw.c **** 
 409:Generated_Source\PSoC5/PWM_rw.c **** 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 10


 410:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_ReadCounter
 412:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_rw.c ****     *
 414:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_rw.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_rw.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_rw.c ****     *
 418:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 420:Generated_Source\PSoC5/PWM_rw.c ****     *
 421:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_rw.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_rw.c ****     *
 424:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_rw.c ****     uint8 PWM_rw_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_rw.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/PWM_rw.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_rw.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_rw.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_rw.c ****           (void)CY_GET_REG8(PWM_rw_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/PWM_rw.c **** 
 432:Generated_Source\PSoC5/PWM_rw.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_rw.c ****         return (CY_GET_REG8(PWM_rw_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/PWM_rw.c ****     }
 116              		.loc 1 434 0
 117 0008 7047     		bx	lr
 118              	.L12:
 119 000a 00BF     		.align	2
 120              	.L11:
 121 000c 18640040 		.word	1073767448
 122 0010 58640040 		.word	1073767512
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	PWM_rw_ReadCounter, .-PWM_rw_ReadCounter
 126              		.section	.text.PWM_rw_ClearFIFO,"ax",%progbits
 127              		.align	1
 128              		.global	PWM_rw_ClearFIFO
 129              		.thumb
 130              		.thumb_func
 131              		.type	PWM_rw_ClearFIFO, %function
 132              	PWM_rw_ClearFIFO:
 133              	.LFB6:
 435:Generated_Source\PSoC5/PWM_rw.c **** 
 436:Generated_Source\PSoC5/PWM_rw.c ****     #if (PWM_rw_UseStatus)
 437:Generated_Source\PSoC5/PWM_rw.c **** 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 11


 438:Generated_Source\PSoC5/PWM_rw.c **** 
 439:Generated_Source\PSoC5/PWM_rw.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_rw.c ****         * Function Name: PWM_rw_ClearFIFO
 441:Generated_Source\PSoC5/PWM_rw.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_rw.c ****         *
 443:Generated_Source\PSoC5/PWM_rw.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_rw.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_rw.c ****         *
 446:Generated_Source\PSoC5/PWM_rw.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_rw.c ****         *  None
 448:Generated_Source\PSoC5/PWM_rw.c ****         *
 449:Generated_Source\PSoC5/PWM_rw.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_rw.c ****         *  None
 451:Generated_Source\PSoC5/PWM_rw.c ****         *
 452:Generated_Source\PSoC5/PWM_rw.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_rw.c ****         void PWM_rw_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_rw.c ****         {
 134              		.loc 1 454 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LBB14:
 140              	.LBB15:
 455:Generated_Source\PSoC5/PWM_rw.c ****             while(0u != (PWM_rw_ReadStatusRegister() & PWM_rw_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_rw.c ****             {
 457:Generated_Source\PSoC5/PWM_rw.c ****                 (void)PWM_rw_ReadCapture();
 458:Generated_Source\PSoC5/PWM_rw.c ****             }
 459:Generated_Source\PSoC5/PWM_rw.c ****         }
 460:Generated_Source\PSoC5/PWM_rw.c **** 
 461:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* PWM_rw_UseStatus */
 462:Generated_Source\PSoC5/PWM_rw.c **** 
 463:Generated_Source\PSoC5/PWM_rw.c **** #endif /* !PWM_rw_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_rw.c **** 
 465:Generated_Source\PSoC5/PWM_rw.c **** 
 466:Generated_Source\PSoC5/PWM_rw.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_rw.c **** * Function Name: PWM_rw_WritePeriod
 468:Generated_Source\PSoC5/PWM_rw.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_rw.c **** *
 470:Generated_Source\PSoC5/PWM_rw.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_rw.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_rw.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_rw.c **** *
 474:Generated_Source\PSoC5/PWM_rw.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_rw.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_rw.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_rw.c **** *
 478:Generated_Source\PSoC5/PWM_rw.c **** * Return:
 479:Generated_Source\PSoC5/PWM_rw.c **** *  None
 480:Generated_Source\PSoC5/PWM_rw.c **** *
 481:Generated_Source\PSoC5/PWM_rw.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_rw.c **** void PWM_rw_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/PWM_rw.c **** {
 484:Generated_Source\PSoC5/PWM_rw.c ****     #if(PWM_rw_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_rw.c ****         CY_SET_REG16(PWM_rw_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_rw.c ****     #else
 487:Generated_Source\PSoC5/PWM_rw.c ****         CY_SET_REG8(PWM_rw_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 12


 488:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (PWM_rw_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_rw.c **** }
 490:Generated_Source\PSoC5/PWM_rw.c **** 
 491:Generated_Source\PSoC5/PWM_rw.c **** #if (PWM_rw_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_rw.c **** 
 493:Generated_Source\PSoC5/PWM_rw.c **** 
 494:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_WriteCompare
 496:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_rw.c ****     *
 498:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_rw.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_rw.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_rw.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_rw.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_rw.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_rw.c ****     *
 505:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_rw.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_rw.c ****     *
 508:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 510:Generated_Source\PSoC5/PWM_rw.c ****     *
 511:Generated_Source\PSoC5/PWM_rw.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_rw.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_rw.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_rw.c ****     *
 515:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_rw.c ****     void PWM_rw_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/PWM_rw.c ****                                        
 518:Generated_Source\PSoC5/PWM_rw.c ****     {
 519:Generated_Source\PSoC5/PWM_rw.c ****         #if(PWM_rw_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_rw.c ****             CY_SET_REG16(PWM_rw_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_rw.c ****         #else
 522:Generated_Source\PSoC5/PWM_rw.c ****             CY_SET_REG8(PWM_rw_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_rw.c **** 
 525:Generated_Source\PSoC5/PWM_rw.c ****         #if (PWM_rw_PWMMode == PWM_rw__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_rw.c ****             #if(PWM_rw_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_rw.c ****                 CY_SET_REG16(PWM_rw_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_rw.c ****             #else
 529:Generated_Source\PSoC5/PWM_rw.c ****                 CY_SET_REG8(PWM_rw_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_rw.c ****             #endif /* (PWM_rw_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_PWMMode == PWM_rw__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_rw.c ****     }
 533:Generated_Source\PSoC5/PWM_rw.c **** 
 534:Generated_Source\PSoC5/PWM_rw.c **** 
 535:Generated_Source\PSoC5/PWM_rw.c **** #else
 536:Generated_Source\PSoC5/PWM_rw.c **** 
 537:Generated_Source\PSoC5/PWM_rw.c **** 
 538:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_WriteCompare1
 540:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_rw.c ****     *
 542:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_rw.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_rw.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 13


 545:Generated_Source\PSoC5/PWM_rw.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_rw.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_rw.c ****     *
 548:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_rw.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_rw.c ****     *
 551:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 553:Generated_Source\PSoC5/PWM_rw.c ****     *
 554:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_rw.c ****     void PWM_rw_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/PWM_rw.c ****                                         
 557:Generated_Source\PSoC5/PWM_rw.c ****     {
 558:Generated_Source\PSoC5/PWM_rw.c ****         #if(PWM_rw_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_rw.c ****             CY_SET_REG16(PWM_rw_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_rw.c ****         #else
 561:Generated_Source\PSoC5/PWM_rw.c ****             CY_SET_REG8(PWM_rw_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_rw.c ****     }
 564:Generated_Source\PSoC5/PWM_rw.c **** 
 565:Generated_Source\PSoC5/PWM_rw.c **** 
 566:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_WriteCompare2
 568:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_rw.c ****     *
 570:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_rw.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_rw.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_rw.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_rw.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_rw.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_rw.c ****     *
 577:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_rw.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_rw.c ****     *
 580:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 582:Generated_Source\PSoC5/PWM_rw.c ****     *
 583:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_rw.c ****     void PWM_rw_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/PWM_rw.c ****                                         
 586:Generated_Source\PSoC5/PWM_rw.c ****     {
 587:Generated_Source\PSoC5/PWM_rw.c ****         #if(PWM_rw_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_rw.c ****             CY_SET_REG16(PWM_rw_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_rw.c ****         #else
 590:Generated_Source\PSoC5/PWM_rw.c ****             CY_SET_REG8(PWM_rw_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_rw.c ****     }
 593:Generated_Source\PSoC5/PWM_rw.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_rw.c **** 
 595:Generated_Source\PSoC5/PWM_rw.c **** #if (PWM_rw_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_rw.c **** 
 597:Generated_Source\PSoC5/PWM_rw.c **** 
 598:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_rw.c ****     *
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 14


 602:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_rw.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_rw.c ****     *
 605:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_rw.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_rw.c ****     *
 608:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 610:Generated_Source\PSoC5/PWM_rw.c ****     *
 611:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_rw.c ****     void PWM_rw_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_rw.c ****     {
 614:Generated_Source\PSoC5/PWM_rw.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_rw.c ****         #if(!PWM_rw_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_rw.c ****             CY_SET_REG8(PWM_rw_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_rw.c ****         #else
 618:Generated_Source\PSoC5/PWM_rw.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_rw.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_rw.c ****             PWM_rw_DEADBAND_COUNT &= ((uint8)(~PWM_rw_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_rw.c **** 
 622:Generated_Source\PSoC5/PWM_rw.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_rw.c ****             #if(PWM_rw_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_rw.c ****                 PWM_rw_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_rw_DEADBAND_COUNT_SHIFT)) 
 625:Generated_Source\PSoC5/PWM_rw.c ****                                                     PWM_rw_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_rw.c ****             #else
 627:Generated_Source\PSoC5/PWM_rw.c ****                 PWM_rw_DEADBAND_COUNT |= deadtime & PWM_rw_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_rw.c ****             #endif /* (PWM_rw_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_rw.c **** 
 630:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (!PWM_rw_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_rw.c ****     }
 632:Generated_Source\PSoC5/PWM_rw.c **** 
 633:Generated_Source\PSoC5/PWM_rw.c **** 
 634:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_rw.c ****     *
 638:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_rw.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_rw.c ****     *
 641:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 643:Generated_Source\PSoC5/PWM_rw.c ****     *
 644:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_rw.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_rw.c ****     *
 647:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_rw.c ****     uint8 PWM_rw_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_rw.c ****     {
 650:Generated_Source\PSoC5/PWM_rw.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_rw.c ****         #if(!PWM_rw_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_rw.c ****             return (CY_GET_REG8(PWM_rw_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_rw.c ****         #else
 654:Generated_Source\PSoC5/PWM_rw.c **** 
 655:Generated_Source\PSoC5/PWM_rw.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_rw.c ****             #if(PWM_rw_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_rw.c ****                 return ((uint8)(((uint8)(PWM_rw_DEADBAND_COUNT & PWM_rw_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/PWM_rw.c ****                                                                            PWM_rw_DEADBAND_COUNT_SH
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 15


 659:Generated_Source\PSoC5/PWM_rw.c ****             #else
 660:Generated_Source\PSoC5/PWM_rw.c ****                 return (PWM_rw_DEADBAND_COUNT & PWM_rw_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_rw.c ****             #endif /* (PWM_rw_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (!PWM_rw_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_rw.c ****     }
 664:Generated_Source\PSoC5/PWM_rw.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_rw.c **** 
 666:Generated_Source\PSoC5/PWM_rw.c **** #if (PWM_rw_UseStatus || PWM_rw_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_rw.c **** 
 668:Generated_Source\PSoC5/PWM_rw.c **** 
 669:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_rw.c ****     *
 673:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_rw.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_rw.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_rw.c ****     *
 677:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_rw.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_rw.c ****     *
 680:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 682:Generated_Source\PSoC5/PWM_rw.c ****     *
 683:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_rw.c ****     void PWM_rw_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_rw.c ****     {
 686:Generated_Source\PSoC5/PWM_rw.c ****         CY_SET_REG8(PWM_rw_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/PWM_rw.c ****     }
 688:Generated_Source\PSoC5/PWM_rw.c **** 
 689:Generated_Source\PSoC5/PWM_rw.c **** 
 690:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_rw.c ****     *
 694:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_rw.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_rw.c ****     *
 697:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 699:Generated_Source\PSoC5/PWM_rw.c ****     *
 700:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_rw.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_rw.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_rw.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_rw.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_rw.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_rw.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_rw.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_rw.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_rw.c ****     *
 710:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_rw.c ****     uint8 PWM_rw_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_rw.c ****     {
 713:Generated_Source\PSoC5/PWM_rw.c ****         return (CY_GET_REG8(PWM_rw_STATUS_PTR));
 141              		.loc 1 713 0
 142 0000 034A     		ldr	r2, .L18
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 16


 143              	.LBE15:
 144              	.LBE14:
 145              	.LBB17:
 146              	.LBB18:
 714:Generated_Source\PSoC5/PWM_rw.c ****     }
 715:Generated_Source\PSoC5/PWM_rw.c **** 
 716:Generated_Source\PSoC5/PWM_rw.c **** #endif /* (PWM_rw_UseStatus || PWM_rw_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_rw.c **** 
 718:Generated_Source\PSoC5/PWM_rw.c **** 
 719:Generated_Source\PSoC5/PWM_rw.c **** #if (PWM_rw_UseControl)
 720:Generated_Source\PSoC5/PWM_rw.c **** 
 721:Generated_Source\PSoC5/PWM_rw.c **** 
 722:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_rw.c ****     *
 726:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_rw.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_rw.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_rw.c ****     *
 730:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 732:Generated_Source\PSoC5/PWM_rw.c ****     *
 733:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_rw.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_rw.c ****     *
 736:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_rw.c ****     uint8 PWM_rw_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_rw.c ****     {
 739:Generated_Source\PSoC5/PWM_rw.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_rw.c **** 
 741:Generated_Source\PSoC5/PWM_rw.c ****         result = CY_GET_REG8(PWM_rw_CONTROL_PTR);
 742:Generated_Source\PSoC5/PWM_rw.c ****         return (result);
 743:Generated_Source\PSoC5/PWM_rw.c ****     }
 744:Generated_Source\PSoC5/PWM_rw.c **** 
 745:Generated_Source\PSoC5/PWM_rw.c **** 
 746:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_rw.c ****     *
 750:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_rw.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_rw.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_rw.c ****     *
 754:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_rw.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_rw.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_rw.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_rw.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_rw.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_rw.c ****     *
 761:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 763:Generated_Source\PSoC5/PWM_rw.c ****     *
 764:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_rw.c ****     void PWM_rw_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_rw.c ****     {
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 17


 767:Generated_Source\PSoC5/PWM_rw.c ****         CY_SET_REG8(PWM_rw_CONTROL_PTR, control);
 768:Generated_Source\PSoC5/PWM_rw.c ****     }
 769:Generated_Source\PSoC5/PWM_rw.c **** 
 770:Generated_Source\PSoC5/PWM_rw.c **** #endif /* (PWM_rw_UseControl) */
 771:Generated_Source\PSoC5/PWM_rw.c **** 
 772:Generated_Source\PSoC5/PWM_rw.c **** 
 773:Generated_Source\PSoC5/PWM_rw.c **** #if (!PWM_rw_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_rw.c **** 
 775:Generated_Source\PSoC5/PWM_rw.c **** 
 776:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_ReadCapture
 778:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_rw.c ****     *
 780:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_rw.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_rw.c ****     *
 783:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 785:Generated_Source\PSoC5/PWM_rw.c ****     *
 786:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_rw.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_rw.c ****     *
 789:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_rw.c ****     uint8 PWM_rw_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_rw.c ****     {
 792:Generated_Source\PSoC5/PWM_rw.c ****         return (CY_GET_REG8(PWM_rw_CAPTURE_LSB_PTR));
 147              		.loc 1 792 0
 148 0002 0449     		ldr	r1, .L18+4
 149              	.L14:
 150              	.LBE18:
 151              	.LBE17:
 152              	.LBB20:
 153              	.LBB16:
 713:Generated_Source\PSoC5/PWM_rw.c ****     }
 154              		.loc 1 713 0
 155 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 156              	.LBE16:
 157              	.LBE20:
 455:Generated_Source\PSoC5/PWM_rw.c ****             while(0u != (PWM_rw_ReadStatusRegister() & PWM_rw_STATUS_FIFONEMPTY))
 158              		.loc 1 455 0
 159 0006 DB06     		lsls	r3, r3, #27
 160 0008 01D5     		bpl	.L17
 161              	.LBB21:
 162              	.LBB19:
 163              		.loc 1 792 0
 164 000a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 165 000c FAE7     		b	.L14
 166              	.L17:
 167              	.LBE19:
 168              	.LBE21:
 459:Generated_Source\PSoC5/PWM_rw.c **** 
 169              		.loc 1 459 0
 170 000e 7047     		bx	lr
 171              	.L19:
 172              		.align	2
 173              	.L18:
 174 0010 68650040 		.word	1073767784
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 18


 175 0014 58640040 		.word	1073767512
 176              		.cfi_endproc
 177              	.LFE6:
 178              		.size	PWM_rw_ClearFIFO, .-PWM_rw_ClearFIFO
 179              		.section	.text.PWM_rw_Init,"ax",%progbits
 180              		.align	1
 181              		.global	PWM_rw_Init
 182              		.thumb
 183              		.thumb_func
 184              		.type	PWM_rw_Init, %function
 185              	PWM_rw_Init:
 186              	.LFB1:
  85:Generated_Source\PSoC5/PWM_rw.c ****     #if (PWM_rw_UsingFixedFunction || PWM_rw_UseControl)
 187              		.loc 1 85 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191 0000 08B5     		push	{r3, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 3, -8
 194              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/PWM_rw.c ****                 ((uint8)(~PWM_rw_CTRL_CMPMODE1_MASK));
 195              		.loc 1 117 0
 196 0002 114A     		ldr	r2, .L21
 197 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 198              	.LVL1:
 119:Generated_Source\PSoC5/PWM_rw.c ****                                    PWM_rw_DEFAULT_COMPARE1_MODE;
 199              		.loc 1 119 0
 200 0006 03F0C003 		and	r3, r3, #192
 201              	.LVL2:
 202 000a 43F00903 		orr	r3, r3, #9
 203 000e 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/PWM_rw.c ****         #else /* (PWM_rw_Resolution == 16)*/
 204              		.loc 1 126 0
 205 0010 D37F     		ldrb	r3, [r2, #31]	@ zero_extendqisi2
 206 0012 43F00103 		orr	r3, r3, #1
 207 0016 D377     		strb	r3, [r2, #31]
 208              	.LVL3:
 209              	.LBB22:
 210              	.LBB23:
 406:Generated_Source\PSoC5/PWM_rw.c ****     }
 211              		.loc 1 406 0
 212 0018 F923     		movs	r3, #249
 213 001a 02F8713C 		strb	r3, [r2, #-113]
 214              	.LVL4:
 215              	.LBE23:
 216              	.LBE22:
 217              	.LBB24:
 218              	.LBB25:
 487:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (PWM_rw_UsingFixedFunction) */
 219              		.loc 1 487 0
 220 001e 02F8313C 		strb	r3, [r2, #-49]
 221              	.LVL5:
 222              	.LBE25:
 223              	.LBE24:
 224              	.LBB26:
 225              	.LBB27:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 19


 522:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_UsingFixedFunction) */
 226              		.loc 1 522 0
 227 0022 0A4B     		ldr	r3, .L21+4
 228 0024 7C22     		movs	r2, #124
 229 0026 1A70     		strb	r2, [r3]
 230              	.LVL6:
 231              	.LBE27:
 232              	.LBE26:
 233              	.LBB28:
 234              	.LBB29:
 686:Generated_Source\PSoC5/PWM_rw.c ****     }
 235              		.loc 1 686 0
 236 0028 0022     		movs	r2, #0
 237 002a 83F86021 		strb	r2, [r3, #352]
 238              	.LVL7:
 239              	.LBE29:
 240              	.LBE28:
 167:Generated_Source\PSoC5/PWM_rw.c ****             /* Use the interrupt output of the status register for IRQ output */
 241              		.loc 1 167 0
 242 002e FFF7FEFF 		bl	CyEnterCriticalSection
 243              	.LVL8:
 169:Generated_Source\PSoC5/PWM_rw.c **** 
 244              		.loc 1 169 0
 245 0032 074A     		ldr	r2, .L21+8
 246 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 247 0036 43F01003 		orr	r3, r3, #16
 248 003a 1370     		strb	r3, [r2]
 172:Generated_Source\PSoC5/PWM_rw.c **** 
 249              		.loc 1 172 0
 250 003c FFF7FEFF 		bl	CyExitCriticalSection
 251              	.LVL9:
 179:Generated_Source\PSoC5/PWM_rw.c **** 
 252              		.loc 1 179 0
 253 0040 BDE80840 		pop	{r3, lr}
 254              		.cfi_restore 14
 255              		.cfi_restore 3
 256              		.cfi_def_cfa_offset 0
 176:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_UseStatus) */
 257              		.loc 1 176 0
 258 0044 FFF7FEBF 		b	PWM_rw_ClearFIFO
 259              	.LVL10:
 260              	.L22:
 261              		.align	2
 262              	.L21:
 263 0048 79640040 		.word	1073767545
 264 004c 28640040 		.word	1073767464
 265 0050 98650040 		.word	1073767832
 266              		.cfi_endproc
 267              	.LFE1:
 268              		.size	PWM_rw_Init, .-PWM_rw_Init
 269              		.section	.text.PWM_rw_Start,"ax",%progbits
 270              		.align	1
 271              		.global	PWM_rw_Start
 272              		.thumb
 273              		.thumb_func
 274              		.type	PWM_rw_Start, %function
 275              	PWM_rw_Start:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 20


 276              	.LFB0:
  56:Generated_Source\PSoC5/PWM_rw.c ****     /* If not Initialized then initialize all required hardware and software */
 277              		.loc 1 56 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 10B5     		push	{r4, lr}
 282              		.cfi_def_cfa_offset 8
 283              		.cfi_offset 4, -8
 284              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/PWM_rw.c ****     {
 285              		.loc 1 58 0
 286 0002 054C     		ldr	r4, .L25
 287 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 288 0006 1BB9     		cbnz	r3, .L24
  60:Generated_Source\PSoC5/PWM_rw.c ****         PWM_rw_initVar = 1u;
 289              		.loc 1 60 0
 290 0008 FFF7FEFF 		bl	PWM_rw_Init
 291              	.LVL11:
  61:Generated_Source\PSoC5/PWM_rw.c ****     }
 292              		.loc 1 61 0
 293 000c 0123     		movs	r3, #1
 294 000e 2370     		strb	r3, [r4]
 295              	.L24:
  65:Generated_Source\PSoC5/PWM_rw.c **** 
 296              		.loc 1 65 0
 297 0010 BDE81040 		pop	{r4, lr}
 298              		.cfi_restore 14
 299              		.cfi_restore 4
 300              		.cfi_def_cfa_offset 0
  63:Generated_Source\PSoC5/PWM_rw.c **** 
 301              		.loc 1 63 0
 302 0014 FFF7FEBF 		b	PWM_rw_Enable
 303              	.LVL12:
 304              	.L26:
 305              		.align	2
 306              	.L25:
 307 0018 00000000 		.word	.LANCHOR0
 308              		.cfi_endproc
 309              	.LFE0:
 310              		.size	PWM_rw_Start, .-PWM_rw_Start
 311              		.section	.text.PWM_rw_WritePeriod,"ax",%progbits
 312              		.align	1
 313              		.global	PWM_rw_WritePeriod
 314              		.thumb
 315              		.thumb_func
 316              		.type	PWM_rw_WritePeriod, %function
 317              	PWM_rw_WritePeriod:
 318              	.LFB7:
 483:Generated_Source\PSoC5/PWM_rw.c ****     #if(PWM_rw_UsingFixedFunction)
 319              		.loc 1 483 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323              		@ link register save eliminated.
 324              	.LVL13:
 487:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (PWM_rw_UsingFixedFunction) */
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 21


 325              		.loc 1 487 0
 326 0000 014B     		ldr	r3, .L28
 327 0002 1870     		strb	r0, [r3]
 328 0004 7047     		bx	lr
 329              	.L29:
 330 0006 00BF     		.align	2
 331              	.L28:
 332 0008 48640040 		.word	1073767496
 333              		.cfi_endproc
 334              	.LFE7:
 335              		.size	PWM_rw_WritePeriod, .-PWM_rw_WritePeriod
 336              		.section	.text.PWM_rw_WriteCompare,"ax",%progbits
 337              		.align	1
 338              		.global	PWM_rw_WriteCompare
 339              		.thumb
 340              		.thumb_func
 341              		.type	PWM_rw_WriteCompare, %function
 342              	PWM_rw_WriteCompare:
 343              	.LFB8:
 518:Generated_Source\PSoC5/PWM_rw.c ****         #if(PWM_rw_UsingFixedFunction)
 344              		.loc 1 518 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 349              	.LVL14:
 522:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_UsingFixedFunction) */
 350              		.loc 1 522 0
 351 0000 014B     		ldr	r3, .L31
 352 0002 1870     		strb	r0, [r3]
 353 0004 7047     		bx	lr
 354              	.L32:
 355 0006 00BF     		.align	2
 356              	.L31:
 357 0008 28640040 		.word	1073767464
 358              		.cfi_endproc
 359              	.LFE8:
 360              		.size	PWM_rw_WriteCompare, .-PWM_rw_WriteCompare
 361              		.section	.text.PWM_rw_SetInterruptMode,"ax",%progbits
 362              		.align	1
 363              		.global	PWM_rw_SetInterruptMode
 364              		.thumb
 365              		.thumb_func
 366              		.type	PWM_rw_SetInterruptMode, %function
 367              	PWM_rw_SetInterruptMode:
 368              	.LFB9:
 685:Generated_Source\PSoC5/PWM_rw.c ****         CY_SET_REG8(PWM_rw_STATUS_MASK_PTR, interruptMode);
 369              		.loc 1 685 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL15:
 686:Generated_Source\PSoC5/PWM_rw.c ****     }
 375              		.loc 1 686 0
 376 0000 014B     		ldr	r3, .L34
 377 0002 1870     		strb	r0, [r3]
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 22


 378 0004 7047     		bx	lr
 379              	.L35:
 380 0006 00BF     		.align	2
 381              	.L34:
 382 0008 88650040 		.word	1073767816
 383              		.cfi_endproc
 384              	.LFE9:
 385              		.size	PWM_rw_SetInterruptMode, .-PWM_rw_SetInterruptMode
 386              		.section	.text.PWM_rw_ReadStatusRegister,"ax",%progbits
 387              		.align	1
 388              		.global	PWM_rw_ReadStatusRegister
 389              		.thumb
 390              		.thumb_func
 391              		.type	PWM_rw_ReadStatusRegister, %function
 392              	PWM_rw_ReadStatusRegister:
 393              	.LFB10:
 712:Generated_Source\PSoC5/PWM_rw.c ****         return (CY_GET_REG8(PWM_rw_STATUS_PTR));
 394              		.loc 1 712 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 713:Generated_Source\PSoC5/PWM_rw.c ****     }
 399              		.loc 1 713 0
 400 0000 014B     		ldr	r3, .L37
 401 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/PWM_rw.c **** 
 402              		.loc 1 714 0
 403 0004 7047     		bx	lr
 404              	.L38:
 405 0006 00BF     		.align	2
 406              	.L37:
 407 0008 68650040 		.word	1073767784
 408              		.cfi_endproc
 409              	.LFE10:
 410              		.size	PWM_rw_ReadStatusRegister, .-PWM_rw_ReadStatusRegister
 411              		.section	.text.PWM_rw_ReadControlRegister,"ax",%progbits
 412              		.align	1
 413              		.global	PWM_rw_ReadControlRegister
 414              		.thumb
 415              		.thumb_func
 416              		.type	PWM_rw_ReadControlRegister, %function
 417              	PWM_rw_ReadControlRegister:
 418              	.LFB11:
 738:Generated_Source\PSoC5/PWM_rw.c ****         uint8 result;
 419              		.loc 1 738 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 741:Generated_Source\PSoC5/PWM_rw.c ****         return (result);
 424              		.loc 1 741 0
 425 0000 014B     		ldr	r3, .L40
 426 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 427              	.LVL16:
 743:Generated_Source\PSoC5/PWM_rw.c **** 
 428              		.loc 1 743 0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 23


 429 0004 7047     		bx	lr
 430              	.L41:
 431 0006 00BF     		.align	2
 432              	.L40:
 433 0008 79640040 		.word	1073767545
 434              		.cfi_endproc
 435              	.LFE11:
 436              		.size	PWM_rw_ReadControlRegister, .-PWM_rw_ReadControlRegister
 437              		.section	.text.PWM_rw_WriteControlRegister,"ax",%progbits
 438              		.align	1
 439              		.global	PWM_rw_WriteControlRegister
 440              		.thumb
 441              		.thumb_func
 442              		.type	PWM_rw_WriteControlRegister, %function
 443              	PWM_rw_WriteControlRegister:
 444              	.LFB12:
 766:Generated_Source\PSoC5/PWM_rw.c ****         CY_SET_REG8(PWM_rw_CONTROL_PTR, control);
 445              		.loc 1 766 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 450              	.LVL17:
 767:Generated_Source\PSoC5/PWM_rw.c ****     }
 451              		.loc 1 767 0
 452 0000 014B     		ldr	r3, .L43
 453 0002 1870     		strb	r0, [r3]
 454 0004 7047     		bx	lr
 455              	.L44:
 456 0006 00BF     		.align	2
 457              	.L43:
 458 0008 79640040 		.word	1073767545
 459              		.cfi_endproc
 460              	.LFE12:
 461              		.size	PWM_rw_WriteControlRegister, .-PWM_rw_WriteControlRegister
 462              		.section	.text.PWM_rw_ReadCapture,"ax",%progbits
 463              		.align	1
 464              		.global	PWM_rw_ReadCapture
 465              		.thumb
 466              		.thumb_func
 467              		.type	PWM_rw_ReadCapture, %function
 468              	PWM_rw_ReadCapture:
 469              	.LFB13:
 791:Generated_Source\PSoC5/PWM_rw.c ****         return (CY_GET_REG8(PWM_rw_CAPTURE_LSB_PTR));
 470              		.loc 1 791 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475              		.loc 1 792 0
 476 0000 014B     		ldr	r3, .L46
 477 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:Generated_Source\PSoC5/PWM_rw.c ****     }
 478              		.loc 1 793 0
 479 0004 7047     		bx	lr
 480              	.L47:
 481 0006 00BF     		.align	2
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 24


 482              	.L46:
 483 0008 58640040 		.word	1073767512
 484              		.cfi_endproc
 485              	.LFE13:
 486              		.size	PWM_rw_ReadCapture, .-PWM_rw_ReadCapture
 487              		.section	.text.PWM_rw_ReadCompare,"ax",%progbits
 488              		.align	1
 489              		.global	PWM_rw_ReadCompare
 490              		.thumb
 491              		.thumb_func
 492              		.type	PWM_rw_ReadCompare, %function
 493              	PWM_rw_ReadCompare:
 494              	.LFB14:
 794:Generated_Source\PSoC5/PWM_rw.c **** 
 795:Generated_Source\PSoC5/PWM_rw.c **** #endif /* (!PWM_rw_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_rw.c **** 
 797:Generated_Source\PSoC5/PWM_rw.c **** 
 798:Generated_Source\PSoC5/PWM_rw.c **** #if (PWM_rw_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_rw.c **** 
 800:Generated_Source\PSoC5/PWM_rw.c **** 
 801:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_ReadCompare
 803:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_rw.c ****     *
 805:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_rw.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_rw.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_rw.c ****     *
 809:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 811:Generated_Source\PSoC5/PWM_rw.c ****     *
 812:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_rw.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_rw.c ****     *
 815:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_rw.c ****     uint8 PWM_rw_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_rw.c ****     {
 495              		.loc 1 817 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499              		@ link register save eliminated.
 818:Generated_Source\PSoC5/PWM_rw.c ****         #if(PWM_rw_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_rw.c ****             return ((uint8)CY_GET_REG16(PWM_rw_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_rw.c ****         #else
 821:Generated_Source\PSoC5/PWM_rw.c ****             return (CY_GET_REG8(PWM_rw_COMPARE1_LSB_PTR));
 500              		.loc 1 821 0
 501 0000 014B     		ldr	r3, .L49
 502 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 822:Generated_Source\PSoC5/PWM_rw.c ****         #endif /* (PWM_rw_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_rw.c ****     }
 503              		.loc 1 823 0
 504 0004 7047     		bx	lr
 505              	.L50:
 506 0006 00BF     		.align	2
 507              	.L49:
 508 0008 28640040 		.word	1073767464
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 25


 509              		.cfi_endproc
 510              	.LFE14:
 511              		.size	PWM_rw_ReadCompare, .-PWM_rw_ReadCompare
 512              		.section	.text.PWM_rw_ReadPeriod,"ax",%progbits
 513              		.align	1
 514              		.global	PWM_rw_ReadPeriod
 515              		.thumb
 516              		.thumb_func
 517              		.type	PWM_rw_ReadPeriod, %function
 518              	PWM_rw_ReadPeriod:
 519              	.LFB15:
 824:Generated_Source\PSoC5/PWM_rw.c **** 
 825:Generated_Source\PSoC5/PWM_rw.c **** #else
 826:Generated_Source\PSoC5/PWM_rw.c **** 
 827:Generated_Source\PSoC5/PWM_rw.c **** 
 828:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_ReadCompare1
 830:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_rw.c ****     *
 832:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_rw.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_rw.c ****     *
 835:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 837:Generated_Source\PSoC5/PWM_rw.c ****     *
 838:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_rw.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_rw.c ****     *
 841:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_rw.c ****     uint8 PWM_rw_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_rw.c ****     {
 844:Generated_Source\PSoC5/PWM_rw.c ****         return (CY_GET_REG8(PWM_rw_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/PWM_rw.c ****     }
 846:Generated_Source\PSoC5/PWM_rw.c **** 
 847:Generated_Source\PSoC5/PWM_rw.c **** 
 848:Generated_Source\PSoC5/PWM_rw.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_rw.c ****     * Function Name: PWM_rw_ReadCompare2
 850:Generated_Source\PSoC5/PWM_rw.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_rw.c ****     *
 852:Generated_Source\PSoC5/PWM_rw.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_rw.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_rw.c ****     *
 855:Generated_Source\PSoC5/PWM_rw.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_rw.c ****     *  None
 857:Generated_Source\PSoC5/PWM_rw.c ****     *
 858:Generated_Source\PSoC5/PWM_rw.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_rw.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_rw.c ****     *
 861:Generated_Source\PSoC5/PWM_rw.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_rw.c ****     uint8 PWM_rw_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_rw.c ****     {
 864:Generated_Source\PSoC5/PWM_rw.c ****         return (CY_GET_REG8(PWM_rw_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/PWM_rw.c ****     }
 866:Generated_Source\PSoC5/PWM_rw.c **** 
 867:Generated_Source\PSoC5/PWM_rw.c **** #endif /* (PWM_rw_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_rw.c **** 
 869:Generated_Source\PSoC5/PWM_rw.c **** 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 26


 870:Generated_Source\PSoC5/PWM_rw.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_rw.c **** * Function Name: PWM_rw_ReadPeriod
 872:Generated_Source\PSoC5/PWM_rw.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_rw.c **** *
 874:Generated_Source\PSoC5/PWM_rw.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_rw.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_rw.c **** *
 877:Generated_Source\PSoC5/PWM_rw.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_rw.c **** *  None
 879:Generated_Source\PSoC5/PWM_rw.c **** *
 880:Generated_Source\PSoC5/PWM_rw.c **** * Return:
 881:Generated_Source\PSoC5/PWM_rw.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_rw.c **** *
 883:Generated_Source\PSoC5/PWM_rw.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_rw.c **** uint8 PWM_rw_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_rw.c **** {
 520              		.loc 1 885 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 886:Generated_Source\PSoC5/PWM_rw.c ****     #if(PWM_rw_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_rw.c ****         return ((uint8)CY_GET_REG16(PWM_rw_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_rw.c ****     #else
 889:Generated_Source\PSoC5/PWM_rw.c ****         return (CY_GET_REG8(PWM_rw_PERIOD_LSB_PTR));
 525              		.loc 1 889 0
 526 0000 014B     		ldr	r3, .L52
 527 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:Generated_Source\PSoC5/PWM_rw.c ****     #endif /* (PWM_rw_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_rw.c **** }
 528              		.loc 1 891 0
 529 0004 7047     		bx	lr
 530              	.L53:
 531 0006 00BF     		.align	2
 532              	.L52:
 533 0008 48640040 		.word	1073767496
 534              		.cfi_endproc
 535              	.LFE15:
 536              		.size	PWM_rw_ReadPeriod, .-PWM_rw_ReadPeriod
 537              		.global	PWM_rw_initVar
 538              		.bss
 539              		.set	.LANCHOR0,. + 0
 540              		.type	PWM_rw_initVar, %object
 541              		.size	PWM_rw_initVar, 1
 542              	PWM_rw_initVar:
 543 0000 00       		.space	1
 544              		.text
 545              	.Letext0:
 546              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 547              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 548              		.section	.debug_info,"",%progbits
 549              	.Ldebug_info0:
 550 0000 AF030000 		.4byte	0x3af
 551 0004 0400     		.2byte	0x4
 552 0006 00000000 		.4byte	.Ldebug_abbrev0
 553 000a 04       		.byte	0x4
 554 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 27


 555 000c 23010000 		.4byte	.LASF40
 556 0010 0C       		.byte	0xc
 557 0011 8A000000 		.4byte	.LASF41
 558 0015 E0020000 		.4byte	.LASF42
 559 0019 30000000 		.4byte	.Ldebug_ranges0+0x30
 560 001d 00000000 		.4byte	0
 561 0021 00000000 		.4byte	.Ldebug_line0
 562 0025 02       		.uleb128 0x2
 563 0026 01       		.byte	0x1
 564 0027 06       		.byte	0x6
 565 0028 5F030000 		.4byte	.LASF0
 566 002c 02       		.uleb128 0x2
 567 002d 01       		.byte	0x1
 568 002e 08       		.byte	0x8
 569 002f DC000000 		.4byte	.LASF1
 570 0033 02       		.uleb128 0x2
 571 0034 02       		.byte	0x2
 572 0035 05       		.byte	0x5
 573 0036 D4010000 		.4byte	.LASF2
 574 003a 02       		.uleb128 0x2
 575 003b 02       		.byte	0x2
 576 003c 07       		.byte	0x7
 577 003d 6B000000 		.4byte	.LASF3
 578 0041 02       		.uleb128 0x2
 579 0042 04       		.byte	0x4
 580 0043 05       		.byte	0x5
 581 0044 31030000 		.4byte	.LASF4
 582 0048 02       		.uleb128 0x2
 583 0049 04       		.byte	0x4
 584 004a 07       		.byte	0x7
 585 004b 11020000 		.4byte	.LASF5
 586 004f 02       		.uleb128 0x2
 587 0050 08       		.byte	0x8
 588 0051 05       		.byte	0x5
 589 0052 8C020000 		.4byte	.LASF6
 590 0056 02       		.uleb128 0x2
 591 0057 08       		.byte	0x8
 592 0058 07       		.byte	0x7
 593 0059 C5000000 		.4byte	.LASF7
 594 005d 03       		.uleb128 0x3
 595 005e 04       		.byte	0x4
 596 005f 05       		.byte	0x5
 597 0060 696E7400 		.ascii	"int\000"
 598 0064 02       		.uleb128 0x2
 599 0065 04       		.byte	0x4
 600 0066 07       		.byte	0x7
 601 0067 23020000 		.4byte	.LASF8
 602 006b 04       		.uleb128 0x4
 603 006c B1010000 		.4byte	.LASF12
 604 0070 02       		.byte	0x2
 605 0071 E401     		.2byte	0x1e4
 606 0073 2C000000 		.4byte	0x2c
 607 0077 02       		.uleb128 0x2
 608 0078 04       		.byte	0x4
 609 0079 04       		.byte	0x4
 610 007a 51000000 		.4byte	.LASF9
 611 007e 02       		.uleb128 0x2
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 28


 612 007f 08       		.byte	0x8
 613 0080 04       		.byte	0x4
 614 0081 BF010000 		.4byte	.LASF10
 615 0085 02       		.uleb128 0x2
 616 0086 01       		.byte	0x1
 617 0087 08       		.byte	0x8
 618 0088 3A030000 		.4byte	.LASF11
 619 008c 04       		.uleb128 0x4
 620 008d 02010000 		.4byte	.LASF13
 621 0091 02       		.byte	0x2
 622 0092 8E02     		.2byte	0x28e
 623 0094 98000000 		.4byte	0x98
 624 0098 05       		.uleb128 0x5
 625 0099 6B000000 		.4byte	0x6b
 626 009d 02       		.uleb128 0x2
 627 009e 08       		.byte	0x8
 628 009f 04       		.byte	0x4
 629 00a0 3F030000 		.4byte	.LASF14
 630 00a4 02       		.uleb128 0x2
 631 00a5 04       		.byte	0x4
 632 00a6 07       		.byte	0x7
 633 00a7 83020000 		.4byte	.LASF15
 634 00ab 06       		.uleb128 0x6
 635 00ac CD020000 		.4byte	.LASF16
 636 00b0 01       		.byte	0x1
 637 00b1 1603     		.2byte	0x316
 638 00b3 6B000000 		.4byte	0x6b
 639 00b7 01       		.byte	0x1
 640 00b8 06       		.uleb128 0x6
 641 00b9 30020000 		.4byte	.LASF17
 642 00bd 01       		.byte	0x1
 643 00be C702     		.2byte	0x2c7
 644 00c0 6B000000 		.4byte	0x6b
 645 00c4 01       		.byte	0x1
 646 00c5 07       		.uleb128 0x7
 647 00c6 EA000000 		.4byte	.LASF18
 648 00ca 01       		.byte	0x1
 649 00cb AC02     		.2byte	0x2ac
 650 00cd 01       		.byte	0x1
 651 00ce DF000000 		.4byte	0xdf
 652 00d2 08       		.uleb128 0x8
 653 00d3 AD020000 		.4byte	.LASF20
 654 00d7 01       		.byte	0x1
 655 00d8 AC02     		.2byte	0x2ac
 656 00da 6B000000 		.4byte	0x6b
 657 00de 00       		.byte	0
 658 00df 07       		.uleb128 0x7
 659 00e0 FD010000 		.4byte	.LASF19
 660 00e4 01       		.byte	0x1
 661 00e5 0402     		.2byte	0x204
 662 00e7 01       		.byte	0x1
 663 00e8 F9000000 		.4byte	0xf9
 664 00ec 08       		.uleb128 0x8
 665 00ed 6B030000 		.4byte	.LASF21
 666 00f1 01       		.byte	0x1
 667 00f2 0402     		.2byte	0x204
 668 00f4 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 29


 669 00f8 00       		.byte	0
 670 00f9 07       		.uleb128 0x7
 671 00fa AA000000 		.4byte	.LASF22
 672 00fe 01       		.byte	0x1
 673 00ff E201     		.2byte	0x1e2
 674 0101 01       		.byte	0x1
 675 0102 13010000 		.4byte	0x113
 676 0106 08       		.uleb128 0x8
 677 0107 64000000 		.4byte	.LASF23
 678 010b 01       		.byte	0x1
 679 010c E201     		.2byte	0x1e2
 680 010e 6B000000 		.4byte	0x6b
 681 0112 00       		.byte	0
 682 0113 07       		.uleb128 0x7
 683 0114 4B030000 		.4byte	.LASF24
 684 0118 01       		.byte	0x1
 685 0119 9301     		.2byte	0x193
 686 011b 01       		.byte	0x1
 687 011c 2D010000 		.4byte	0x12d
 688 0120 08       		.uleb128 0x8
 689 0121 BD000000 		.4byte	.LASF25
 690 0125 01       		.byte	0x1
 691 0126 9301     		.2byte	0x193
 692 0128 6B000000 		.4byte	0x6b
 693 012c 00       		.byte	0
 694 012d 09       		.uleb128 0x9
 695 012e C6010000 		.4byte	.LASF26
 696 0132 01       		.byte	0x1
 697 0133 C7       		.byte	0xc7
 698 0134 00000000 		.4byte	.LFB2
 699 0138 10000000 		.4byte	.LFE2-.LFB2
 700 013c 01       		.uleb128 0x1
 701 013d 9C       		.byte	0x9c
 702 013e 09       		.uleb128 0x9
 703 013f DE010000 		.4byte	.LASF27
 704 0143 01       		.byte	0x1
 705 0144 E9       		.byte	0xe9
 706 0145 00000000 		.4byte	.LFB3
 707 0149 10000000 		.4byte	.LFE3-.LFB3
 708 014d 01       		.uleb128 0x1
 709 014e 9C       		.byte	0x9c
 710 014f 0A       		.uleb128 0xa
 711 0150 13010000 		.4byte	0x113
 712 0154 00000000 		.4byte	.LFB4
 713 0158 0C000000 		.4byte	.LFE4-.LFB4
 714 015c 01       		.uleb128 0x1
 715 015d 9C       		.byte	0x9c
 716 015e 6A010000 		.4byte	0x16a
 717 0162 0B       		.uleb128 0xb
 718 0163 20010000 		.4byte	0x120
 719 0167 01       		.uleb128 0x1
 720 0168 50       		.byte	0x50
 721 0169 00       		.byte	0
 722 016a 0C       		.uleb128 0xc
 723 016b EA010000 		.4byte	.LASF35
 724 016f 01       		.byte	0x1
 725 0170 A901     		.2byte	0x1a9
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 30


 726 0172 6B000000 		.4byte	0x6b
 727 0176 00000000 		.4byte	.LFB5
 728 017a 14000000 		.4byte	.LFE5-.LFB5
 729 017e 01       		.uleb128 0x1
 730 017f 9C       		.byte	0x9c
 731 0180 0D       		.uleb128 0xd
 732 0181 00000000 		.4byte	.LASF28
 733 0185 01       		.byte	0x1
 734 0186 C501     		.2byte	0x1c5
 735 0188 00000000 		.4byte	.LFB6
 736 018c 18000000 		.4byte	.LFE6-.LFB6
 737 0190 01       		.uleb128 0x1
 738 0191 9C       		.byte	0x9c
 739 0192 B7010000 		.4byte	0x1b7
 740 0196 0E       		.uleb128 0xe
 741 0197 B8000000 		.4byte	0xb8
 742 019b 00000000 		.4byte	.LBB14
 743 019f 00000000 		.4byte	.Ldebug_ranges0+0
 744 01a3 01       		.byte	0x1
 745 01a4 C701     		.2byte	0x1c7
 746 01a6 0E       		.uleb128 0xe
 747 01a7 AB000000 		.4byte	0xab
 748 01ab 02000000 		.4byte	.LBB17
 749 01af 18000000 		.4byte	.Ldebug_ranges0+0x18
 750 01b3 01       		.byte	0x1
 751 01b4 C901     		.2byte	0x1c9
 752 01b6 00       		.byte	0
 753 01b7 0F       		.uleb128 0xf
 754 01b8 7E000000 		.4byte	.LASF29
 755 01bc 01       		.byte	0x1
 756 01bd 54       		.byte	0x54
 757 01be 00000000 		.4byte	.LFB1
 758 01c2 54000000 		.4byte	.LFE1-.LFB1
 759 01c6 01       		.uleb128 0x1
 760 01c7 9C       		.byte	0x9c
 761 01c8 7A020000 		.4byte	0x27a
 762 01cc 10       		.uleb128 0x10
 763 01cd 7E020000 		.4byte	.LASF30
 764 01d1 01       		.byte	0x1
 765 01d2 57       		.byte	0x57
 766 01d3 6B000000 		.4byte	0x6b
 767 01d7 00000000 		.4byte	.LLST0
 768 01db 10       		.uleb128 0x10
 769 01dc 3B000000 		.4byte	.LASF31
 770 01e0 01       		.byte	0x1
 771 01e1 5D       		.byte	0x5d
 772 01e2 6B000000 		.4byte	0x6b
 773 01e6 18000000 		.4byte	.LLST1
 774 01ea 11       		.uleb128 0x11
 775 01eb 13010000 		.4byte	0x113
 776 01ef 18000000 		.4byte	.LBB22
 777 01f3 06000000 		.4byte	.LBE22-.LBB22
 778 01f7 01       		.byte	0x1
 779 01f8 85       		.byte	0x85
 780 01f9 07020000 		.4byte	0x207
 781 01fd 12       		.uleb128 0x12
 782 01fe 20010000 		.4byte	0x120
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 31


 783 0202 2B000000 		.4byte	.LLST2
 784 0206 00       		.byte	0
 785 0207 11       		.uleb128 0x11
 786 0208 F9000000 		.4byte	0xf9
 787 020c 1E000000 		.4byte	.LBB24
 788 0210 04000000 		.4byte	.LBE24-.LBB24
 789 0214 01       		.byte	0x1
 790 0215 88       		.byte	0x88
 791 0216 24020000 		.4byte	0x224
 792 021a 12       		.uleb128 0x12
 793 021b 06010000 		.4byte	0x106
 794 021f 40000000 		.4byte	.LLST3
 795 0223 00       		.byte	0
 796 0224 11       		.uleb128 0x11
 797 0225 DF000000 		.4byte	0xdf
 798 0229 22000000 		.4byte	.LBB26
 799 022d 06000000 		.4byte	.LBE26-.LBB26
 800 0231 01       		.byte	0x1
 801 0232 8B       		.byte	0x8b
 802 0233 41020000 		.4byte	0x241
 803 0237 12       		.uleb128 0x12
 804 0238 EC000000 		.4byte	0xec
 805 023c 55000000 		.4byte	.LLST4
 806 0240 00       		.byte	0
 807 0241 11       		.uleb128 0x11
 808 0242 C5000000 		.4byte	0xc5
 809 0246 28000000 		.4byte	.LBB28
 810 024a 06000000 		.4byte	.LBE28-.LBB28
 811 024e 01       		.byte	0x1
 812 024f 9A       		.byte	0x9a
 813 0250 5E020000 		.4byte	0x25e
 814 0254 12       		.uleb128 0x12
 815 0255 D2000000 		.4byte	0xd2
 816 0259 6A000000 		.4byte	.LLST5
 817 025d 00       		.byte	0
 818 025e 13       		.uleb128 0x13
 819 025f 32000000 		.4byte	.LVL8
 820 0263 9C030000 		.4byte	0x39c
 821 0267 13       		.uleb128 0x13
 822 0268 40000000 		.4byte	.LVL9
 823 026c A7030000 		.4byte	0x3a7
 824 0270 14       		.uleb128 0x14
 825 0271 48000000 		.4byte	.LVL10
 826 0275 80010000 		.4byte	0x180
 827 0279 00       		.byte	0
 828 027a 0F       		.uleb128 0xf
 829 027b 57000000 		.4byte	.LASF32
 830 027f 01       		.byte	0x1
 831 0280 37       		.byte	0x37
 832 0281 00000000 		.4byte	.LFB0
 833 0285 1C000000 		.4byte	.LFE0-.LFB0
 834 0289 01       		.uleb128 0x1
 835 028a 9C       		.byte	0x9c
 836 028b A2020000 		.4byte	0x2a2
 837 028f 13       		.uleb128 0x13
 838 0290 0C000000 		.4byte	.LVL11
 839 0294 B7010000 		.4byte	0x1b7
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 32


 840 0298 14       		.uleb128 0x14
 841 0299 18000000 		.4byte	.LVL12
 842 029d 2D010000 		.4byte	0x12d
 843 02a1 00       		.byte	0
 844 02a2 0A       		.uleb128 0xa
 845 02a3 F9000000 		.4byte	0xf9
 846 02a7 00000000 		.4byte	.LFB7
 847 02ab 0C000000 		.4byte	.LFE7-.LFB7
 848 02af 01       		.uleb128 0x1
 849 02b0 9C       		.byte	0x9c
 850 02b1 BD020000 		.4byte	0x2bd
 851 02b5 0B       		.uleb128 0xb
 852 02b6 06010000 		.4byte	0x106
 853 02ba 01       		.uleb128 0x1
 854 02bb 50       		.byte	0x50
 855 02bc 00       		.byte	0
 856 02bd 0A       		.uleb128 0xa
 857 02be DF000000 		.4byte	0xdf
 858 02c2 00000000 		.4byte	.LFB8
 859 02c6 0C000000 		.4byte	.LFE8-.LFB8
 860 02ca 01       		.uleb128 0x1
 861 02cb 9C       		.byte	0x9c
 862 02cc D8020000 		.4byte	0x2d8
 863 02d0 0B       		.uleb128 0xb
 864 02d1 EC000000 		.4byte	0xec
 865 02d5 01       		.uleb128 0x1
 866 02d6 50       		.byte	0x50
 867 02d7 00       		.byte	0
 868 02d8 0A       		.uleb128 0xa
 869 02d9 C5000000 		.4byte	0xc5
 870 02dd 00000000 		.4byte	.LFB9
 871 02e1 0C000000 		.4byte	.LFE9-.LFB9
 872 02e5 01       		.uleb128 0x1
 873 02e6 9C       		.byte	0x9c
 874 02e7 F3020000 		.4byte	0x2f3
 875 02eb 0B       		.uleb128 0xb
 876 02ec D2000000 		.4byte	0xd2
 877 02f0 01       		.uleb128 0x1
 878 02f1 50       		.byte	0x50
 879 02f2 00       		.byte	0
 880 02f3 15       		.uleb128 0x15
 881 02f4 B8000000 		.4byte	0xb8
 882 02f8 00000000 		.4byte	.LFB10
 883 02fc 0C000000 		.4byte	.LFE10-.LFB10
 884 0300 01       		.uleb128 0x1
 885 0301 9C       		.byte	0x9c
 886 0302 16       		.uleb128 0x16
 887 0303 20000000 		.4byte	.LASF43
 888 0307 01       		.byte	0x1
 889 0308 E102     		.2byte	0x2e1
 890 030a 6B000000 		.4byte	0x6b
 891 030e 00000000 		.4byte	.LFB11
 892 0312 0C000000 		.4byte	.LFE11-.LFB11
 893 0316 01       		.uleb128 0x1
 894 0317 9C       		.byte	0x9c
 895 0318 2B030000 		.4byte	0x32b
 896 031c 17       		.uleb128 0x17
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 33


 897 031d 60020000 		.4byte	.LASF33
 898 0321 01       		.byte	0x1
 899 0322 E302     		.2byte	0x2e3
 900 0324 6B000000 		.4byte	0x6b
 901 0328 01       		.uleb128 0x1
 902 0329 50       		.byte	0x50
 903 032a 00       		.byte	0
 904 032b 0D       		.uleb128 0xd
 905 032c 07010000 		.4byte	.LASF34
 906 0330 01       		.byte	0x1
 907 0331 FD02     		.2byte	0x2fd
 908 0333 00000000 		.4byte	.LFB12
 909 0337 0C000000 		.4byte	.LFE12-.LFB12
 910 033b 01       		.uleb128 0x1
 911 033c 9C       		.byte	0x9c
 912 033d 50030000 		.4byte	0x350
 913 0341 18       		.uleb128 0x18
 914 0342 B7010000 		.4byte	.LASF44
 915 0346 01       		.byte	0x1
 916 0347 FD02     		.2byte	0x2fd
 917 0349 6B000000 		.4byte	0x6b
 918 034d 01       		.uleb128 0x1
 919 034e 50       		.byte	0x50
 920 034f 00       		.byte	0
 921 0350 15       		.uleb128 0x15
 922 0351 AB000000 		.4byte	0xab
 923 0355 00000000 		.4byte	.LFB13
 924 0359 0C000000 		.4byte	.LFE13-.LFB13
 925 035d 01       		.uleb128 0x1
 926 035e 9C       		.byte	0x9c
 927 035f 0C       		.uleb128 0xc
 928 0360 9A020000 		.4byte	.LASF36
 929 0364 01       		.byte	0x1
 930 0365 3003     		.2byte	0x330
 931 0367 6B000000 		.4byte	0x6b
 932 036b 00000000 		.4byte	.LFB14
 933 036f 0C000000 		.4byte	.LFE14-.LFB14
 934 0373 01       		.uleb128 0x1
 935 0374 9C       		.byte	0x9c
 936 0375 0C       		.uleb128 0xc
 937 0376 BB020000 		.4byte	.LASF37
 938 037a 01       		.byte	0x1
 939 037b 7403     		.2byte	0x374
 940 037d 6B000000 		.4byte	0x6b
 941 0381 00000000 		.4byte	.LFB15
 942 0385 0C000000 		.4byte	.LFE15-.LFB15
 943 0389 01       		.uleb128 0x1
 944 038a 9C       		.byte	0x9c
 945 038b 19       		.uleb128 0x19
 946 038c 11000000 		.4byte	.LASF45
 947 0390 01       		.byte	0x1
 948 0391 20       		.byte	0x20
 949 0392 6B000000 		.4byte	0x6b
 950 0396 05       		.uleb128 0x5
 951 0397 03       		.byte	0x3
 952 0398 00000000 		.4byte	PWM_rw_initVar
 953 039c 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 34


 954 039d 67020000 		.4byte	.LASF38
 955 03a1 67020000 		.4byte	.LASF38
 956 03a5 03       		.byte	0x3
 957 03a6 7D       		.byte	0x7d
 958 03a7 1A       		.uleb128 0x1a
 959 03a8 4A020000 		.4byte	.LASF39
 960 03ac 4A020000 		.4byte	.LASF39
 961 03b0 03       		.byte	0x3
 962 03b1 7E       		.byte	0x7e
 963 03b2 00       		.byte	0
 964              		.section	.debug_abbrev,"",%progbits
 965              	.Ldebug_abbrev0:
 966 0000 01       		.uleb128 0x1
 967 0001 11       		.uleb128 0x11
 968 0002 01       		.byte	0x1
 969 0003 25       		.uleb128 0x25
 970 0004 0E       		.uleb128 0xe
 971 0005 13       		.uleb128 0x13
 972 0006 0B       		.uleb128 0xb
 973 0007 03       		.uleb128 0x3
 974 0008 0E       		.uleb128 0xe
 975 0009 1B       		.uleb128 0x1b
 976 000a 0E       		.uleb128 0xe
 977 000b 55       		.uleb128 0x55
 978 000c 17       		.uleb128 0x17
 979 000d 11       		.uleb128 0x11
 980 000e 01       		.uleb128 0x1
 981 000f 10       		.uleb128 0x10
 982 0010 17       		.uleb128 0x17
 983 0011 00       		.byte	0
 984 0012 00       		.byte	0
 985 0013 02       		.uleb128 0x2
 986 0014 24       		.uleb128 0x24
 987 0015 00       		.byte	0
 988 0016 0B       		.uleb128 0xb
 989 0017 0B       		.uleb128 0xb
 990 0018 3E       		.uleb128 0x3e
 991 0019 0B       		.uleb128 0xb
 992 001a 03       		.uleb128 0x3
 993 001b 0E       		.uleb128 0xe
 994 001c 00       		.byte	0
 995 001d 00       		.byte	0
 996 001e 03       		.uleb128 0x3
 997 001f 24       		.uleb128 0x24
 998 0020 00       		.byte	0
 999 0021 0B       		.uleb128 0xb
 1000 0022 0B       		.uleb128 0xb
 1001 0023 3E       		.uleb128 0x3e
 1002 0024 0B       		.uleb128 0xb
 1003 0025 03       		.uleb128 0x3
 1004 0026 08       		.uleb128 0x8
 1005 0027 00       		.byte	0
 1006 0028 00       		.byte	0
 1007 0029 04       		.uleb128 0x4
 1008 002a 16       		.uleb128 0x16
 1009 002b 00       		.byte	0
 1010 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 35


 1011 002d 0E       		.uleb128 0xe
 1012 002e 3A       		.uleb128 0x3a
 1013 002f 0B       		.uleb128 0xb
 1014 0030 3B       		.uleb128 0x3b
 1015 0031 05       		.uleb128 0x5
 1016 0032 49       		.uleb128 0x49
 1017 0033 13       		.uleb128 0x13
 1018 0034 00       		.byte	0
 1019 0035 00       		.byte	0
 1020 0036 05       		.uleb128 0x5
 1021 0037 35       		.uleb128 0x35
 1022 0038 00       		.byte	0
 1023 0039 49       		.uleb128 0x49
 1024 003a 13       		.uleb128 0x13
 1025 003b 00       		.byte	0
 1026 003c 00       		.byte	0
 1027 003d 06       		.uleb128 0x6
 1028 003e 2E       		.uleb128 0x2e
 1029 003f 00       		.byte	0
 1030 0040 3F       		.uleb128 0x3f
 1031 0041 19       		.uleb128 0x19
 1032 0042 03       		.uleb128 0x3
 1033 0043 0E       		.uleb128 0xe
 1034 0044 3A       		.uleb128 0x3a
 1035 0045 0B       		.uleb128 0xb
 1036 0046 3B       		.uleb128 0x3b
 1037 0047 05       		.uleb128 0x5
 1038 0048 27       		.uleb128 0x27
 1039 0049 19       		.uleb128 0x19
 1040 004a 49       		.uleb128 0x49
 1041 004b 13       		.uleb128 0x13
 1042 004c 20       		.uleb128 0x20
 1043 004d 0B       		.uleb128 0xb
 1044 004e 00       		.byte	0
 1045 004f 00       		.byte	0
 1046 0050 07       		.uleb128 0x7
 1047 0051 2E       		.uleb128 0x2e
 1048 0052 01       		.byte	0x1
 1049 0053 3F       		.uleb128 0x3f
 1050 0054 19       		.uleb128 0x19
 1051 0055 03       		.uleb128 0x3
 1052 0056 0E       		.uleb128 0xe
 1053 0057 3A       		.uleb128 0x3a
 1054 0058 0B       		.uleb128 0xb
 1055 0059 3B       		.uleb128 0x3b
 1056 005a 05       		.uleb128 0x5
 1057 005b 27       		.uleb128 0x27
 1058 005c 19       		.uleb128 0x19
 1059 005d 20       		.uleb128 0x20
 1060 005e 0B       		.uleb128 0xb
 1061 005f 01       		.uleb128 0x1
 1062 0060 13       		.uleb128 0x13
 1063 0061 00       		.byte	0
 1064 0062 00       		.byte	0
 1065 0063 08       		.uleb128 0x8
 1066 0064 05       		.uleb128 0x5
 1067 0065 00       		.byte	0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 36


 1068 0066 03       		.uleb128 0x3
 1069 0067 0E       		.uleb128 0xe
 1070 0068 3A       		.uleb128 0x3a
 1071 0069 0B       		.uleb128 0xb
 1072 006a 3B       		.uleb128 0x3b
 1073 006b 05       		.uleb128 0x5
 1074 006c 49       		.uleb128 0x49
 1075 006d 13       		.uleb128 0x13
 1076 006e 00       		.byte	0
 1077 006f 00       		.byte	0
 1078 0070 09       		.uleb128 0x9
 1079 0071 2E       		.uleb128 0x2e
 1080 0072 00       		.byte	0
 1081 0073 3F       		.uleb128 0x3f
 1082 0074 19       		.uleb128 0x19
 1083 0075 03       		.uleb128 0x3
 1084 0076 0E       		.uleb128 0xe
 1085 0077 3A       		.uleb128 0x3a
 1086 0078 0B       		.uleb128 0xb
 1087 0079 3B       		.uleb128 0x3b
 1088 007a 0B       		.uleb128 0xb
 1089 007b 27       		.uleb128 0x27
 1090 007c 19       		.uleb128 0x19
 1091 007d 11       		.uleb128 0x11
 1092 007e 01       		.uleb128 0x1
 1093 007f 12       		.uleb128 0x12
 1094 0080 06       		.uleb128 0x6
 1095 0081 40       		.uleb128 0x40
 1096 0082 18       		.uleb128 0x18
 1097 0083 9742     		.uleb128 0x2117
 1098 0085 19       		.uleb128 0x19
 1099 0086 00       		.byte	0
 1100 0087 00       		.byte	0
 1101 0088 0A       		.uleb128 0xa
 1102 0089 2E       		.uleb128 0x2e
 1103 008a 01       		.byte	0x1
 1104 008b 31       		.uleb128 0x31
 1105 008c 13       		.uleb128 0x13
 1106 008d 11       		.uleb128 0x11
 1107 008e 01       		.uleb128 0x1
 1108 008f 12       		.uleb128 0x12
 1109 0090 06       		.uleb128 0x6
 1110 0091 40       		.uleb128 0x40
 1111 0092 18       		.uleb128 0x18
 1112 0093 9742     		.uleb128 0x2117
 1113 0095 19       		.uleb128 0x19
 1114 0096 01       		.uleb128 0x1
 1115 0097 13       		.uleb128 0x13
 1116 0098 00       		.byte	0
 1117 0099 00       		.byte	0
 1118 009a 0B       		.uleb128 0xb
 1119 009b 05       		.uleb128 0x5
 1120 009c 00       		.byte	0
 1121 009d 31       		.uleb128 0x31
 1122 009e 13       		.uleb128 0x13
 1123 009f 02       		.uleb128 0x2
 1124 00a0 18       		.uleb128 0x18
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 37


 1125 00a1 00       		.byte	0
 1126 00a2 00       		.byte	0
 1127 00a3 0C       		.uleb128 0xc
 1128 00a4 2E       		.uleb128 0x2e
 1129 00a5 00       		.byte	0
 1130 00a6 3F       		.uleb128 0x3f
 1131 00a7 19       		.uleb128 0x19
 1132 00a8 03       		.uleb128 0x3
 1133 00a9 0E       		.uleb128 0xe
 1134 00aa 3A       		.uleb128 0x3a
 1135 00ab 0B       		.uleb128 0xb
 1136 00ac 3B       		.uleb128 0x3b
 1137 00ad 05       		.uleb128 0x5
 1138 00ae 27       		.uleb128 0x27
 1139 00af 19       		.uleb128 0x19
 1140 00b0 49       		.uleb128 0x49
 1141 00b1 13       		.uleb128 0x13
 1142 00b2 11       		.uleb128 0x11
 1143 00b3 01       		.uleb128 0x1
 1144 00b4 12       		.uleb128 0x12
 1145 00b5 06       		.uleb128 0x6
 1146 00b6 40       		.uleb128 0x40
 1147 00b7 18       		.uleb128 0x18
 1148 00b8 9742     		.uleb128 0x2117
 1149 00ba 19       		.uleb128 0x19
 1150 00bb 00       		.byte	0
 1151 00bc 00       		.byte	0
 1152 00bd 0D       		.uleb128 0xd
 1153 00be 2E       		.uleb128 0x2e
 1154 00bf 01       		.byte	0x1
 1155 00c0 3F       		.uleb128 0x3f
 1156 00c1 19       		.uleb128 0x19
 1157 00c2 03       		.uleb128 0x3
 1158 00c3 0E       		.uleb128 0xe
 1159 00c4 3A       		.uleb128 0x3a
 1160 00c5 0B       		.uleb128 0xb
 1161 00c6 3B       		.uleb128 0x3b
 1162 00c7 05       		.uleb128 0x5
 1163 00c8 27       		.uleb128 0x27
 1164 00c9 19       		.uleb128 0x19
 1165 00ca 11       		.uleb128 0x11
 1166 00cb 01       		.uleb128 0x1
 1167 00cc 12       		.uleb128 0x12
 1168 00cd 06       		.uleb128 0x6
 1169 00ce 40       		.uleb128 0x40
 1170 00cf 18       		.uleb128 0x18
 1171 00d0 9742     		.uleb128 0x2117
 1172 00d2 19       		.uleb128 0x19
 1173 00d3 01       		.uleb128 0x1
 1174 00d4 13       		.uleb128 0x13
 1175 00d5 00       		.byte	0
 1176 00d6 00       		.byte	0
 1177 00d7 0E       		.uleb128 0xe
 1178 00d8 1D       		.uleb128 0x1d
 1179 00d9 00       		.byte	0
 1180 00da 31       		.uleb128 0x31
 1181 00db 13       		.uleb128 0x13
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 38


 1182 00dc 52       		.uleb128 0x52
 1183 00dd 01       		.uleb128 0x1
 1184 00de 55       		.uleb128 0x55
 1185 00df 17       		.uleb128 0x17
 1186 00e0 58       		.uleb128 0x58
 1187 00e1 0B       		.uleb128 0xb
 1188 00e2 59       		.uleb128 0x59
 1189 00e3 05       		.uleb128 0x5
 1190 00e4 00       		.byte	0
 1191 00e5 00       		.byte	0
 1192 00e6 0F       		.uleb128 0xf
 1193 00e7 2E       		.uleb128 0x2e
 1194 00e8 01       		.byte	0x1
 1195 00e9 3F       		.uleb128 0x3f
 1196 00ea 19       		.uleb128 0x19
 1197 00eb 03       		.uleb128 0x3
 1198 00ec 0E       		.uleb128 0xe
 1199 00ed 3A       		.uleb128 0x3a
 1200 00ee 0B       		.uleb128 0xb
 1201 00ef 3B       		.uleb128 0x3b
 1202 00f0 0B       		.uleb128 0xb
 1203 00f1 27       		.uleb128 0x27
 1204 00f2 19       		.uleb128 0x19
 1205 00f3 11       		.uleb128 0x11
 1206 00f4 01       		.uleb128 0x1
 1207 00f5 12       		.uleb128 0x12
 1208 00f6 06       		.uleb128 0x6
 1209 00f7 40       		.uleb128 0x40
 1210 00f8 18       		.uleb128 0x18
 1211 00f9 9742     		.uleb128 0x2117
 1212 00fb 19       		.uleb128 0x19
 1213 00fc 01       		.uleb128 0x1
 1214 00fd 13       		.uleb128 0x13
 1215 00fe 00       		.byte	0
 1216 00ff 00       		.byte	0
 1217 0100 10       		.uleb128 0x10
 1218 0101 34       		.uleb128 0x34
 1219 0102 00       		.byte	0
 1220 0103 03       		.uleb128 0x3
 1221 0104 0E       		.uleb128 0xe
 1222 0105 3A       		.uleb128 0x3a
 1223 0106 0B       		.uleb128 0xb
 1224 0107 3B       		.uleb128 0x3b
 1225 0108 0B       		.uleb128 0xb
 1226 0109 49       		.uleb128 0x49
 1227 010a 13       		.uleb128 0x13
 1228 010b 02       		.uleb128 0x2
 1229 010c 17       		.uleb128 0x17
 1230 010d 00       		.byte	0
 1231 010e 00       		.byte	0
 1232 010f 11       		.uleb128 0x11
 1233 0110 1D       		.uleb128 0x1d
 1234 0111 01       		.byte	0x1
 1235 0112 31       		.uleb128 0x31
 1236 0113 13       		.uleb128 0x13
 1237 0114 11       		.uleb128 0x11
 1238 0115 01       		.uleb128 0x1
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 39


 1239 0116 12       		.uleb128 0x12
 1240 0117 06       		.uleb128 0x6
 1241 0118 58       		.uleb128 0x58
 1242 0119 0B       		.uleb128 0xb
 1243 011a 59       		.uleb128 0x59
 1244 011b 0B       		.uleb128 0xb
 1245 011c 01       		.uleb128 0x1
 1246 011d 13       		.uleb128 0x13
 1247 011e 00       		.byte	0
 1248 011f 00       		.byte	0
 1249 0120 12       		.uleb128 0x12
 1250 0121 05       		.uleb128 0x5
 1251 0122 00       		.byte	0
 1252 0123 31       		.uleb128 0x31
 1253 0124 13       		.uleb128 0x13
 1254 0125 02       		.uleb128 0x2
 1255 0126 17       		.uleb128 0x17
 1256 0127 00       		.byte	0
 1257 0128 00       		.byte	0
 1258 0129 13       		.uleb128 0x13
 1259 012a 898201   		.uleb128 0x4109
 1260 012d 00       		.byte	0
 1261 012e 11       		.uleb128 0x11
 1262 012f 01       		.uleb128 0x1
 1263 0130 31       		.uleb128 0x31
 1264 0131 13       		.uleb128 0x13
 1265 0132 00       		.byte	0
 1266 0133 00       		.byte	0
 1267 0134 14       		.uleb128 0x14
 1268 0135 898201   		.uleb128 0x4109
 1269 0138 00       		.byte	0
 1270 0139 11       		.uleb128 0x11
 1271 013a 01       		.uleb128 0x1
 1272 013b 9542     		.uleb128 0x2115
 1273 013d 19       		.uleb128 0x19
 1274 013e 31       		.uleb128 0x31
 1275 013f 13       		.uleb128 0x13
 1276 0140 00       		.byte	0
 1277 0141 00       		.byte	0
 1278 0142 15       		.uleb128 0x15
 1279 0143 2E       		.uleb128 0x2e
 1280 0144 00       		.byte	0
 1281 0145 31       		.uleb128 0x31
 1282 0146 13       		.uleb128 0x13
 1283 0147 11       		.uleb128 0x11
 1284 0148 01       		.uleb128 0x1
 1285 0149 12       		.uleb128 0x12
 1286 014a 06       		.uleb128 0x6
 1287 014b 40       		.uleb128 0x40
 1288 014c 18       		.uleb128 0x18
 1289 014d 9742     		.uleb128 0x2117
 1290 014f 19       		.uleb128 0x19
 1291 0150 00       		.byte	0
 1292 0151 00       		.byte	0
 1293 0152 16       		.uleb128 0x16
 1294 0153 2E       		.uleb128 0x2e
 1295 0154 01       		.byte	0x1
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 40


 1296 0155 3F       		.uleb128 0x3f
 1297 0156 19       		.uleb128 0x19
 1298 0157 03       		.uleb128 0x3
 1299 0158 0E       		.uleb128 0xe
 1300 0159 3A       		.uleb128 0x3a
 1301 015a 0B       		.uleb128 0xb
 1302 015b 3B       		.uleb128 0x3b
 1303 015c 05       		.uleb128 0x5
 1304 015d 27       		.uleb128 0x27
 1305 015e 19       		.uleb128 0x19
 1306 015f 49       		.uleb128 0x49
 1307 0160 13       		.uleb128 0x13
 1308 0161 11       		.uleb128 0x11
 1309 0162 01       		.uleb128 0x1
 1310 0163 12       		.uleb128 0x12
 1311 0164 06       		.uleb128 0x6
 1312 0165 40       		.uleb128 0x40
 1313 0166 18       		.uleb128 0x18
 1314 0167 9742     		.uleb128 0x2117
 1315 0169 19       		.uleb128 0x19
 1316 016a 01       		.uleb128 0x1
 1317 016b 13       		.uleb128 0x13
 1318 016c 00       		.byte	0
 1319 016d 00       		.byte	0
 1320 016e 17       		.uleb128 0x17
 1321 016f 34       		.uleb128 0x34
 1322 0170 00       		.byte	0
 1323 0171 03       		.uleb128 0x3
 1324 0172 0E       		.uleb128 0xe
 1325 0173 3A       		.uleb128 0x3a
 1326 0174 0B       		.uleb128 0xb
 1327 0175 3B       		.uleb128 0x3b
 1328 0176 05       		.uleb128 0x5
 1329 0177 49       		.uleb128 0x49
 1330 0178 13       		.uleb128 0x13
 1331 0179 02       		.uleb128 0x2
 1332 017a 18       		.uleb128 0x18
 1333 017b 00       		.byte	0
 1334 017c 00       		.byte	0
 1335 017d 18       		.uleb128 0x18
 1336 017e 05       		.uleb128 0x5
 1337 017f 00       		.byte	0
 1338 0180 03       		.uleb128 0x3
 1339 0181 0E       		.uleb128 0xe
 1340 0182 3A       		.uleb128 0x3a
 1341 0183 0B       		.uleb128 0xb
 1342 0184 3B       		.uleb128 0x3b
 1343 0185 05       		.uleb128 0x5
 1344 0186 49       		.uleb128 0x49
 1345 0187 13       		.uleb128 0x13
 1346 0188 02       		.uleb128 0x2
 1347 0189 18       		.uleb128 0x18
 1348 018a 00       		.byte	0
 1349 018b 00       		.byte	0
 1350 018c 19       		.uleb128 0x19
 1351 018d 34       		.uleb128 0x34
 1352 018e 00       		.byte	0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 41


 1353 018f 03       		.uleb128 0x3
 1354 0190 0E       		.uleb128 0xe
 1355 0191 3A       		.uleb128 0x3a
 1356 0192 0B       		.uleb128 0xb
 1357 0193 3B       		.uleb128 0x3b
 1358 0194 0B       		.uleb128 0xb
 1359 0195 49       		.uleb128 0x49
 1360 0196 13       		.uleb128 0x13
 1361 0197 3F       		.uleb128 0x3f
 1362 0198 19       		.uleb128 0x19
 1363 0199 02       		.uleb128 0x2
 1364 019a 18       		.uleb128 0x18
 1365 019b 00       		.byte	0
 1366 019c 00       		.byte	0
 1367 019d 1A       		.uleb128 0x1a
 1368 019e 2E       		.uleb128 0x2e
 1369 019f 00       		.byte	0
 1370 01a0 3F       		.uleb128 0x3f
 1371 01a1 19       		.uleb128 0x19
 1372 01a2 3C       		.uleb128 0x3c
 1373 01a3 19       		.uleb128 0x19
 1374 01a4 6E       		.uleb128 0x6e
 1375 01a5 0E       		.uleb128 0xe
 1376 01a6 03       		.uleb128 0x3
 1377 01a7 0E       		.uleb128 0xe
 1378 01a8 3A       		.uleb128 0x3a
 1379 01a9 0B       		.uleb128 0xb
 1380 01aa 3B       		.uleb128 0x3b
 1381 01ab 0B       		.uleb128 0xb
 1382 01ac 00       		.byte	0
 1383 01ad 00       		.byte	0
 1384 01ae 00       		.byte	0
 1385              		.section	.debug_loc,"",%progbits
 1386              	.Ldebug_loc0:
 1387              	.LLST0:
 1388 0000 06000000 		.4byte	.LVL1
 1389 0004 0A000000 		.4byte	.LVL2
 1390 0008 0600     		.2byte	0x6
 1391 000a 73       		.byte	0x73
 1392 000b 00       		.sleb128 0
 1393 000c 09       		.byte	0x9
 1394 000d C0       		.byte	0xc0
 1395 000e 1A       		.byte	0x1a
 1396 000f 9F       		.byte	0x9f
 1397 0010 00000000 		.4byte	0
 1398 0014 00000000 		.4byte	0
 1399              	.LLST1:
 1400 0018 32000000 		.4byte	.LVL8
 1401 001c 3F000000 		.4byte	.LVL9-1
 1402 0020 0100     		.2byte	0x1
 1403 0022 50       		.byte	0x50
 1404 0023 00000000 		.4byte	0
 1405 0027 00000000 		.4byte	0
 1406              	.LLST2:
 1407 002b 18000000 		.4byte	.LVL3
 1408 002f 1E000000 		.4byte	.LVL4
 1409 0033 0300     		.2byte	0x3
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 42


 1410 0035 09       		.byte	0x9
 1411 0036 F9       		.byte	0xf9
 1412 0037 9F       		.byte	0x9f
 1413 0038 00000000 		.4byte	0
 1414 003c 00000000 		.4byte	0
 1415              	.LLST3:
 1416 0040 1E000000 		.4byte	.LVL4
 1417 0044 22000000 		.4byte	.LVL5
 1418 0048 0300     		.2byte	0x3
 1419 004a 09       		.byte	0x9
 1420 004b F9       		.byte	0xf9
 1421 004c 9F       		.byte	0x9f
 1422 004d 00000000 		.4byte	0
 1423 0051 00000000 		.4byte	0
 1424              	.LLST4:
 1425 0055 22000000 		.4byte	.LVL5
 1426 0059 28000000 		.4byte	.LVL6
 1427 005d 0300     		.2byte	0x3
 1428 005f 08       		.byte	0x8
 1429 0060 7C       		.byte	0x7c
 1430 0061 9F       		.byte	0x9f
 1431 0062 00000000 		.4byte	0
 1432 0066 00000000 		.4byte	0
 1433              	.LLST5:
 1434 006a 28000000 		.4byte	.LVL6
 1435 006e 2E000000 		.4byte	.LVL7
 1436 0072 0200     		.2byte	0x2
 1437 0074 30       		.byte	0x30
 1438 0075 9F       		.byte	0x9f
 1439 0076 00000000 		.4byte	0
 1440 007a 00000000 		.4byte	0
 1441              		.section	.debug_aranges,"",%progbits
 1442 0000 94000000 		.4byte	0x94
 1443 0004 0200     		.2byte	0x2
 1444 0006 00000000 		.4byte	.Ldebug_info0
 1445 000a 04       		.byte	0x4
 1446 000b 00       		.byte	0
 1447 000c 0000     		.2byte	0
 1448 000e 0000     		.2byte	0
 1449 0010 00000000 		.4byte	.LFB2
 1450 0014 10000000 		.4byte	.LFE2-.LFB2
 1451 0018 00000000 		.4byte	.LFB3
 1452 001c 10000000 		.4byte	.LFE3-.LFB3
 1453 0020 00000000 		.4byte	.LFB4
 1454 0024 0C000000 		.4byte	.LFE4-.LFB4
 1455 0028 00000000 		.4byte	.LFB5
 1456 002c 14000000 		.4byte	.LFE5-.LFB5
 1457 0030 00000000 		.4byte	.LFB6
 1458 0034 18000000 		.4byte	.LFE6-.LFB6
 1459 0038 00000000 		.4byte	.LFB1
 1460 003c 54000000 		.4byte	.LFE1-.LFB1
 1461 0040 00000000 		.4byte	.LFB0
 1462 0044 1C000000 		.4byte	.LFE0-.LFB0
 1463 0048 00000000 		.4byte	.LFB7
 1464 004c 0C000000 		.4byte	.LFE7-.LFB7
 1465 0050 00000000 		.4byte	.LFB8
 1466 0054 0C000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 43


 1467 0058 00000000 		.4byte	.LFB9
 1468 005c 0C000000 		.4byte	.LFE9-.LFB9
 1469 0060 00000000 		.4byte	.LFB10
 1470 0064 0C000000 		.4byte	.LFE10-.LFB10
 1471 0068 00000000 		.4byte	.LFB11
 1472 006c 0C000000 		.4byte	.LFE11-.LFB11
 1473 0070 00000000 		.4byte	.LFB12
 1474 0074 0C000000 		.4byte	.LFE12-.LFB12
 1475 0078 00000000 		.4byte	.LFB13
 1476 007c 0C000000 		.4byte	.LFE13-.LFB13
 1477 0080 00000000 		.4byte	.LFB14
 1478 0084 0C000000 		.4byte	.LFE14-.LFB14
 1479 0088 00000000 		.4byte	.LFB15
 1480 008c 0C000000 		.4byte	.LFE15-.LFB15
 1481 0090 00000000 		.4byte	0
 1482 0094 00000000 		.4byte	0
 1483              		.section	.debug_ranges,"",%progbits
 1484              	.Ldebug_ranges0:
 1485 0000 00000000 		.4byte	.LBB14
 1486 0004 02000000 		.4byte	.LBE14
 1487 0008 04000000 		.4byte	.LBB20
 1488 000c 06000000 		.4byte	.LBE20
 1489 0010 00000000 		.4byte	0
 1490 0014 00000000 		.4byte	0
 1491 0018 02000000 		.4byte	.LBB17
 1492 001c 04000000 		.4byte	.LBE17
 1493 0020 0A000000 		.4byte	.LBB21
 1494 0024 0E000000 		.4byte	.LBE21
 1495 0028 00000000 		.4byte	0
 1496 002c 00000000 		.4byte	0
 1497 0030 00000000 		.4byte	.LFB2
 1498 0034 10000000 		.4byte	.LFE2
 1499 0038 00000000 		.4byte	.LFB3
 1500 003c 10000000 		.4byte	.LFE3
 1501 0040 00000000 		.4byte	.LFB4
 1502 0044 0C000000 		.4byte	.LFE4
 1503 0048 00000000 		.4byte	.LFB5
 1504 004c 14000000 		.4byte	.LFE5
 1505 0050 00000000 		.4byte	.LFB6
 1506 0054 18000000 		.4byte	.LFE6
 1507 0058 00000000 		.4byte	.LFB1
 1508 005c 54000000 		.4byte	.LFE1
 1509 0060 00000000 		.4byte	.LFB0
 1510 0064 1C000000 		.4byte	.LFE0
 1511 0068 00000000 		.4byte	.LFB7
 1512 006c 0C000000 		.4byte	.LFE7
 1513 0070 00000000 		.4byte	.LFB8
 1514 0074 0C000000 		.4byte	.LFE8
 1515 0078 00000000 		.4byte	.LFB9
 1516 007c 0C000000 		.4byte	.LFE9
 1517 0080 00000000 		.4byte	.LFB10
 1518 0084 0C000000 		.4byte	.LFE10
 1519 0088 00000000 		.4byte	.LFB11
 1520 008c 0C000000 		.4byte	.LFE11
 1521 0090 00000000 		.4byte	.LFB12
 1522 0094 0C000000 		.4byte	.LFE12
 1523 0098 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 44


 1524 009c 0C000000 		.4byte	.LFE13
 1525 00a0 00000000 		.4byte	.LFB14
 1526 00a4 0C000000 		.4byte	.LFE14
 1527 00a8 00000000 		.4byte	.LFB15
 1528 00ac 0C000000 		.4byte	.LFE15
 1529 00b0 00000000 		.4byte	0
 1530 00b4 00000000 		.4byte	0
 1531              		.section	.debug_line,"",%progbits
 1532              	.Ldebug_line0:
 1533 0000 A2010000 		.section	.debug_str,"MS",%progbits,1
 1533      02004E00 
 1533      00000201 
 1533      FB0E0D00 
 1533      01010101 
 1534              	.LASF28:
 1535 0000 50574D5F 		.ascii	"PWM_rw_ClearFIFO\000"
 1535      72775F43 
 1535      6C656172 
 1535      4649464F 
 1535      00
 1536              	.LASF45:
 1537 0011 50574D5F 		.ascii	"PWM_rw_initVar\000"
 1537      72775F69 
 1537      6E697456 
 1537      617200
 1538              	.LASF43:
 1539 0020 50574D5F 		.ascii	"PWM_rw_ReadControlRegister\000"
 1539      72775F52 
 1539      65616443 
 1539      6F6E7472 
 1539      6F6C5265 
 1540              	.LASF31:
 1541 003b 50574D5F 		.ascii	"PWM_rw_interruptState\000"
 1541      72775F69 
 1541      6E746572 
 1541      72757074 
 1541      53746174 
 1542              	.LASF9:
 1543 0051 666C6F61 		.ascii	"float\000"
 1543      7400
 1544              	.LASF32:
 1545 0057 50574D5F 		.ascii	"PWM_rw_Start\000"
 1545      72775F53 
 1545      74617274 
 1545      00
 1546              	.LASF23:
 1547 0064 70657269 		.ascii	"period\000"
 1547      6F6400
 1548              	.LASF3:
 1549 006b 73686F72 		.ascii	"short unsigned int\000"
 1549      7420756E 
 1549      7369676E 
 1549      65642069 
 1549      6E7400
 1550              	.LASF29:
 1551 007e 50574D5F 		.ascii	"PWM_rw_Init\000"
 1551      72775F49 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 45


 1551      6E697400 
 1552              	.LASF41:
 1553 008a 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_rw.c\000"
 1553      72617465 
 1553      645F536F 
 1553      75726365 
 1553      5C50536F 
 1554              	.LASF22:
 1555 00aa 50574D5F 		.ascii	"PWM_rw_WritePeriod\000"
 1555      72775F57 
 1555      72697465 
 1555      50657269 
 1555      6F6400
 1556              	.LASF25:
 1557 00bd 636F756E 		.ascii	"counter\000"
 1557      74657200 
 1558              	.LASF7:
 1559 00c5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1559      206C6F6E 
 1559      6720756E 
 1559      7369676E 
 1559      65642069 
 1560              	.LASF1:
 1561 00dc 756E7369 		.ascii	"unsigned char\000"
 1561      676E6564 
 1561      20636861 
 1561      7200
 1562              	.LASF18:
 1563 00ea 50574D5F 		.ascii	"PWM_rw_SetInterruptMode\000"
 1563      72775F53 
 1563      6574496E 
 1563      74657272 
 1563      7570744D 
 1564              	.LASF13:
 1565 0102 72656738 		.ascii	"reg8\000"
 1565      00
 1566              	.LASF34:
 1567 0107 50574D5F 		.ascii	"PWM_rw_WriteControlRegister\000"
 1567      72775F57 
 1567      72697465 
 1567      436F6E74 
 1567      726F6C52 
 1568              	.LASF40:
 1569 0123 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1569      43313120 
 1569      352E342E 
 1569      31203230 
 1569      31363036 
 1570 0156 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1570      20726576 
 1570      6973696F 
 1570      6E203233 
 1570      37373135 
 1571 0189 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1571      66756E63 
 1571      74696F6E 
 1571      2D736563 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 46


 1571      74696F6E 
 1572              	.LASF12:
 1573 01b1 75696E74 		.ascii	"uint8\000"
 1573      3800
 1574              	.LASF44:
 1575 01b7 636F6E74 		.ascii	"control\000"
 1575      726F6C00 
 1576              	.LASF10:
 1577 01bf 646F7562 		.ascii	"double\000"
 1577      6C6500
 1578              	.LASF26:
 1579 01c6 50574D5F 		.ascii	"PWM_rw_Enable\000"
 1579      72775F45 
 1579      6E61626C 
 1579      6500
 1580              	.LASF2:
 1581 01d4 73686F72 		.ascii	"short int\000"
 1581      7420696E 
 1581      7400
 1582              	.LASF27:
 1583 01de 50574D5F 		.ascii	"PWM_rw_Stop\000"
 1583      72775F53 
 1583      746F7000 
 1584              	.LASF35:
 1585 01ea 50574D5F 		.ascii	"PWM_rw_ReadCounter\000"
 1585      72775F52 
 1585      65616443 
 1585      6F756E74 
 1585      657200
 1586              	.LASF19:
 1587 01fd 50574D5F 		.ascii	"PWM_rw_WriteCompare\000"
 1587      72775F57 
 1587      72697465 
 1587      436F6D70 
 1587      61726500 
 1588              	.LASF5:
 1589 0211 6C6F6E67 		.ascii	"long unsigned int\000"
 1589      20756E73 
 1589      69676E65 
 1589      6420696E 
 1589      7400
 1590              	.LASF8:
 1591 0223 756E7369 		.ascii	"unsigned int\000"
 1591      676E6564 
 1591      20696E74 
 1591      00
 1592              	.LASF17:
 1593 0230 50574D5F 		.ascii	"PWM_rw_ReadStatusRegister\000"
 1593      72775F52 
 1593      65616453 
 1593      74617475 
 1593      73526567 
 1594              	.LASF39:
 1595 024a 43794578 		.ascii	"CyExitCriticalSection\000"
 1595      69744372 
 1595      69746963 
 1595      616C5365 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 47


 1595      6374696F 
 1596              	.LASF33:
 1597 0260 72657375 		.ascii	"result\000"
 1597      6C7400
 1598              	.LASF38:
 1599 0267 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1599      74657243 
 1599      72697469 
 1599      63616C53 
 1599      65637469 
 1600              	.LASF30:
 1601 027e 6374726C 		.ascii	"ctrl\000"
 1601      00
 1602              	.LASF15:
 1603 0283 73697A65 		.ascii	"sizetype\000"
 1603      74797065 
 1603      00
 1604              	.LASF6:
 1605 028c 6C6F6E67 		.ascii	"long long int\000"
 1605      206C6F6E 
 1605      6720696E 
 1605      7400
 1606              	.LASF36:
 1607 029a 50574D5F 		.ascii	"PWM_rw_ReadCompare\000"
 1607      72775F52 
 1607      65616443 
 1607      6F6D7061 
 1607      726500
 1608              	.LASF20:
 1609 02ad 696E7465 		.ascii	"interruptMode\000"
 1609      72727570 
 1609      744D6F64 
 1609      6500
 1610              	.LASF37:
 1611 02bb 50574D5F 		.ascii	"PWM_rw_ReadPeriod\000"
 1611      72775F52 
 1611      65616450 
 1611      6572696F 
 1611      6400
 1612              	.LASF16:
 1613 02cd 50574D5F 		.ascii	"PWM_rw_ReadCapture\000"
 1613      72775F52 
 1613      65616443 
 1613      61707475 
 1613      726500
 1614              	.LASF42:
 1615 02e0 433A5C55 		.ascii	"C:\\Users\\Zwe\\Desktop\\Monash\\Y3S2\\ECE3091 - EN"
 1615      73657273 
 1615      5C5A7765 
 1615      5C446573 
 1615      6B746F70 
 1616 030d 47494E45 		.ascii	"GINEERING DESIGN\\bcd\\Design01.cydsn\000"
 1616      4552494E 
 1616      47204445 
 1616      5349474E 
 1616      5C626364 
 1617              	.LASF4:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\cc8kA29m.s 			page 48


 1618 0331 6C6F6E67 		.ascii	"long int\000"
 1618      20696E74 
 1618      00
 1619              	.LASF11:
 1620 033a 63686172 		.ascii	"char\000"
 1620      00
 1621              	.LASF14:
 1622 033f 6C6F6E67 		.ascii	"long double\000"
 1622      20646F75 
 1622      626C6500 
 1623              	.LASF24:
 1624 034b 50574D5F 		.ascii	"PWM_rw_WriteCounter\000"
 1624      72775F57 
 1624      72697465 
 1624      436F756E 
 1624      74657200 
 1625              	.LASF0:
 1626 035f 7369676E 		.ascii	"signed char\000"
 1626      65642063 
 1626      68617200 
 1627              	.LASF21:
 1628 036b 636F6D70 		.ascii	"compare\000"
 1628      61726500 
 1629              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
