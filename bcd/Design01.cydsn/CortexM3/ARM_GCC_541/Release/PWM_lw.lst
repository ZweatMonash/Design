ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_lw.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_lw_Enable,"ax",%progbits
  20              		.align	1
  21              		.global	PWM_lw_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	PWM_lw_Enable, %function
  25              	PWM_lw_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC5\\PWM_lw.c"
   1:Generated_Source\PSoC5/PWM_lw.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_lw.c **** * File Name: PWM_lw.c
   3:Generated_Source\PSoC5/PWM_lw.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_lw.c **** *
   5:Generated_Source\PSoC5/PWM_lw.c **** * Description:
   6:Generated_Source\PSoC5/PWM_lw.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_lw.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_lw.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_lw.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_lw.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_lw.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_lw.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_lw.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_lw.c **** *
  15:Generated_Source\PSoC5/PWM_lw.c **** * Note:
  16:Generated_Source\PSoC5/PWM_lw.c **** *
  17:Generated_Source\PSoC5/PWM_lw.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_lw.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_lw.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_lw.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_lw.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_lw.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_lw.c **** 
  24:Generated_Source\PSoC5/PWM_lw.c **** #include "PWM_lw.h"
  25:Generated_Source\PSoC5/PWM_lw.c **** 
  26:Generated_Source\PSoC5/PWM_lw.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_lw.c **** #ifdef PWM_lw_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_lw.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_lw.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_lw.c **** #endif /* PWM_lw_PWMUDB_genblk1_ctrlreg__REMOVED */
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 2


  31:Generated_Source\PSoC5/PWM_lw.c **** 
  32:Generated_Source\PSoC5/PWM_lw.c **** uint8 PWM_lw_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_lw.c **** 
  34:Generated_Source\PSoC5/PWM_lw.c **** 
  35:Generated_Source\PSoC5/PWM_lw.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_lw.c **** * Function Name: PWM_lw_Start
  37:Generated_Source\PSoC5/PWM_lw.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_lw.c **** *
  39:Generated_Source\PSoC5/PWM_lw.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_lw.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_lw.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_lw.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_lw.c **** *
  44:Generated_Source\PSoC5/PWM_lw.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_lw.c **** *  None
  46:Generated_Source\PSoC5/PWM_lw.c **** *
  47:Generated_Source\PSoC5/PWM_lw.c **** * Return:
  48:Generated_Source\PSoC5/PWM_lw.c **** *  None
  49:Generated_Source\PSoC5/PWM_lw.c **** *
  50:Generated_Source\PSoC5/PWM_lw.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_lw.c **** *  PWM_lw_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_lw.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_lw.c **** *
  54:Generated_Source\PSoC5/PWM_lw.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_lw.c **** void PWM_lw_Start(void) 
  56:Generated_Source\PSoC5/PWM_lw.c **** {
  57:Generated_Source\PSoC5/PWM_lw.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_lw.c ****     if(PWM_lw_initVar == 0u)
  59:Generated_Source\PSoC5/PWM_lw.c ****     {
  60:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_Init();
  61:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_initVar = 1u;
  62:Generated_Source\PSoC5/PWM_lw.c ****     }
  63:Generated_Source\PSoC5/PWM_lw.c ****     PWM_lw_Enable();
  64:Generated_Source\PSoC5/PWM_lw.c **** 
  65:Generated_Source\PSoC5/PWM_lw.c **** }
  66:Generated_Source\PSoC5/PWM_lw.c **** 
  67:Generated_Source\PSoC5/PWM_lw.c **** 
  68:Generated_Source\PSoC5/PWM_lw.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_lw.c **** * Function Name: PWM_lw_Init
  70:Generated_Source\PSoC5/PWM_lw.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_lw.c **** *
  72:Generated_Source\PSoC5/PWM_lw.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_lw.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_lw.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_lw.c **** *  PWM_lw_Start().
  76:Generated_Source\PSoC5/PWM_lw.c **** *
  77:Generated_Source\PSoC5/PWM_lw.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_lw.c **** *  None
  79:Generated_Source\PSoC5/PWM_lw.c **** *
  80:Generated_Source\PSoC5/PWM_lw.c **** * Return:
  81:Generated_Source\PSoC5/PWM_lw.c **** *  None
  82:Generated_Source\PSoC5/PWM_lw.c **** *
  83:Generated_Source\PSoC5/PWM_lw.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_lw.c **** void PWM_lw_Init(void) 
  85:Generated_Source\PSoC5/PWM_lw.c **** {
  86:Generated_Source\PSoC5/PWM_lw.c ****     #if (PWM_lw_UsingFixedFunction || PWM_lw_UseControl)
  87:Generated_Source\PSoC5/PWM_lw.c ****         uint8 ctrl;
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 3


  88:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (PWM_lw_UsingFixedFunction || PWM_lw_UseControl) */
  89:Generated_Source\PSoC5/PWM_lw.c **** 
  90:Generated_Source\PSoC5/PWM_lw.c ****     #if(!PWM_lw_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_lw.c ****         #if(PWM_lw_UseStatus)
  92:Generated_Source\PSoC5/PWM_lw.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_lw.c ****             uint8 PWM_lw_interruptState;
  94:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_UseStatus) */
  95:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (!PWM_lw_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_lw.c **** 
  97:Generated_Source\PSoC5/PWM_lw.c ****     #if (PWM_lw_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_lw.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_CONTROL |= PWM_lw_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_lw.c ****         #if (PWM_lw_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_CONTROL |= PWM_lw_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_lw.c **** 
 104:Generated_Source\PSoC5/PWM_lw.c ****         ctrl = PWM_lw_CONTROL3 & ((uint8 )(~PWM_lw_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_CONTROL3 = ctrl | PWM_lw_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_lw.c **** 
 107:Generated_Source\PSoC5/PWM_lw.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_RT1 &= ((uint8)(~PWM_lw_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_RT1 |= PWM_lw_SYNC;
 110:Generated_Source\PSoC5/PWM_lw.c **** 
 111:Generated_Source\PSoC5/PWM_lw.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_RT1 &= ((uint8)(~PWM_lw_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_RT1 |= PWM_lw_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_lw.c **** 
 115:Generated_Source\PSoC5/PWM_lw.c ****     #elif (PWM_lw_UseControl)
 116:Generated_Source\PSoC5/PWM_lw.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_lw.c ****         ctrl = PWM_lw_CONTROL & ((uint8)(~PWM_lw_CTRL_CMPMODE2_MASK)) &
 118:Generated_Source\PSoC5/PWM_lw.c ****                 ((uint8)(~PWM_lw_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_CONTROL = ctrl | PWM_lw_DEFAULT_COMPARE2_MODE |
 120:Generated_Source\PSoC5/PWM_lw.c ****                                    PWM_lw_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (PWM_lw_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_lw.c **** 
 123:Generated_Source\PSoC5/PWM_lw.c ****     #if (!PWM_lw_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_lw.c ****         #if (PWM_lw_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_lw.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_AUX_CONTROLDP0 |= (PWM_lw_AUX_CTRL_FIFO0_CLR);
 127:Generated_Source\PSoC5/PWM_lw.c ****         #else /* (PWM_lw_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_lw.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_AUX_CONTROLDP0 |= (PWM_lw_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_AUX_CONTROLDP1 |= (PWM_lw_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_lw.c **** 
 133:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_WriteCounter(PWM_lw_INIT_PERIOD_VALUE);
 134:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (!PWM_lw_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_lw.c **** 
 136:Generated_Source\PSoC5/PWM_lw.c ****     PWM_lw_WritePeriod(PWM_lw_INIT_PERIOD_VALUE);
 137:Generated_Source\PSoC5/PWM_lw.c **** 
 138:Generated_Source\PSoC5/PWM_lw.c ****         #if (PWM_lw_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_WriteCompare(PWM_lw_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/PWM_lw.c ****         #else
 141:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_WriteCompare1(PWM_lw_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_WriteCompare2(PWM_lw_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_lw.c **** 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 4


 145:Generated_Source\PSoC5/PWM_lw.c ****         #if (PWM_lw_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_WriteKillTime(PWM_lw_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_lw.c **** 
 149:Generated_Source\PSoC5/PWM_lw.c ****         #if (PWM_lw_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_WriteDeadTime(PWM_lw_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_lw.c **** 
 153:Generated_Source\PSoC5/PWM_lw.c ****     #if (PWM_lw_UseStatus || PWM_lw_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_SetInterruptMode(PWM_lw_INIT_INTERRUPTS_MODE);
 155:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (PWM_lw_UseStatus || PWM_lw_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_lw.c **** 
 157:Generated_Source\PSoC5/PWM_lw.c ****     #if (PWM_lw_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_lw.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_GLOBAL_ENABLE |= PWM_lw_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_lw.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_CONTROL2 |= PWM_lw_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_lw.c ****     #else
 163:Generated_Source\PSoC5/PWM_lw.c ****         #if(PWM_lw_UseStatus)
 164:Generated_Source\PSoC5/PWM_lw.c **** 
 165:Generated_Source\PSoC5/PWM_lw.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_lw.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_interruptState = CyEnterCriticalSection();
 168:Generated_Source\PSoC5/PWM_lw.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_STATUS_AUX_CTRL |= PWM_lw_STATUS_ACTL_INT_EN_MASK;
 170:Generated_Source\PSoC5/PWM_lw.c **** 
 171:Generated_Source\PSoC5/PWM_lw.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_lw.c ****             CyExitCriticalSection(PWM_lw_interruptState);
 173:Generated_Source\PSoC5/PWM_lw.c **** 
 174:Generated_Source\PSoC5/PWM_lw.c ****             /* Clear the FIFO to enable the PWM_lw_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_lw.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_ClearFIFO();
 177:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_UseStatus) */
 178:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (PWM_lw_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_lw.c **** }
 180:Generated_Source\PSoC5/PWM_lw.c **** 
 181:Generated_Source\PSoC5/PWM_lw.c **** 
 182:Generated_Source\PSoC5/PWM_lw.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_lw.c **** * Function Name: PWM_lw_Enable
 184:Generated_Source\PSoC5/PWM_lw.c **** ********************************************************************************
 185:Generated_Source\PSoC5/PWM_lw.c **** *
 186:Generated_Source\PSoC5/PWM_lw.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_lw.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_lw.c **** *
 189:Generated_Source\PSoC5/PWM_lw.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_lw.c **** *  None
 191:Generated_Source\PSoC5/PWM_lw.c **** *
 192:Generated_Source\PSoC5/PWM_lw.c **** * Return:
 193:Generated_Source\PSoC5/PWM_lw.c **** *  None
 194:Generated_Source\PSoC5/PWM_lw.c **** *
 195:Generated_Source\PSoC5/PWM_lw.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_lw.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_lw.c **** *
 198:Generated_Source\PSoC5/PWM_lw.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_lw.c **** void PWM_lw_Enable(void) 
 200:Generated_Source\PSoC5/PWM_lw.c **** {
  28              		.loc 1 200 0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 5


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 201:Generated_Source\PSoC5/PWM_lw.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_lw.c ****     #if (PWM_lw_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_GLOBAL_ENABLE |= PWM_lw_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_GLOBAL_STBY_ENABLE |= PWM_lw_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (PWM_lw_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_lw.c **** 
 207:Generated_Source\PSoC5/PWM_lw.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_lw.c ****     #if (PWM_lw_UseControl || PWM_lw_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_CONTROL |= PWM_lw_CTRL_ENABLE;
  33              		.loc 1 209 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 76650040 		.word	1073767798
  43              		.cfi_endproc
  44              	.LFE2:
  45              		.size	PWM_lw_Enable, .-PWM_lw_Enable
  46              		.section	.text.PWM_lw_Stop,"ax",%progbits
  47              		.align	1
  48              		.global	PWM_lw_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	PWM_lw_Stop, %function
  52              	PWM_lw_Stop:
  53              	.LFB3:
 210:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (PWM_lw_UseControl || PWM_lw_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_lw.c **** }
 212:Generated_Source\PSoC5/PWM_lw.c **** 
 213:Generated_Source\PSoC5/PWM_lw.c **** 
 214:Generated_Source\PSoC5/PWM_lw.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_lw.c **** * Function Name: PWM_lw_Stop
 216:Generated_Source\PSoC5/PWM_lw.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_lw.c **** *
 218:Generated_Source\PSoC5/PWM_lw.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_lw.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_lw.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_lw.c **** *
 222:Generated_Source\PSoC5/PWM_lw.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_lw.c **** *  None
 224:Generated_Source\PSoC5/PWM_lw.c **** *
 225:Generated_Source\PSoC5/PWM_lw.c **** * Return:
 226:Generated_Source\PSoC5/PWM_lw.c **** *  None
 227:Generated_Source\PSoC5/PWM_lw.c **** *
 228:Generated_Source\PSoC5/PWM_lw.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_lw.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_lw.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_lw.c **** *
 232:Generated_Source\PSoC5/PWM_lw.c **** *******************************************************************************/
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 6


 233:Generated_Source\PSoC5/PWM_lw.c **** void PWM_lw_Stop(void) 
 234:Generated_Source\PSoC5/PWM_lw.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 235:Generated_Source\PSoC5/PWM_lw.c ****     #if (PWM_lw_UseControl || PWM_lw_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_CONTROL &= ((uint8)(~PWM_lw_CTRL_ENABLE));
  59              		.loc 1 236 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 76650040 		.word	1073767798
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	PWM_lw_Stop, .-PWM_lw_Stop
  72              		.section	.text.PWM_lw_WriteCounter,"ax",%progbits
  73              		.align	1
  74              		.global	PWM_lw_WriteCounter
  75              		.thumb
  76              		.thumb_func
  77              		.type	PWM_lw_WriteCounter, %function
  78              	PWM_lw_WriteCounter:
  79              	.LFB4:
 237:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (PWM_lw_UseControl || PWM_lw_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_lw.c **** 
 239:Generated_Source\PSoC5/PWM_lw.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/PWM_lw.c ****     #if (PWM_lw_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_GLOBAL_ENABLE &= ((uint8)(~PWM_lw_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_lw_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (PWM_lw_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_lw.c **** }
 245:Generated_Source\PSoC5/PWM_lw.c **** 
 246:Generated_Source\PSoC5/PWM_lw.c **** #if (PWM_lw_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_lw.c ****     #if (PWM_lw_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_lw.c **** 
 249:Generated_Source\PSoC5/PWM_lw.c **** 
 250:Generated_Source\PSoC5/PWM_lw.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_lw.c ****         * Function Name: PWM_lw_SetCompareMode
 252:Generated_Source\PSoC5/PWM_lw.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_lw.c ****         *
 254:Generated_Source\PSoC5/PWM_lw.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_lw.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_lw.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_lw.c ****         *
 258:Generated_Source\PSoC5/PWM_lw.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_lw.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_lw.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_lw.c ****         *
 262:Generated_Source\PSoC5/PWM_lw.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_lw.c ****         *  None
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 7


 264:Generated_Source\PSoC5/PWM_lw.c ****         *
 265:Generated_Source\PSoC5/PWM_lw.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_lw.c ****         void PWM_lw_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_lw.c ****         {
 268:Generated_Source\PSoC5/PWM_lw.c ****             #if(PWM_lw_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_lw.c **** 
 270:Generated_Source\PSoC5/PWM_lw.c ****                 #if(0 != PWM_lw_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_lw.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_lw_CTRL_CMPMODE1_S
 272:Generated_Source\PSoC5/PWM_lw.c ****                 #else
 273:Generated_Source\PSoC5/PWM_lw.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/PWM_lw.c ****                 #endif /* (0 != PWM_lw_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_lw.c **** 
 276:Generated_Source\PSoC5/PWM_lw.c ****                 PWM_lw_CONTROL3 &= ((uint8)(~PWM_lw_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/PWM_lw.c ****                 PWM_lw_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_lw.c **** 
 279:Generated_Source\PSoC5/PWM_lw.c ****             #elif (PWM_lw_UseControl)
 280:Generated_Source\PSoC5/PWM_lw.c **** 
 281:Generated_Source\PSoC5/PWM_lw.c ****                 #if(0 != PWM_lw_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_lw.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_lw_CTRL_CMPMODE1_
 283:Generated_Source\PSoC5/PWM_lw.c ****                                                 PWM_lw_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_lw.c ****                 #else
 285:Generated_Source\PSoC5/PWM_lw.c ****                     uint8 comparemode1masked = comparemode & PWM_lw_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_lw.c ****                 #endif /* (0 != PWM_lw_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_lw.c **** 
 288:Generated_Source\PSoC5/PWM_lw.c ****                 #if(0 != PWM_lw_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_lw.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_lw_CTRL_CMPMODE2_
 290:Generated_Source\PSoC5/PWM_lw.c ****                                                PWM_lw_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_lw.c ****                 #else
 292:Generated_Source\PSoC5/PWM_lw.c ****                     uint8 comparemode2masked = comparemode & PWM_lw_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_lw.c ****                 #endif /* (0 != PWM_lw_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_lw.c **** 
 295:Generated_Source\PSoC5/PWM_lw.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_lw.c ****                 PWM_lw_CONTROL &= ((uint8)(~(PWM_lw_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_lw.c ****                                             PWM_lw_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_lw.c ****                 PWM_lw_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_lw.c **** 
 300:Generated_Source\PSoC5/PWM_lw.c ****             #else
 301:Generated_Source\PSoC5/PWM_lw.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_lw.c ****             #endif /* (PWM_lw_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_lw.c ****         }
 304:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* PWM_lw_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_lw.c **** 
 306:Generated_Source\PSoC5/PWM_lw.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_lw.c **** 
 308:Generated_Source\PSoC5/PWM_lw.c ****     #if (PWM_lw_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_lw.c **** 
 310:Generated_Source\PSoC5/PWM_lw.c **** 
 311:Generated_Source\PSoC5/PWM_lw.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_lw.c ****         * Function Name: PWM_lw_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_lw.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_lw.c ****         *
 315:Generated_Source\PSoC5/PWM_lw.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_lw.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_lw.c ****         *
 318:Generated_Source\PSoC5/PWM_lw.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_lw.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_lw.c ****         *                defined in the H file as input arguments.
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 8


 321:Generated_Source\PSoC5/PWM_lw.c ****         *
 322:Generated_Source\PSoC5/PWM_lw.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_lw.c ****         *  None
 324:Generated_Source\PSoC5/PWM_lw.c ****         *
 325:Generated_Source\PSoC5/PWM_lw.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_lw.c ****         void PWM_lw_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_lw.c ****         {
 328:Generated_Source\PSoC5/PWM_lw.c ****             #if(0 != PWM_lw_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_lw.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_lw_CTRL_CMPMODE1_SHIFT
 330:Generated_Source\PSoC5/PWM_lw.c ****                                            PWM_lw_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/PWM_lw.c ****             #else
 332:Generated_Source\PSoC5/PWM_lw.c ****                 uint8 comparemodemasked = comparemode & PWM_lw_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_lw.c ****             #endif /* (0 != PWM_lw_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_lw.c **** 
 335:Generated_Source\PSoC5/PWM_lw.c ****             #if (PWM_lw_UseControl)
 336:Generated_Source\PSoC5/PWM_lw.c ****                 PWM_lw_CONTROL &= ((uint8)(~PWM_lw_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM_lw.c ****                 PWM_lw_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_lw.c ****             #endif /* (PWM_lw_UseControl) */
 339:Generated_Source\PSoC5/PWM_lw.c ****         }
 340:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* PWM_lw_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_lw.c **** 
 342:Generated_Source\PSoC5/PWM_lw.c **** #if (PWM_lw_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_lw.c **** 
 344:Generated_Source\PSoC5/PWM_lw.c **** 
 345:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_lw.c ****     *
 349:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_lw.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_lw.c ****     *
 352:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_lw.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_lw.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_lw.c ****     *
 356:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 358:Generated_Source\PSoC5/PWM_lw.c ****     *
 359:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_lw.c ****     void PWM_lw_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_lw.c ****     {
 362:Generated_Source\PSoC5/PWM_lw.c **** 
 363:Generated_Source\PSoC5/PWM_lw.c ****         #if(0 != PWM_lw_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_lw.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_lw_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM_lw.c ****                                                  PWM_lw_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_lw.c ****         #else
 367:Generated_Source\PSoC5/PWM_lw.c ****             uint8 comparemodemasked = comparemode & PWM_lw_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (0 != PWM_lw_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_lw.c **** 
 370:Generated_Source\PSoC5/PWM_lw.c ****         #if (PWM_lw_UseControl)
 371:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_CONTROL &= ((uint8)(~PWM_lw_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_UseControl) */
 374:Generated_Source\PSoC5/PWM_lw.c ****     }
 375:Generated_Source\PSoC5/PWM_lw.c ****     #endif /*PWM_lw_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_lw.c **** 
 377:Generated_Source\PSoC5/PWM_lw.c **** #endif /* UseOneCompareMode */
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 9


 378:Generated_Source\PSoC5/PWM_lw.c **** 
 379:Generated_Source\PSoC5/PWM_lw.c **** 
 380:Generated_Source\PSoC5/PWM_lw.c **** #if (!PWM_lw_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_lw.c **** 
 382:Generated_Source\PSoC5/PWM_lw.c **** 
 383:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_WriteCounter
 385:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_lw.c ****     *
 387:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 388:Generated_Source\PSoC5/PWM_lw.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_lw.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_lw.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_lw.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_lw.c ****     *
 393:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_lw.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_lw.c ****     *
 396:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 398:Generated_Source\PSoC5/PWM_lw.c ****     *
 399:Generated_Source\PSoC5/PWM_lw.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_lw.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_lw.c ****     *
 402:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_lw.c ****     void PWM_lw_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/PWM_lw.c ****                                        
 405:Generated_Source\PSoC5/PWM_lw.c ****     {
  80              		.loc 1 405 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 406:Generated_Source\PSoC5/PWM_lw.c ****         CY_SET_REG8(PWM_lw_COUNTER_LSB_PTR, counter);
  86              		.loc 1 406 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 09640040 		.word	1073767433
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	PWM_lw_WriteCounter, .-PWM_lw_WriteCounter
  97              		.section	.text.PWM_lw_ReadCounter,"ax",%progbits
  98              		.align	1
  99              		.global	PWM_lw_ReadCounter
 100              		.thumb
 101              		.thumb_func
 102              		.type	PWM_lw_ReadCounter, %function
 103              	PWM_lw_ReadCounter:
 104              	.LFB5:
 407:Generated_Source\PSoC5/PWM_lw.c ****     }
 408:Generated_Source\PSoC5/PWM_lw.c **** 
 409:Generated_Source\PSoC5/PWM_lw.c **** 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 10


 410:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_ReadCounter
 412:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_lw.c ****     *
 414:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_lw.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_lw.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_lw.c ****     *
 418:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 420:Generated_Source\PSoC5/PWM_lw.c ****     *
 421:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_lw.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_lw.c ****     *
 424:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_lw.c ****     uint8 PWM_lw_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_lw.c ****     {
 105              		.loc 1 426 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 427:Generated_Source\PSoC5/PWM_lw.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_lw.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_lw.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_lw.c ****           (void)CY_GET_REG8(PWM_lw_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 431:Generated_Source\PSoC5/PWM_lw.c **** 
 432:Generated_Source\PSoC5/PWM_lw.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_lw.c ****         return (CY_GET_REG8(PWM_lw_CAPTURE_LSB_PTR));
 113              		.loc 1 433 0
 114 0004 024B     		ldr	r3, .L11+4
 115 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 434:Generated_Source\PSoC5/PWM_lw.c ****     }
 116              		.loc 1 434 0
 117 0008 7047     		bx	lr
 118              	.L12:
 119 000a 00BF     		.align	2
 120              	.L11:
 121 000c 19640040 		.word	1073767449
 122 0010 59640040 		.word	1073767513
 123              		.cfi_endproc
 124              	.LFE5:
 125              		.size	PWM_lw_ReadCounter, .-PWM_lw_ReadCounter
 126              		.section	.text.PWM_lw_ClearFIFO,"ax",%progbits
 127              		.align	1
 128              		.global	PWM_lw_ClearFIFO
 129              		.thumb
 130              		.thumb_func
 131              		.type	PWM_lw_ClearFIFO, %function
 132              	PWM_lw_ClearFIFO:
 133              	.LFB6:
 435:Generated_Source\PSoC5/PWM_lw.c **** 
 436:Generated_Source\PSoC5/PWM_lw.c ****     #if (PWM_lw_UseStatus)
 437:Generated_Source\PSoC5/PWM_lw.c **** 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 11


 438:Generated_Source\PSoC5/PWM_lw.c **** 
 439:Generated_Source\PSoC5/PWM_lw.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_lw.c ****         * Function Name: PWM_lw_ClearFIFO
 441:Generated_Source\PSoC5/PWM_lw.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_lw.c ****         *
 443:Generated_Source\PSoC5/PWM_lw.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_lw.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_lw.c ****         *
 446:Generated_Source\PSoC5/PWM_lw.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_lw.c ****         *  None
 448:Generated_Source\PSoC5/PWM_lw.c ****         *
 449:Generated_Source\PSoC5/PWM_lw.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_lw.c ****         *  None
 451:Generated_Source\PSoC5/PWM_lw.c ****         *
 452:Generated_Source\PSoC5/PWM_lw.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_lw.c ****         void PWM_lw_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_lw.c ****         {
 134              		.loc 1 454 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139              	.LBB14:
 140              	.LBB15:
 455:Generated_Source\PSoC5/PWM_lw.c ****             while(0u != (PWM_lw_ReadStatusRegister() & PWM_lw_STATUS_FIFONEMPTY))
 456:Generated_Source\PSoC5/PWM_lw.c ****             {
 457:Generated_Source\PSoC5/PWM_lw.c ****                 (void)PWM_lw_ReadCapture();
 458:Generated_Source\PSoC5/PWM_lw.c ****             }
 459:Generated_Source\PSoC5/PWM_lw.c ****         }
 460:Generated_Source\PSoC5/PWM_lw.c **** 
 461:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* PWM_lw_UseStatus */
 462:Generated_Source\PSoC5/PWM_lw.c **** 
 463:Generated_Source\PSoC5/PWM_lw.c **** #endif /* !PWM_lw_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_lw.c **** 
 465:Generated_Source\PSoC5/PWM_lw.c **** 
 466:Generated_Source\PSoC5/PWM_lw.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_lw.c **** * Function Name: PWM_lw_WritePeriod
 468:Generated_Source\PSoC5/PWM_lw.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_lw.c **** *
 470:Generated_Source\PSoC5/PWM_lw.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_lw.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_lw.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_lw.c **** *
 474:Generated_Source\PSoC5/PWM_lw.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_lw.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_lw.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_lw.c **** *
 478:Generated_Source\PSoC5/PWM_lw.c **** * Return:
 479:Generated_Source\PSoC5/PWM_lw.c **** *  None
 480:Generated_Source\PSoC5/PWM_lw.c **** *
 481:Generated_Source\PSoC5/PWM_lw.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_lw.c **** void PWM_lw_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/PWM_lw.c **** {
 484:Generated_Source\PSoC5/PWM_lw.c ****     #if(PWM_lw_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_lw.c ****         CY_SET_REG16(PWM_lw_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_lw.c ****     #else
 487:Generated_Source\PSoC5/PWM_lw.c ****         CY_SET_REG8(PWM_lw_PERIOD_LSB_PTR, period);
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 12


 488:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (PWM_lw_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_lw.c **** }
 490:Generated_Source\PSoC5/PWM_lw.c **** 
 491:Generated_Source\PSoC5/PWM_lw.c **** #if (PWM_lw_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_lw.c **** 
 493:Generated_Source\PSoC5/PWM_lw.c **** 
 494:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_WriteCompare
 496:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_lw.c ****     *
 498:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_lw.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_lw.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_lw.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_lw.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_lw.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_lw.c ****     *
 505:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_lw.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_lw.c ****     *
 508:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 509:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 510:Generated_Source\PSoC5/PWM_lw.c ****     *
 511:Generated_Source\PSoC5/PWM_lw.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_lw.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_lw.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_lw.c ****     *
 515:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_lw.c ****     void PWM_lw_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/PWM_lw.c ****                                        
 518:Generated_Source\PSoC5/PWM_lw.c ****     {
 519:Generated_Source\PSoC5/PWM_lw.c ****         #if(PWM_lw_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_lw.c ****             CY_SET_REG16(PWM_lw_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_lw.c ****         #else
 522:Generated_Source\PSoC5/PWM_lw.c ****             CY_SET_REG8(PWM_lw_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_lw.c **** 
 525:Generated_Source\PSoC5/PWM_lw.c ****         #if (PWM_lw_PWMMode == PWM_lw__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_lw.c ****             #if(PWM_lw_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_lw.c ****                 CY_SET_REG16(PWM_lw_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_lw.c ****             #else
 529:Generated_Source\PSoC5/PWM_lw.c ****                 CY_SET_REG8(PWM_lw_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_lw.c ****             #endif /* (PWM_lw_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_PWMMode == PWM_lw__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_lw.c ****     }
 533:Generated_Source\PSoC5/PWM_lw.c **** 
 534:Generated_Source\PSoC5/PWM_lw.c **** 
 535:Generated_Source\PSoC5/PWM_lw.c **** #else
 536:Generated_Source\PSoC5/PWM_lw.c **** 
 537:Generated_Source\PSoC5/PWM_lw.c **** 
 538:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_WriteCompare1
 540:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_lw.c ****     *
 542:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_lw.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_lw.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 13


 545:Generated_Source\PSoC5/PWM_lw.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_lw.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_lw.c ****     *
 548:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_lw.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_lw.c ****     *
 551:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 553:Generated_Source\PSoC5/PWM_lw.c ****     *
 554:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_lw.c ****     void PWM_lw_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/PWM_lw.c ****                                         
 557:Generated_Source\PSoC5/PWM_lw.c ****     {
 558:Generated_Source\PSoC5/PWM_lw.c ****         #if(PWM_lw_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_lw.c ****             CY_SET_REG16(PWM_lw_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_lw.c ****         #else
 561:Generated_Source\PSoC5/PWM_lw.c ****             CY_SET_REG8(PWM_lw_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_lw.c ****     }
 564:Generated_Source\PSoC5/PWM_lw.c **** 
 565:Generated_Source\PSoC5/PWM_lw.c **** 
 566:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_WriteCompare2
 568:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_lw.c ****     *
 570:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_lw.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_lw.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_lw.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_lw.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_lw.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_lw.c ****     *
 577:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_lw.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_lw.c ****     *
 580:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 582:Generated_Source\PSoC5/PWM_lw.c ****     *
 583:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_lw.c ****     void PWM_lw_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/PWM_lw.c ****                                         
 586:Generated_Source\PSoC5/PWM_lw.c ****     {
 587:Generated_Source\PSoC5/PWM_lw.c ****         #if(PWM_lw_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_lw.c ****             CY_SET_REG16(PWM_lw_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_lw.c ****         #else
 590:Generated_Source\PSoC5/PWM_lw.c ****             CY_SET_REG8(PWM_lw_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_lw.c ****     }
 593:Generated_Source\PSoC5/PWM_lw.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_lw.c **** 
 595:Generated_Source\PSoC5/PWM_lw.c **** #if (PWM_lw_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_lw.c **** 
 597:Generated_Source\PSoC5/PWM_lw.c **** 
 598:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_lw.c ****     *
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 14


 602:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_lw.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_lw.c ****     *
 605:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_lw.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_lw.c ****     *
 608:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 610:Generated_Source\PSoC5/PWM_lw.c ****     *
 611:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_lw.c ****     void PWM_lw_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_lw.c ****     {
 614:Generated_Source\PSoC5/PWM_lw.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_lw.c ****         #if(!PWM_lw_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_lw.c ****             CY_SET_REG8(PWM_lw_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_lw.c ****         #else
 618:Generated_Source\PSoC5/PWM_lw.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_lw.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_lw.c ****             PWM_lw_DEADBAND_COUNT &= ((uint8)(~PWM_lw_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_lw.c **** 
 622:Generated_Source\PSoC5/PWM_lw.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_lw.c ****             #if(PWM_lw_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_lw.c ****                 PWM_lw_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_lw_DEADBAND_COUNT_SHIFT)) 
 625:Generated_Source\PSoC5/PWM_lw.c ****                                                     PWM_lw_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_lw.c ****             #else
 627:Generated_Source\PSoC5/PWM_lw.c ****                 PWM_lw_DEADBAND_COUNT |= deadtime & PWM_lw_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_lw.c ****             #endif /* (PWM_lw_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_lw.c **** 
 630:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (!PWM_lw_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_lw.c ****     }
 632:Generated_Source\PSoC5/PWM_lw.c **** 
 633:Generated_Source\PSoC5/PWM_lw.c **** 
 634:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/PWM_lw.c ****     *
 638:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_lw.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_lw.c ****     *
 641:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 643:Generated_Source\PSoC5/PWM_lw.c ****     *
 644:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_lw.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_lw.c ****     *
 647:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_lw.c ****     uint8 PWM_lw_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_lw.c ****     {
 650:Generated_Source\PSoC5/PWM_lw.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_lw.c ****         #if(!PWM_lw_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_lw.c ****             return (CY_GET_REG8(PWM_lw_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_lw.c ****         #else
 654:Generated_Source\PSoC5/PWM_lw.c **** 
 655:Generated_Source\PSoC5/PWM_lw.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_lw.c ****             #if(PWM_lw_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_lw.c ****                 return ((uint8)(((uint8)(PWM_lw_DEADBAND_COUNT & PWM_lw_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/PWM_lw.c ****                                                                            PWM_lw_DEADBAND_COUNT_SH
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 15


 659:Generated_Source\PSoC5/PWM_lw.c ****             #else
 660:Generated_Source\PSoC5/PWM_lw.c ****                 return (PWM_lw_DEADBAND_COUNT & PWM_lw_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_lw.c ****             #endif /* (PWM_lw_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (!PWM_lw_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_lw.c ****     }
 664:Generated_Source\PSoC5/PWM_lw.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_lw.c **** 
 666:Generated_Source\PSoC5/PWM_lw.c **** #if (PWM_lw_UseStatus || PWM_lw_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_lw.c **** 
 668:Generated_Source\PSoC5/PWM_lw.c **** 
 669:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_lw.c ****     *
 673:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_lw.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_lw.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_lw.c ****     *
 677:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_lw.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_lw.c ****     *
 680:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 682:Generated_Source\PSoC5/PWM_lw.c ****     *
 683:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_lw.c ****     void PWM_lw_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_lw.c ****     {
 686:Generated_Source\PSoC5/PWM_lw.c ****         CY_SET_REG8(PWM_lw_STATUS_MASK_PTR, interruptMode);
 687:Generated_Source\PSoC5/PWM_lw.c ****     }
 688:Generated_Source\PSoC5/PWM_lw.c **** 
 689:Generated_Source\PSoC5/PWM_lw.c **** 
 690:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_lw.c ****     *
 694:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_lw.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_lw.c ****     *
 697:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 699:Generated_Source\PSoC5/PWM_lw.c ****     *
 700:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_lw.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_lw.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_lw.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_lw.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_lw.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_lw.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_lw.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/PWM_lw.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_lw.c ****     *
 710:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_lw.c ****     uint8 PWM_lw_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_lw.c ****     {
 713:Generated_Source\PSoC5/PWM_lw.c ****         return (CY_GET_REG8(PWM_lw_STATUS_PTR));
 141              		.loc 1 713 0
 142 0000 034A     		ldr	r2, .L18
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 16


 143              	.LBE15:
 144              	.LBE14:
 145              	.LBB17:
 146              	.LBB18:
 714:Generated_Source\PSoC5/PWM_lw.c ****     }
 715:Generated_Source\PSoC5/PWM_lw.c **** 
 716:Generated_Source\PSoC5/PWM_lw.c **** #endif /* (PWM_lw_UseStatus || PWM_lw_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_lw.c **** 
 718:Generated_Source\PSoC5/PWM_lw.c **** 
 719:Generated_Source\PSoC5/PWM_lw.c **** #if (PWM_lw_UseControl)
 720:Generated_Source\PSoC5/PWM_lw.c **** 
 721:Generated_Source\PSoC5/PWM_lw.c **** 
 722:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_lw.c ****     *
 726:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 727:Generated_Source\PSoC5/PWM_lw.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_lw.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_lw.c ****     *
 730:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 732:Generated_Source\PSoC5/PWM_lw.c ****     *
 733:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_lw.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_lw.c ****     *
 736:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_lw.c ****     uint8 PWM_lw_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_lw.c ****     {
 739:Generated_Source\PSoC5/PWM_lw.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_lw.c **** 
 741:Generated_Source\PSoC5/PWM_lw.c ****         result = CY_GET_REG8(PWM_lw_CONTROL_PTR);
 742:Generated_Source\PSoC5/PWM_lw.c ****         return (result);
 743:Generated_Source\PSoC5/PWM_lw.c ****     }
 744:Generated_Source\PSoC5/PWM_lw.c **** 
 745:Generated_Source\PSoC5/PWM_lw.c **** 
 746:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_lw.c ****     *
 750:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_lw.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_lw.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_lw.c ****     *
 754:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_lw.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_lw.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_lw.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_lw.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_lw.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_lw.c ****     *
 761:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 763:Generated_Source\PSoC5/PWM_lw.c ****     *
 764:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_lw.c ****     void PWM_lw_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_lw.c ****     {
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 17


 767:Generated_Source\PSoC5/PWM_lw.c ****         CY_SET_REG8(PWM_lw_CONTROL_PTR, control);
 768:Generated_Source\PSoC5/PWM_lw.c ****     }
 769:Generated_Source\PSoC5/PWM_lw.c **** 
 770:Generated_Source\PSoC5/PWM_lw.c **** #endif /* (PWM_lw_UseControl) */
 771:Generated_Source\PSoC5/PWM_lw.c **** 
 772:Generated_Source\PSoC5/PWM_lw.c **** 
 773:Generated_Source\PSoC5/PWM_lw.c **** #if (!PWM_lw_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_lw.c **** 
 775:Generated_Source\PSoC5/PWM_lw.c **** 
 776:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_ReadCapture
 778:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_lw.c ****     *
 780:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_lw.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_lw.c ****     *
 783:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 785:Generated_Source\PSoC5/PWM_lw.c ****     *
 786:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_lw.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_lw.c ****     *
 789:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_lw.c ****     uint8 PWM_lw_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_lw.c ****     {
 792:Generated_Source\PSoC5/PWM_lw.c ****         return (CY_GET_REG8(PWM_lw_CAPTURE_LSB_PTR));
 147              		.loc 1 792 0
 148 0002 0449     		ldr	r1, .L18+4
 149              	.L14:
 150              	.LBE18:
 151              	.LBE17:
 152              	.LBB20:
 153              	.LBB16:
 713:Generated_Source\PSoC5/PWM_lw.c ****     }
 154              		.loc 1 713 0
 155 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 156              	.LBE16:
 157              	.LBE20:
 455:Generated_Source\PSoC5/PWM_lw.c ****             while(0u != (PWM_lw_ReadStatusRegister() & PWM_lw_STATUS_FIFONEMPTY))
 158              		.loc 1 455 0
 159 0006 DB06     		lsls	r3, r3, #27
 160 0008 01D5     		bpl	.L17
 161              	.LBB21:
 162              	.LBB19:
 163              		.loc 1 792 0
 164 000a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 165 000c FAE7     		b	.L14
 166              	.L17:
 167              	.LBE19:
 168              	.LBE21:
 459:Generated_Source\PSoC5/PWM_lw.c **** 
 169              		.loc 1 459 0
 170 000e 7047     		bx	lr
 171              	.L19:
 172              		.align	2
 173              	.L18:
 174 0010 69640040 		.word	1073767529
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 18


 175 0014 59640040 		.word	1073767513
 176              		.cfi_endproc
 177              	.LFE6:
 178              		.size	PWM_lw_ClearFIFO, .-PWM_lw_ClearFIFO
 179              		.section	.text.PWM_lw_Init,"ax",%progbits
 180              		.align	1
 181              		.global	PWM_lw_Init
 182              		.thumb
 183              		.thumb_func
 184              		.type	PWM_lw_Init, %function
 185              	PWM_lw_Init:
 186              	.LFB1:
  85:Generated_Source\PSoC5/PWM_lw.c ****     #if (PWM_lw_UsingFixedFunction || PWM_lw_UseControl)
 187              		.loc 1 85 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191 0000 10B5     		push	{r4, lr}
 192              		.cfi_def_cfa_offset 8
 193              		.cfi_offset 4, -8
 194              		.cfi_offset 14, -4
 117:Generated_Source\PSoC5/PWM_lw.c ****                 ((uint8)(~PWM_lw_CTRL_CMPMODE1_MASK));
 195              		.loc 1 117 0
 196 0002 124A     		ldr	r2, .L21
 126:Generated_Source\PSoC5/PWM_lw.c ****         #else /* (PWM_lw_Resolution == 16)*/
 197              		.loc 1 126 0
 198 0004 124C     		ldr	r4, .L21+4
 117:Generated_Source\PSoC5/PWM_lw.c ****                 ((uint8)(~PWM_lw_CTRL_CMPMODE1_MASK));
 199              		.loc 1 117 0
 200 0006 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 201              	.LVL1:
 202              	.LBB22:
 203              	.LBB23:
 406:Generated_Source\PSoC5/PWM_lw.c ****     }
 204              		.loc 1 406 0
 205 0008 6FF4B671 		mvn	r1, #364
 206              	.LBE23:
 207              	.LBE22:
 119:Generated_Source\PSoC5/PWM_lw.c ****                                    PWM_lw_DEFAULT_COMPARE1_MODE;
 208              		.loc 1 119 0
 209 000c 03F0C003 		and	r3, r3, #192
 210              	.LVL2:
 211 0010 43F00903 		orr	r3, r3, #9
 212 0014 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/PWM_lw.c ****         #else /* (PWM_lw_Resolution == 16)*/
 213              		.loc 1 126 0
 214 0016 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 215              	.LBB26:
 216              	.LBB24:
 406:Generated_Source\PSoC5/PWM_lw.c ****     }
 217              		.loc 1 406 0
 218 0018 0A44     		add	r2, r2, r1
 219              	.LBE24:
 220              	.LBE26:
 126:Generated_Source\PSoC5/PWM_lw.c ****         #else /* (PWM_lw_Resolution == 16)*/
 221              		.loc 1 126 0
 222 001a 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 19


 223 001e 2370     		strb	r3, [r4]
 224              	.LVL3:
 225              	.LBB27:
 226              	.LBB25:
 406:Generated_Source\PSoC5/PWM_lw.c ****     }
 227              		.loc 1 406 0
 228 0020 F923     		movs	r3, #249
 229 0022 1370     		strb	r3, [r2]
 230              	.LVL4:
 231              	.LBE25:
 232              	.LBE27:
 233              	.LBB28:
 234              	.LBB29:
 487:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (PWM_lw_UsingFixedFunction) */
 235              		.loc 1 487 0
 236 0024 82F84030 		strb	r3, [r2, #64]
 237              	.LVL5:
 238              	.LBE29:
 239              	.LBE28:
 240              	.LBB30:
 241              	.LBB31:
 522:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_UsingFixedFunction) */
 242              		.loc 1 522 0
 243 0028 0A4B     		ldr	r3, .L21+8
 244 002a 7C22     		movs	r2, #124
 245 002c 1A70     		strb	r2, [r3]
 246              	.LVL6:
 247              	.LBE31:
 248              	.LBE30:
 249              	.LBB32:
 250              	.LBB33:
 686:Generated_Source\PSoC5/PWM_lw.c ****     }
 251              		.loc 1 686 0
 252 002e 0022     		movs	r2, #0
 253 0030 83F86020 		strb	r2, [r3, #96]
 254              	.LVL7:
 255              	.LBE33:
 256              	.LBE32:
 167:Generated_Source\PSoC5/PWM_lw.c ****             /* Use the interrupt output of the status register for IRQ output */
 257              		.loc 1 167 0
 258 0034 FFF7FEFF 		bl	CyEnterCriticalSection
 259              	.LVL8:
 169:Generated_Source\PSoC5/PWM_lw.c **** 
 260              		.loc 1 169 0
 261 0038 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 262 003a 43F01003 		orr	r3, r3, #16
 263 003e 2370     		strb	r3, [r4]
 172:Generated_Source\PSoC5/PWM_lw.c **** 
 264              		.loc 1 172 0
 265 0040 FFF7FEFF 		bl	CyExitCriticalSection
 266              	.LVL9:
 179:Generated_Source\PSoC5/PWM_lw.c **** 
 267              		.loc 1 179 0
 268 0044 BDE81040 		pop	{r4, lr}
 269              		.cfi_restore 14
 270              		.cfi_restore 4
 271              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 20


 176:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_UseStatus) */
 272              		.loc 1 176 0
 273 0048 FFF7FEBF 		b	PWM_lw_ClearFIFO
 274              	.LVL10:
 275              	.L22:
 276              		.align	2
 277              	.L21:
 278 004c 76650040 		.word	1073767798
 279 0050 99640040 		.word	1073767577
 280 0054 29640040 		.word	1073767465
 281              		.cfi_endproc
 282              	.LFE1:
 283              		.size	PWM_lw_Init, .-PWM_lw_Init
 284              		.section	.text.PWM_lw_Start,"ax",%progbits
 285              		.align	1
 286              		.global	PWM_lw_Start
 287              		.thumb
 288              		.thumb_func
 289              		.type	PWM_lw_Start, %function
 290              	PWM_lw_Start:
 291              	.LFB0:
  56:Generated_Source\PSoC5/PWM_lw.c ****     /* If not Initialized then initialize all required hardware and software */
 292              		.loc 1 56 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296 0000 10B5     		push	{r4, lr}
 297              		.cfi_def_cfa_offset 8
 298              		.cfi_offset 4, -8
 299              		.cfi_offset 14, -4
  58:Generated_Source\PSoC5/PWM_lw.c ****     {
 300              		.loc 1 58 0
 301 0002 054C     		ldr	r4, .L25
 302 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 303 0006 1BB9     		cbnz	r3, .L24
  60:Generated_Source\PSoC5/PWM_lw.c ****         PWM_lw_initVar = 1u;
 304              		.loc 1 60 0
 305 0008 FFF7FEFF 		bl	PWM_lw_Init
 306              	.LVL11:
  61:Generated_Source\PSoC5/PWM_lw.c ****     }
 307              		.loc 1 61 0
 308 000c 0123     		movs	r3, #1
 309 000e 2370     		strb	r3, [r4]
 310              	.L24:
  65:Generated_Source\PSoC5/PWM_lw.c **** 
 311              		.loc 1 65 0
 312 0010 BDE81040 		pop	{r4, lr}
 313              		.cfi_restore 14
 314              		.cfi_restore 4
 315              		.cfi_def_cfa_offset 0
  63:Generated_Source\PSoC5/PWM_lw.c **** 
 316              		.loc 1 63 0
 317 0014 FFF7FEBF 		b	PWM_lw_Enable
 318              	.LVL12:
 319              	.L26:
 320              		.align	2
 321              	.L25:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 21


 322 0018 00000000 		.word	.LANCHOR0
 323              		.cfi_endproc
 324              	.LFE0:
 325              		.size	PWM_lw_Start, .-PWM_lw_Start
 326              		.section	.text.PWM_lw_WritePeriod,"ax",%progbits
 327              		.align	1
 328              		.global	PWM_lw_WritePeriod
 329              		.thumb
 330              		.thumb_func
 331              		.type	PWM_lw_WritePeriod, %function
 332              	PWM_lw_WritePeriod:
 333              	.LFB7:
 483:Generated_Source\PSoC5/PWM_lw.c ****     #if(PWM_lw_UsingFixedFunction)
 334              		.loc 1 483 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 339              	.LVL13:
 487:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (PWM_lw_UsingFixedFunction) */
 340              		.loc 1 487 0
 341 0000 014B     		ldr	r3, .L28
 342 0002 1870     		strb	r0, [r3]
 343 0004 7047     		bx	lr
 344              	.L29:
 345 0006 00BF     		.align	2
 346              	.L28:
 347 0008 49640040 		.word	1073767497
 348              		.cfi_endproc
 349              	.LFE7:
 350              		.size	PWM_lw_WritePeriod, .-PWM_lw_WritePeriod
 351              		.section	.text.PWM_lw_WriteCompare,"ax",%progbits
 352              		.align	1
 353              		.global	PWM_lw_WriteCompare
 354              		.thumb
 355              		.thumb_func
 356              		.type	PWM_lw_WriteCompare, %function
 357              	PWM_lw_WriteCompare:
 358              	.LFB8:
 518:Generated_Source\PSoC5/PWM_lw.c ****         #if(PWM_lw_UsingFixedFunction)
 359              		.loc 1 518 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 364              	.LVL14:
 522:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_UsingFixedFunction) */
 365              		.loc 1 522 0
 366 0000 014B     		ldr	r3, .L31
 367 0002 1870     		strb	r0, [r3]
 368 0004 7047     		bx	lr
 369              	.L32:
 370 0006 00BF     		.align	2
 371              	.L31:
 372 0008 29640040 		.word	1073767465
 373              		.cfi_endproc
 374              	.LFE8:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 22


 375              		.size	PWM_lw_WriteCompare, .-PWM_lw_WriteCompare
 376              		.section	.text.PWM_lw_SetInterruptMode,"ax",%progbits
 377              		.align	1
 378              		.global	PWM_lw_SetInterruptMode
 379              		.thumb
 380              		.thumb_func
 381              		.type	PWM_lw_SetInterruptMode, %function
 382              	PWM_lw_SetInterruptMode:
 383              	.LFB9:
 685:Generated_Source\PSoC5/PWM_lw.c ****         CY_SET_REG8(PWM_lw_STATUS_MASK_PTR, interruptMode);
 384              		.loc 1 685 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389              	.LVL15:
 686:Generated_Source\PSoC5/PWM_lw.c ****     }
 390              		.loc 1 686 0
 391 0000 014B     		ldr	r3, .L34
 392 0002 1870     		strb	r0, [r3]
 393 0004 7047     		bx	lr
 394              	.L35:
 395 0006 00BF     		.align	2
 396              	.L34:
 397 0008 89640040 		.word	1073767561
 398              		.cfi_endproc
 399              	.LFE9:
 400              		.size	PWM_lw_SetInterruptMode, .-PWM_lw_SetInterruptMode
 401              		.section	.text.PWM_lw_ReadStatusRegister,"ax",%progbits
 402              		.align	1
 403              		.global	PWM_lw_ReadStatusRegister
 404              		.thumb
 405              		.thumb_func
 406              		.type	PWM_lw_ReadStatusRegister, %function
 407              	PWM_lw_ReadStatusRegister:
 408              	.LFB10:
 712:Generated_Source\PSoC5/PWM_lw.c ****         return (CY_GET_REG8(PWM_lw_STATUS_PTR));
 409              		.loc 1 712 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 713:Generated_Source\PSoC5/PWM_lw.c ****     }
 414              		.loc 1 713 0
 415 0000 014B     		ldr	r3, .L37
 416 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 714:Generated_Source\PSoC5/PWM_lw.c **** 
 417              		.loc 1 714 0
 418 0004 7047     		bx	lr
 419              	.L38:
 420 0006 00BF     		.align	2
 421              	.L37:
 422 0008 69640040 		.word	1073767529
 423              		.cfi_endproc
 424              	.LFE10:
 425              		.size	PWM_lw_ReadStatusRegister, .-PWM_lw_ReadStatusRegister
 426              		.section	.text.PWM_lw_ReadControlRegister,"ax",%progbits
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 23


 427              		.align	1
 428              		.global	PWM_lw_ReadControlRegister
 429              		.thumb
 430              		.thumb_func
 431              		.type	PWM_lw_ReadControlRegister, %function
 432              	PWM_lw_ReadControlRegister:
 433              	.LFB11:
 738:Generated_Source\PSoC5/PWM_lw.c ****         uint8 result;
 434              		.loc 1 738 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 741:Generated_Source\PSoC5/PWM_lw.c ****         return (result);
 439              		.loc 1 741 0
 440 0000 014B     		ldr	r3, .L40
 441 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 442              	.LVL16:
 743:Generated_Source\PSoC5/PWM_lw.c **** 
 443              		.loc 1 743 0
 444 0004 7047     		bx	lr
 445              	.L41:
 446 0006 00BF     		.align	2
 447              	.L40:
 448 0008 76650040 		.word	1073767798
 449              		.cfi_endproc
 450              	.LFE11:
 451              		.size	PWM_lw_ReadControlRegister, .-PWM_lw_ReadControlRegister
 452              		.section	.text.PWM_lw_WriteControlRegister,"ax",%progbits
 453              		.align	1
 454              		.global	PWM_lw_WriteControlRegister
 455              		.thumb
 456              		.thumb_func
 457              		.type	PWM_lw_WriteControlRegister, %function
 458              	PWM_lw_WriteControlRegister:
 459              	.LFB12:
 766:Generated_Source\PSoC5/PWM_lw.c ****         CY_SET_REG8(PWM_lw_CONTROL_PTR, control);
 460              		.loc 1 766 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 465              	.LVL17:
 767:Generated_Source\PSoC5/PWM_lw.c ****     }
 466              		.loc 1 767 0
 467 0000 014B     		ldr	r3, .L43
 468 0002 1870     		strb	r0, [r3]
 469 0004 7047     		bx	lr
 470              	.L44:
 471 0006 00BF     		.align	2
 472              	.L43:
 473 0008 76650040 		.word	1073767798
 474              		.cfi_endproc
 475              	.LFE12:
 476              		.size	PWM_lw_WriteControlRegister, .-PWM_lw_WriteControlRegister
 477              		.section	.text.PWM_lw_ReadCapture,"ax",%progbits
 478              		.align	1
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 24


 479              		.global	PWM_lw_ReadCapture
 480              		.thumb
 481              		.thumb_func
 482              		.type	PWM_lw_ReadCapture, %function
 483              	PWM_lw_ReadCapture:
 484              	.LFB13:
 791:Generated_Source\PSoC5/PWM_lw.c ****         return (CY_GET_REG8(PWM_lw_CAPTURE_LSB_PTR));
 485              		.loc 1 791 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 0
 488              		@ frame_needed = 0, uses_anonymous_args = 0
 489              		@ link register save eliminated.
 490              		.loc 1 792 0
 491 0000 014B     		ldr	r3, .L46
 492 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 793:Generated_Source\PSoC5/PWM_lw.c ****     }
 493              		.loc 1 793 0
 494 0004 7047     		bx	lr
 495              	.L47:
 496 0006 00BF     		.align	2
 497              	.L46:
 498 0008 59640040 		.word	1073767513
 499              		.cfi_endproc
 500              	.LFE13:
 501              		.size	PWM_lw_ReadCapture, .-PWM_lw_ReadCapture
 502              		.section	.text.PWM_lw_ReadCompare,"ax",%progbits
 503              		.align	1
 504              		.global	PWM_lw_ReadCompare
 505              		.thumb
 506              		.thumb_func
 507              		.type	PWM_lw_ReadCompare, %function
 508              	PWM_lw_ReadCompare:
 509              	.LFB14:
 794:Generated_Source\PSoC5/PWM_lw.c **** 
 795:Generated_Source\PSoC5/PWM_lw.c **** #endif /* (!PWM_lw_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_lw.c **** 
 797:Generated_Source\PSoC5/PWM_lw.c **** 
 798:Generated_Source\PSoC5/PWM_lw.c **** #if (PWM_lw_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_lw.c **** 
 800:Generated_Source\PSoC5/PWM_lw.c **** 
 801:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_ReadCompare
 803:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_lw.c ****     *
 805:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_lw.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_lw.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_lw.c ****     *
 809:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 811:Generated_Source\PSoC5/PWM_lw.c ****     *
 812:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_lw.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_lw.c ****     *
 815:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_lw.c ****     uint8 PWM_lw_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_lw.c ****     {
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 25


 510              		.loc 1 817 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 818:Generated_Source\PSoC5/PWM_lw.c ****         #if(PWM_lw_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_lw.c ****             return ((uint8)CY_GET_REG16(PWM_lw_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/PWM_lw.c ****         #else
 821:Generated_Source\PSoC5/PWM_lw.c ****             return (CY_GET_REG8(PWM_lw_COMPARE1_LSB_PTR));
 515              		.loc 1 821 0
 516 0000 014B     		ldr	r3, .L49
 517 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 822:Generated_Source\PSoC5/PWM_lw.c ****         #endif /* (PWM_lw_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_lw.c ****     }
 518              		.loc 1 823 0
 519 0004 7047     		bx	lr
 520              	.L50:
 521 0006 00BF     		.align	2
 522              	.L49:
 523 0008 29640040 		.word	1073767465
 524              		.cfi_endproc
 525              	.LFE14:
 526              		.size	PWM_lw_ReadCompare, .-PWM_lw_ReadCompare
 527              		.section	.text.PWM_lw_ReadPeriod,"ax",%progbits
 528              		.align	1
 529              		.global	PWM_lw_ReadPeriod
 530              		.thumb
 531              		.thumb_func
 532              		.type	PWM_lw_ReadPeriod, %function
 533              	PWM_lw_ReadPeriod:
 534              	.LFB15:
 824:Generated_Source\PSoC5/PWM_lw.c **** 
 825:Generated_Source\PSoC5/PWM_lw.c **** #else
 826:Generated_Source\PSoC5/PWM_lw.c **** 
 827:Generated_Source\PSoC5/PWM_lw.c **** 
 828:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_ReadCompare1
 830:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_lw.c ****     *
 832:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_lw.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_lw.c ****     *
 835:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 837:Generated_Source\PSoC5/PWM_lw.c ****     *
 838:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_lw.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_lw.c ****     *
 841:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_lw.c ****     uint8 PWM_lw_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_lw.c ****     {
 844:Generated_Source\PSoC5/PWM_lw.c ****         return (CY_GET_REG8(PWM_lw_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/PWM_lw.c ****     }
 846:Generated_Source\PSoC5/PWM_lw.c **** 
 847:Generated_Source\PSoC5/PWM_lw.c **** 
 848:Generated_Source\PSoC5/PWM_lw.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/PWM_lw.c ****     * Function Name: PWM_lw_ReadCompare2
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 26


 850:Generated_Source\PSoC5/PWM_lw.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_lw.c ****     *
 852:Generated_Source\PSoC5/PWM_lw.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_lw.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_lw.c ****     *
 855:Generated_Source\PSoC5/PWM_lw.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_lw.c ****     *  None
 857:Generated_Source\PSoC5/PWM_lw.c ****     *
 858:Generated_Source\PSoC5/PWM_lw.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_lw.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_lw.c ****     *
 861:Generated_Source\PSoC5/PWM_lw.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_lw.c ****     uint8 PWM_lw_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_lw.c ****     {
 864:Generated_Source\PSoC5/PWM_lw.c ****         return (CY_GET_REG8(PWM_lw_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/PWM_lw.c ****     }
 866:Generated_Source\PSoC5/PWM_lw.c **** 
 867:Generated_Source\PSoC5/PWM_lw.c **** #endif /* (PWM_lw_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_lw.c **** 
 869:Generated_Source\PSoC5/PWM_lw.c **** 
 870:Generated_Source\PSoC5/PWM_lw.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_lw.c **** * Function Name: PWM_lw_ReadPeriod
 872:Generated_Source\PSoC5/PWM_lw.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_lw.c **** *
 874:Generated_Source\PSoC5/PWM_lw.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_lw.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_lw.c **** *
 877:Generated_Source\PSoC5/PWM_lw.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_lw.c **** *  None
 879:Generated_Source\PSoC5/PWM_lw.c **** *
 880:Generated_Source\PSoC5/PWM_lw.c **** * Return:
 881:Generated_Source\PSoC5/PWM_lw.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_lw.c **** *
 883:Generated_Source\PSoC5/PWM_lw.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_lw.c **** uint8 PWM_lw_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_lw.c **** {
 535              		.loc 1 885 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 886:Generated_Source\PSoC5/PWM_lw.c ****     #if(PWM_lw_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_lw.c ****         return ((uint8)CY_GET_REG16(PWM_lw_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_lw.c ****     #else
 889:Generated_Source\PSoC5/PWM_lw.c ****         return (CY_GET_REG8(PWM_lw_PERIOD_LSB_PTR));
 540              		.loc 1 889 0
 541 0000 014B     		ldr	r3, .L52
 542 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 890:Generated_Source\PSoC5/PWM_lw.c ****     #endif /* (PWM_lw_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_lw.c **** }
 543              		.loc 1 891 0
 544 0004 7047     		bx	lr
 545              	.L53:
 546 0006 00BF     		.align	2
 547              	.L52:
 548 0008 49640040 		.word	1073767497
 549              		.cfi_endproc
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 27


 550              	.LFE15:
 551              		.size	PWM_lw_ReadPeriod, .-PWM_lw_ReadPeriod
 552              		.global	PWM_lw_initVar
 553              		.bss
 554              		.set	.LANCHOR0,. + 0
 555              		.type	PWM_lw_initVar, %object
 556              		.size	PWM_lw_initVar, 1
 557              	PWM_lw_initVar:
 558 0000 00       		.space	1
 559              		.text
 560              	.Letext0:
 561              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 562              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 563              		.section	.debug_info,"",%progbits
 564              	.Ldebug_info0:
 565 0000 AF030000 		.4byte	0x3af
 566 0004 0400     		.2byte	0x4
 567 0006 00000000 		.4byte	.Ldebug_abbrev0
 568 000a 04       		.byte	0x4
 569 000b 01       		.uleb128 0x1
 570 000c 95000000 		.4byte	.LASF40
 571 0010 0C       		.byte	0xc
 572 0011 6E010000 		.4byte	.LASF41
 573 0015 92020000 		.4byte	.LASF42
 574 0019 50000000 		.4byte	.Ldebug_ranges0+0x50
 575 001d 00000000 		.4byte	0
 576 0021 00000000 		.4byte	.Ldebug_line0
 577 0025 02       		.uleb128 0x2
 578 0026 01       		.byte	0x1
 579 0027 06       		.byte	0x6
 580 0028 29030000 		.4byte	.LASF0
 581 002c 02       		.uleb128 0x2
 582 002d 01       		.byte	0x1
 583 002e 08       		.byte	0x8
 584 002f 60010000 		.4byte	.LASF1
 585 0033 02       		.uleb128 0x2
 586 0034 02       		.byte	0x2
 587 0035 05       		.byte	0x5
 588 0036 A9010000 		.4byte	.LASF2
 589 003a 02       		.uleb128 0x2
 590 003b 02       		.byte	0x2
 591 003c 07       		.byte	0x7
 592 003d 30000000 		.4byte	.LASF3
 593 0041 02       		.uleb128 0x2
 594 0042 04       		.byte	0x4
 595 0043 05       		.byte	0x5
 596 0044 0F030000 		.4byte	.LASF4
 597 0048 02       		.uleb128 0x2
 598 0049 04       		.byte	0x4
 599 004a 07       		.byte	0x7
 600 004b DB010000 		.4byte	.LASF5
 601 004f 02       		.uleb128 0x2
 602 0050 08       		.byte	0x8
 603 0051 05       		.byte	0x5
 604 0052 63020000 		.4byte	.LASF6
 605 0056 02       		.uleb128 0x2
 606 0057 08       		.byte	0x8
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 28


 607 0058 07       		.byte	0x7
 608 0059 5F000000 		.4byte	.LASF7
 609 005d 03       		.uleb128 0x3
 610 005e 04       		.byte	0x4
 611 005f 05       		.byte	0x5
 612 0060 696E7400 		.ascii	"int\000"
 613 0064 02       		.uleb128 0x2
 614 0065 04       		.byte	0x4
 615 0066 07       		.byte	0x7
 616 0067 ED010000 		.4byte	.LASF8
 617 006b 04       		.uleb128 0x4
 618 006c 23010000 		.4byte	.LASF12
 619 0070 02       		.byte	0x2
 620 0071 E401     		.2byte	0x1e4
 621 0073 2C000000 		.4byte	0x2c
 622 0077 02       		.uleb128 0x2
 623 0078 04       		.byte	0x4
 624 0079 04       		.byte	0x4
 625 007a 51000000 		.4byte	.LASF9
 626 007e 02       		.uleb128 0x2
 627 007f 08       		.byte	0x8
 628 0080 04       		.byte	0x4
 629 0081 8E010000 		.4byte	.LASF10
 630 0085 02       		.uleb128 0x2
 631 0086 01       		.byte	0x1
 632 0087 08       		.byte	0x8
 633 0088 18030000 		.4byte	.LASF11
 634 008c 04       		.uleb128 0x4
 635 008d 90000000 		.4byte	.LASF13
 636 0091 02       		.byte	0x2
 637 0092 8E02     		.2byte	0x28e
 638 0094 98000000 		.4byte	0x98
 639 0098 05       		.uleb128 0x5
 640 0099 6B000000 		.4byte	0x6b
 641 009d 02       		.uleb128 0x2
 642 009e 08       		.byte	0x8
 643 009f 04       		.byte	0x4
 644 00a0 1D030000 		.4byte	.LASF14
 645 00a4 02       		.uleb128 0x2
 646 00a5 04       		.byte	0x4
 647 00a6 07       		.byte	0x7
 648 00a7 5A020000 		.4byte	.LASF15
 649 00ab 06       		.uleb128 0x6
 650 00ac FA010000 		.4byte	.LASF16
 651 00b0 01       		.byte	0x1
 652 00b1 1603     		.2byte	0x316
 653 00b3 6B000000 		.4byte	0x6b
 654 00b7 01       		.byte	0x1
 655 00b8 06       		.uleb128 0x6
 656 00b9 76000000 		.4byte	.LASF17
 657 00bd 01       		.byte	0x1
 658 00be C702     		.2byte	0x2c7
 659 00c0 6B000000 		.4byte	0x6b
 660 00c4 01       		.byte	0x1
 661 00c5 07       		.uleb128 0x7
 662 00c6 F7020000 		.4byte	.LASF18
 663 00ca 01       		.byte	0x1
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 29


 664 00cb AC02     		.2byte	0x2ac
 665 00cd 01       		.byte	0x1
 666 00ce DF000000 		.4byte	0xdf
 667 00d2 08       		.uleb128 0x8
 668 00d3 71020000 		.4byte	.LASF20
 669 00d7 01       		.byte	0x1
 670 00d8 AC02     		.2byte	0x2ac
 671 00da 6B000000 		.4byte	0x6b
 672 00de 00       		.byte	0
 673 00df 07       		.uleb128 0x7
 674 00e0 95010000 		.4byte	.LASF19
 675 00e4 01       		.byte	0x1
 676 00e5 0402     		.2byte	0x204
 677 00e7 01       		.byte	0x1
 678 00e8 F9000000 		.4byte	0xf9
 679 00ec 08       		.uleb128 0x8
 680 00ed 35030000 		.4byte	.LASF21
 681 00f1 01       		.byte	0x1
 682 00f2 0402     		.2byte	0x204
 683 00f4 6B000000 		.4byte	0x6b
 684 00f8 00       		.byte	0
 685 00f9 07       		.uleb128 0x7
 686 00fa 00000000 		.4byte	.LASF22
 687 00fe 01       		.byte	0x1
 688 00ff E201     		.2byte	0x1e2
 689 0101 01       		.byte	0x1
 690 0102 13010000 		.4byte	0x113
 691 0106 08       		.uleb128 0x8
 692 0107 13000000 		.4byte	.LASF23
 693 010b 01       		.byte	0x1
 694 010c E201     		.2byte	0x1e2
 695 010e 6B000000 		.4byte	0x6b
 696 0112 00       		.byte	0
 697 0113 07       		.uleb128 0x7
 698 0114 E3020000 		.4byte	.LASF24
 699 0118 01       		.byte	0x1
 700 0119 9301     		.2byte	0x193
 701 011b 01       		.byte	0x1
 702 011c 2D010000 		.4byte	0x12d
 703 0120 08       		.uleb128 0x8
 704 0121 57000000 		.4byte	.LASF25
 705 0125 01       		.byte	0x1
 706 0126 9301     		.2byte	0x193
 707 0128 6B000000 		.4byte	0x6b
 708 012c 00       		.byte	0
 709 012d 09       		.uleb128 0x9
 710 012e 43000000 		.4byte	.LASF26
 711 0132 01       		.byte	0x1
 712 0133 C7       		.byte	0xc7
 713 0134 00000000 		.4byte	.LFB2
 714 0138 10000000 		.4byte	.LFE2-.LFB2
 715 013c 01       		.uleb128 0x1
 716 013d 9C       		.byte	0x9c
 717 013e 09       		.uleb128 0x9
 718 013f 3D030000 		.4byte	.LASF27
 719 0143 01       		.byte	0x1
 720 0144 E9       		.byte	0xe9
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 30


 721 0145 00000000 		.4byte	.LFB3
 722 0149 10000000 		.4byte	.LFE3-.LFB3
 723 014d 01       		.uleb128 0x1
 724 014e 9C       		.byte	0x9c
 725 014f 0A       		.uleb128 0xa
 726 0150 13010000 		.4byte	0x113
 727 0154 00000000 		.4byte	.LFB4
 728 0158 0C000000 		.4byte	.LFE4-.LFB4
 729 015c 01       		.uleb128 0x1
 730 015d 9C       		.byte	0x9c
 731 015e 6A010000 		.4byte	0x16a
 732 0162 0B       		.uleb128 0xb
 733 0163 20010000 		.4byte	0x120
 734 0167 01       		.uleb128 0x1
 735 0168 50       		.byte	0x50
 736 0169 00       		.byte	0
 737 016a 0C       		.uleb128 0xc
 738 016b 7F020000 		.4byte	.LASF35
 739 016f 01       		.byte	0x1
 740 0170 A901     		.2byte	0x1a9
 741 0172 6B000000 		.4byte	0x6b
 742 0176 00000000 		.4byte	.LFB5
 743 017a 14000000 		.4byte	.LFE5-.LFB5
 744 017e 01       		.uleb128 0x1
 745 017f 9C       		.byte	0x9c
 746 0180 0D       		.uleb128 0xd
 747 0181 B3010000 		.4byte	.LASF28
 748 0185 01       		.byte	0x1
 749 0186 C501     		.2byte	0x1c5
 750 0188 00000000 		.4byte	.LFB6
 751 018c 18000000 		.4byte	.LFE6-.LFB6
 752 0190 01       		.uleb128 0x1
 753 0191 9C       		.byte	0x9c
 754 0192 B7010000 		.4byte	0x1b7
 755 0196 0E       		.uleb128 0xe
 756 0197 B8000000 		.4byte	0xb8
 757 019b 00000000 		.4byte	.LBB14
 758 019f 00000000 		.4byte	.Ldebug_ranges0+0
 759 01a3 01       		.byte	0x1
 760 01a4 C701     		.2byte	0x1c7
 761 01a6 0E       		.uleb128 0xe
 762 01a7 AB000000 		.4byte	0xab
 763 01ab 02000000 		.4byte	.LBB17
 764 01af 18000000 		.4byte	.Ldebug_ranges0+0x18
 765 01b3 01       		.byte	0x1
 766 01b4 C901     		.2byte	0x1c9
 767 01b6 00       		.byte	0
 768 01b7 0F       		.uleb128 0xf
 769 01b8 23020000 		.4byte	.LASF29
 770 01bc 01       		.byte	0x1
 771 01bd 54       		.byte	0x54
 772 01be 00000000 		.4byte	.LFB1
 773 01c2 58000000 		.4byte	.LFE1-.LFB1
 774 01c6 01       		.uleb128 0x1
 775 01c7 9C       		.byte	0x9c
 776 01c8 7A020000 		.4byte	0x27a
 777 01cc 10       		.uleb128 0x10
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 31


 778 01cd 55020000 		.4byte	.LASF30
 779 01d1 01       		.byte	0x1
 780 01d2 57       		.byte	0x57
 781 01d3 6B000000 		.4byte	0x6b
 782 01d7 00000000 		.4byte	.LLST0
 783 01db 10       		.uleb128 0x10
 784 01dc 1A000000 		.4byte	.LASF31
 785 01e0 01       		.byte	0x1
 786 01e1 5D       		.byte	0x5d
 787 01e2 6B000000 		.4byte	0x6b
 788 01e6 18000000 		.4byte	.LLST1
 789 01ea 11       		.uleb128 0x11
 790 01eb 13010000 		.4byte	0x113
 791 01ef 08000000 		.4byte	.LBB22
 792 01f3 30000000 		.4byte	.Ldebug_ranges0+0x30
 793 01f7 01       		.byte	0x1
 794 01f8 85       		.byte	0x85
 795 01f9 07020000 		.4byte	0x207
 796 01fd 12       		.uleb128 0x12
 797 01fe 20010000 		.4byte	0x120
 798 0202 2B000000 		.4byte	.LLST2
 799 0206 00       		.byte	0
 800 0207 13       		.uleb128 0x13
 801 0208 F9000000 		.4byte	0xf9
 802 020c 24000000 		.4byte	.LBB28
 803 0210 04000000 		.4byte	.LBE28-.LBB28
 804 0214 01       		.byte	0x1
 805 0215 88       		.byte	0x88
 806 0216 24020000 		.4byte	0x224
 807 021a 12       		.uleb128 0x12
 808 021b 06010000 		.4byte	0x106
 809 021f 40000000 		.4byte	.LLST3
 810 0223 00       		.byte	0
 811 0224 13       		.uleb128 0x13
 812 0225 DF000000 		.4byte	0xdf
 813 0229 28000000 		.4byte	.LBB30
 814 022d 06000000 		.4byte	.LBE30-.LBB30
 815 0231 01       		.byte	0x1
 816 0232 8B       		.byte	0x8b
 817 0233 41020000 		.4byte	0x241
 818 0237 12       		.uleb128 0x12
 819 0238 EC000000 		.4byte	0xec
 820 023c 55000000 		.4byte	.LLST4
 821 0240 00       		.byte	0
 822 0241 13       		.uleb128 0x13
 823 0242 C5000000 		.4byte	0xc5
 824 0246 2E000000 		.4byte	.LBB32
 825 024a 06000000 		.4byte	.LBE32-.LBB32
 826 024e 01       		.byte	0x1
 827 024f 9A       		.byte	0x9a
 828 0250 5E020000 		.4byte	0x25e
 829 0254 12       		.uleb128 0x12
 830 0255 D2000000 		.4byte	0xd2
 831 0259 6A000000 		.4byte	.LLST5
 832 025d 00       		.byte	0
 833 025e 14       		.uleb128 0x14
 834 025f 38000000 		.4byte	.LVL8
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 32


 835 0263 9C030000 		.4byte	0x39c
 836 0267 14       		.uleb128 0x14
 837 0268 44000000 		.4byte	.LVL9
 838 026c A7030000 		.4byte	0x3a7
 839 0270 15       		.uleb128 0x15
 840 0271 4C000000 		.4byte	.LVL10
 841 0275 80010000 		.4byte	0x180
 842 0279 00       		.byte	0
 843 027a 0F       		.uleb128 0xf
 844 027b 36020000 		.4byte	.LASF32
 845 027f 01       		.byte	0x1
 846 0280 37       		.byte	0x37
 847 0281 00000000 		.4byte	.LFB0
 848 0285 1C000000 		.4byte	.LFE0-.LFB0
 849 0289 01       		.uleb128 0x1
 850 028a 9C       		.byte	0x9c
 851 028b A2020000 		.4byte	0x2a2
 852 028f 14       		.uleb128 0x14
 853 0290 0C000000 		.4byte	.LVL11
 854 0294 B7010000 		.4byte	0x1b7
 855 0298 15       		.uleb128 0x15
 856 0299 18000000 		.4byte	.LVL12
 857 029d 2D010000 		.4byte	0x12d
 858 02a1 00       		.byte	0
 859 02a2 0A       		.uleb128 0xa
 860 02a3 F9000000 		.4byte	0xf9
 861 02a7 00000000 		.4byte	.LFB7
 862 02ab 0C000000 		.4byte	.LFE7-.LFB7
 863 02af 01       		.uleb128 0x1
 864 02b0 9C       		.byte	0x9c
 865 02b1 BD020000 		.4byte	0x2bd
 866 02b5 0B       		.uleb128 0xb
 867 02b6 06010000 		.4byte	0x106
 868 02ba 01       		.uleb128 0x1
 869 02bb 50       		.byte	0x50
 870 02bc 00       		.byte	0
 871 02bd 0A       		.uleb128 0xa
 872 02be DF000000 		.4byte	0xdf
 873 02c2 00000000 		.4byte	.LFB8
 874 02c6 0C000000 		.4byte	.LFE8-.LFB8
 875 02ca 01       		.uleb128 0x1
 876 02cb 9C       		.byte	0x9c
 877 02cc D8020000 		.4byte	0x2d8
 878 02d0 0B       		.uleb128 0xb
 879 02d1 EC000000 		.4byte	0xec
 880 02d5 01       		.uleb128 0x1
 881 02d6 50       		.byte	0x50
 882 02d7 00       		.byte	0
 883 02d8 0A       		.uleb128 0xa
 884 02d9 C5000000 		.4byte	0xc5
 885 02dd 00000000 		.4byte	.LFB9
 886 02e1 0C000000 		.4byte	.LFE9-.LFB9
 887 02e5 01       		.uleb128 0x1
 888 02e6 9C       		.byte	0x9c
 889 02e7 F3020000 		.4byte	0x2f3
 890 02eb 0B       		.uleb128 0xb
 891 02ec D2000000 		.4byte	0xd2
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 33


 892 02f0 01       		.uleb128 0x1
 893 02f1 50       		.byte	0x50
 894 02f2 00       		.byte	0
 895 02f3 16       		.uleb128 0x16
 896 02f4 B8000000 		.4byte	0xb8
 897 02f8 00000000 		.4byte	.LFB10
 898 02fc 0C000000 		.4byte	.LFE10-.LFB10
 899 0300 01       		.uleb128 0x1
 900 0301 9C       		.byte	0x9c
 901 0302 17       		.uleb128 0x17
 902 0303 58030000 		.4byte	.LASF43
 903 0307 01       		.byte	0x1
 904 0308 E102     		.2byte	0x2e1
 905 030a 6B000000 		.4byte	0x6b
 906 030e 00000000 		.4byte	.LFB11
 907 0312 0C000000 		.4byte	.LFE11-.LFB11
 908 0316 01       		.uleb128 0x1
 909 0317 9C       		.byte	0x9c
 910 0318 2B030000 		.4byte	0x32b
 911 031c 18       		.uleb128 0x18
 912 031d 2F020000 		.4byte	.LASF33
 913 0321 01       		.byte	0x1
 914 0322 E302     		.2byte	0x2e3
 915 0324 6B000000 		.4byte	0x6b
 916 0328 01       		.uleb128 0x1
 917 0329 50       		.byte	0x50
 918 032a 00       		.byte	0
 919 032b 0D       		.uleb128 0xd
 920 032c 31010000 		.4byte	.LASF34
 921 0330 01       		.byte	0x1
 922 0331 FD02     		.2byte	0x2fd
 923 0333 00000000 		.4byte	.LFB12
 924 0337 0C000000 		.4byte	.LFE12-.LFB12
 925 033b 01       		.uleb128 0x1
 926 033c 9C       		.byte	0x9c
 927 033d 50030000 		.4byte	0x350
 928 0341 19       		.uleb128 0x19
 929 0342 29010000 		.4byte	.LASF44
 930 0346 01       		.byte	0x1
 931 0347 FD02     		.2byte	0x2fd
 932 0349 6B000000 		.4byte	0x6b
 933 034d 01       		.uleb128 0x1
 934 034e 50       		.byte	0x50
 935 034f 00       		.byte	0
 936 0350 16       		.uleb128 0x16
 937 0351 AB000000 		.4byte	0xab
 938 0355 00000000 		.4byte	.LFB13
 939 0359 0C000000 		.4byte	.LFE13-.LFB13
 940 035d 01       		.uleb128 0x1
 941 035e 9C       		.byte	0x9c
 942 035f 0C       		.uleb128 0xc
 943 0360 4D010000 		.4byte	.LASF36
 944 0364 01       		.byte	0x1
 945 0365 3003     		.2byte	0x330
 946 0367 6B000000 		.4byte	0x6b
 947 036b 00000000 		.4byte	.LFB14
 948 036f 0C000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 34


 949 0373 01       		.uleb128 0x1
 950 0374 9C       		.byte	0x9c
 951 0375 0C       		.uleb128 0xc
 952 0376 43020000 		.4byte	.LASF37
 953 037a 01       		.byte	0x1
 954 037b 7403     		.2byte	0x374
 955 037d 6B000000 		.4byte	0x6b
 956 0381 00000000 		.4byte	.LFB15
 957 0385 0C000000 		.4byte	.LFE15-.LFB15
 958 0389 01       		.uleb128 0x1
 959 038a 9C       		.byte	0x9c
 960 038b 1A       		.uleb128 0x1a
 961 038c 49030000 		.4byte	.LASF45
 962 0390 01       		.byte	0x1
 963 0391 20       		.byte	0x20
 964 0392 6B000000 		.4byte	0x6b
 965 0396 05       		.uleb128 0x5
 966 0397 03       		.byte	0x3
 967 0398 00000000 		.4byte	PWM_lw_initVar
 968 039c 1B       		.uleb128 0x1b
 969 039d C4010000 		.4byte	.LASF38
 970 03a1 C4010000 		.4byte	.LASF38
 971 03a5 03       		.byte	0x3
 972 03a6 7D       		.byte	0x7d
 973 03a7 1B       		.uleb128 0x1b
 974 03a8 0D020000 		.4byte	.LASF39
 975 03ac 0D020000 		.4byte	.LASF39
 976 03b0 03       		.byte	0x3
 977 03b1 7E       		.byte	0x7e
 978 03b2 00       		.byte	0
 979              		.section	.debug_abbrev,"",%progbits
 980              	.Ldebug_abbrev0:
 981 0000 01       		.uleb128 0x1
 982 0001 11       		.uleb128 0x11
 983 0002 01       		.byte	0x1
 984 0003 25       		.uleb128 0x25
 985 0004 0E       		.uleb128 0xe
 986 0005 13       		.uleb128 0x13
 987 0006 0B       		.uleb128 0xb
 988 0007 03       		.uleb128 0x3
 989 0008 0E       		.uleb128 0xe
 990 0009 1B       		.uleb128 0x1b
 991 000a 0E       		.uleb128 0xe
 992 000b 55       		.uleb128 0x55
 993 000c 17       		.uleb128 0x17
 994 000d 11       		.uleb128 0x11
 995 000e 01       		.uleb128 0x1
 996 000f 10       		.uleb128 0x10
 997 0010 17       		.uleb128 0x17
 998 0011 00       		.byte	0
 999 0012 00       		.byte	0
 1000 0013 02       		.uleb128 0x2
 1001 0014 24       		.uleb128 0x24
 1002 0015 00       		.byte	0
 1003 0016 0B       		.uleb128 0xb
 1004 0017 0B       		.uleb128 0xb
 1005 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 35


 1006 0019 0B       		.uleb128 0xb
 1007 001a 03       		.uleb128 0x3
 1008 001b 0E       		.uleb128 0xe
 1009 001c 00       		.byte	0
 1010 001d 00       		.byte	0
 1011 001e 03       		.uleb128 0x3
 1012 001f 24       		.uleb128 0x24
 1013 0020 00       		.byte	0
 1014 0021 0B       		.uleb128 0xb
 1015 0022 0B       		.uleb128 0xb
 1016 0023 3E       		.uleb128 0x3e
 1017 0024 0B       		.uleb128 0xb
 1018 0025 03       		.uleb128 0x3
 1019 0026 08       		.uleb128 0x8
 1020 0027 00       		.byte	0
 1021 0028 00       		.byte	0
 1022 0029 04       		.uleb128 0x4
 1023 002a 16       		.uleb128 0x16
 1024 002b 00       		.byte	0
 1025 002c 03       		.uleb128 0x3
 1026 002d 0E       		.uleb128 0xe
 1027 002e 3A       		.uleb128 0x3a
 1028 002f 0B       		.uleb128 0xb
 1029 0030 3B       		.uleb128 0x3b
 1030 0031 05       		.uleb128 0x5
 1031 0032 49       		.uleb128 0x49
 1032 0033 13       		.uleb128 0x13
 1033 0034 00       		.byte	0
 1034 0035 00       		.byte	0
 1035 0036 05       		.uleb128 0x5
 1036 0037 35       		.uleb128 0x35
 1037 0038 00       		.byte	0
 1038 0039 49       		.uleb128 0x49
 1039 003a 13       		.uleb128 0x13
 1040 003b 00       		.byte	0
 1041 003c 00       		.byte	0
 1042 003d 06       		.uleb128 0x6
 1043 003e 2E       		.uleb128 0x2e
 1044 003f 00       		.byte	0
 1045 0040 3F       		.uleb128 0x3f
 1046 0041 19       		.uleb128 0x19
 1047 0042 03       		.uleb128 0x3
 1048 0043 0E       		.uleb128 0xe
 1049 0044 3A       		.uleb128 0x3a
 1050 0045 0B       		.uleb128 0xb
 1051 0046 3B       		.uleb128 0x3b
 1052 0047 05       		.uleb128 0x5
 1053 0048 27       		.uleb128 0x27
 1054 0049 19       		.uleb128 0x19
 1055 004a 49       		.uleb128 0x49
 1056 004b 13       		.uleb128 0x13
 1057 004c 20       		.uleb128 0x20
 1058 004d 0B       		.uleb128 0xb
 1059 004e 00       		.byte	0
 1060 004f 00       		.byte	0
 1061 0050 07       		.uleb128 0x7
 1062 0051 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 36


 1063 0052 01       		.byte	0x1
 1064 0053 3F       		.uleb128 0x3f
 1065 0054 19       		.uleb128 0x19
 1066 0055 03       		.uleb128 0x3
 1067 0056 0E       		.uleb128 0xe
 1068 0057 3A       		.uleb128 0x3a
 1069 0058 0B       		.uleb128 0xb
 1070 0059 3B       		.uleb128 0x3b
 1071 005a 05       		.uleb128 0x5
 1072 005b 27       		.uleb128 0x27
 1073 005c 19       		.uleb128 0x19
 1074 005d 20       		.uleb128 0x20
 1075 005e 0B       		.uleb128 0xb
 1076 005f 01       		.uleb128 0x1
 1077 0060 13       		.uleb128 0x13
 1078 0061 00       		.byte	0
 1079 0062 00       		.byte	0
 1080 0063 08       		.uleb128 0x8
 1081 0064 05       		.uleb128 0x5
 1082 0065 00       		.byte	0
 1083 0066 03       		.uleb128 0x3
 1084 0067 0E       		.uleb128 0xe
 1085 0068 3A       		.uleb128 0x3a
 1086 0069 0B       		.uleb128 0xb
 1087 006a 3B       		.uleb128 0x3b
 1088 006b 05       		.uleb128 0x5
 1089 006c 49       		.uleb128 0x49
 1090 006d 13       		.uleb128 0x13
 1091 006e 00       		.byte	0
 1092 006f 00       		.byte	0
 1093 0070 09       		.uleb128 0x9
 1094 0071 2E       		.uleb128 0x2e
 1095 0072 00       		.byte	0
 1096 0073 3F       		.uleb128 0x3f
 1097 0074 19       		.uleb128 0x19
 1098 0075 03       		.uleb128 0x3
 1099 0076 0E       		.uleb128 0xe
 1100 0077 3A       		.uleb128 0x3a
 1101 0078 0B       		.uleb128 0xb
 1102 0079 3B       		.uleb128 0x3b
 1103 007a 0B       		.uleb128 0xb
 1104 007b 27       		.uleb128 0x27
 1105 007c 19       		.uleb128 0x19
 1106 007d 11       		.uleb128 0x11
 1107 007e 01       		.uleb128 0x1
 1108 007f 12       		.uleb128 0x12
 1109 0080 06       		.uleb128 0x6
 1110 0081 40       		.uleb128 0x40
 1111 0082 18       		.uleb128 0x18
 1112 0083 9742     		.uleb128 0x2117
 1113 0085 19       		.uleb128 0x19
 1114 0086 00       		.byte	0
 1115 0087 00       		.byte	0
 1116 0088 0A       		.uleb128 0xa
 1117 0089 2E       		.uleb128 0x2e
 1118 008a 01       		.byte	0x1
 1119 008b 31       		.uleb128 0x31
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 37


 1120 008c 13       		.uleb128 0x13
 1121 008d 11       		.uleb128 0x11
 1122 008e 01       		.uleb128 0x1
 1123 008f 12       		.uleb128 0x12
 1124 0090 06       		.uleb128 0x6
 1125 0091 40       		.uleb128 0x40
 1126 0092 18       		.uleb128 0x18
 1127 0093 9742     		.uleb128 0x2117
 1128 0095 19       		.uleb128 0x19
 1129 0096 01       		.uleb128 0x1
 1130 0097 13       		.uleb128 0x13
 1131 0098 00       		.byte	0
 1132 0099 00       		.byte	0
 1133 009a 0B       		.uleb128 0xb
 1134 009b 05       		.uleb128 0x5
 1135 009c 00       		.byte	0
 1136 009d 31       		.uleb128 0x31
 1137 009e 13       		.uleb128 0x13
 1138 009f 02       		.uleb128 0x2
 1139 00a0 18       		.uleb128 0x18
 1140 00a1 00       		.byte	0
 1141 00a2 00       		.byte	0
 1142 00a3 0C       		.uleb128 0xc
 1143 00a4 2E       		.uleb128 0x2e
 1144 00a5 00       		.byte	0
 1145 00a6 3F       		.uleb128 0x3f
 1146 00a7 19       		.uleb128 0x19
 1147 00a8 03       		.uleb128 0x3
 1148 00a9 0E       		.uleb128 0xe
 1149 00aa 3A       		.uleb128 0x3a
 1150 00ab 0B       		.uleb128 0xb
 1151 00ac 3B       		.uleb128 0x3b
 1152 00ad 05       		.uleb128 0x5
 1153 00ae 27       		.uleb128 0x27
 1154 00af 19       		.uleb128 0x19
 1155 00b0 49       		.uleb128 0x49
 1156 00b1 13       		.uleb128 0x13
 1157 00b2 11       		.uleb128 0x11
 1158 00b3 01       		.uleb128 0x1
 1159 00b4 12       		.uleb128 0x12
 1160 00b5 06       		.uleb128 0x6
 1161 00b6 40       		.uleb128 0x40
 1162 00b7 18       		.uleb128 0x18
 1163 00b8 9742     		.uleb128 0x2117
 1164 00ba 19       		.uleb128 0x19
 1165 00bb 00       		.byte	0
 1166 00bc 00       		.byte	0
 1167 00bd 0D       		.uleb128 0xd
 1168 00be 2E       		.uleb128 0x2e
 1169 00bf 01       		.byte	0x1
 1170 00c0 3F       		.uleb128 0x3f
 1171 00c1 19       		.uleb128 0x19
 1172 00c2 03       		.uleb128 0x3
 1173 00c3 0E       		.uleb128 0xe
 1174 00c4 3A       		.uleb128 0x3a
 1175 00c5 0B       		.uleb128 0xb
 1176 00c6 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 38


 1177 00c7 05       		.uleb128 0x5
 1178 00c8 27       		.uleb128 0x27
 1179 00c9 19       		.uleb128 0x19
 1180 00ca 11       		.uleb128 0x11
 1181 00cb 01       		.uleb128 0x1
 1182 00cc 12       		.uleb128 0x12
 1183 00cd 06       		.uleb128 0x6
 1184 00ce 40       		.uleb128 0x40
 1185 00cf 18       		.uleb128 0x18
 1186 00d0 9742     		.uleb128 0x2117
 1187 00d2 19       		.uleb128 0x19
 1188 00d3 01       		.uleb128 0x1
 1189 00d4 13       		.uleb128 0x13
 1190 00d5 00       		.byte	0
 1191 00d6 00       		.byte	0
 1192 00d7 0E       		.uleb128 0xe
 1193 00d8 1D       		.uleb128 0x1d
 1194 00d9 00       		.byte	0
 1195 00da 31       		.uleb128 0x31
 1196 00db 13       		.uleb128 0x13
 1197 00dc 52       		.uleb128 0x52
 1198 00dd 01       		.uleb128 0x1
 1199 00de 55       		.uleb128 0x55
 1200 00df 17       		.uleb128 0x17
 1201 00e0 58       		.uleb128 0x58
 1202 00e1 0B       		.uleb128 0xb
 1203 00e2 59       		.uleb128 0x59
 1204 00e3 05       		.uleb128 0x5
 1205 00e4 00       		.byte	0
 1206 00e5 00       		.byte	0
 1207 00e6 0F       		.uleb128 0xf
 1208 00e7 2E       		.uleb128 0x2e
 1209 00e8 01       		.byte	0x1
 1210 00e9 3F       		.uleb128 0x3f
 1211 00ea 19       		.uleb128 0x19
 1212 00eb 03       		.uleb128 0x3
 1213 00ec 0E       		.uleb128 0xe
 1214 00ed 3A       		.uleb128 0x3a
 1215 00ee 0B       		.uleb128 0xb
 1216 00ef 3B       		.uleb128 0x3b
 1217 00f0 0B       		.uleb128 0xb
 1218 00f1 27       		.uleb128 0x27
 1219 00f2 19       		.uleb128 0x19
 1220 00f3 11       		.uleb128 0x11
 1221 00f4 01       		.uleb128 0x1
 1222 00f5 12       		.uleb128 0x12
 1223 00f6 06       		.uleb128 0x6
 1224 00f7 40       		.uleb128 0x40
 1225 00f8 18       		.uleb128 0x18
 1226 00f9 9742     		.uleb128 0x2117
 1227 00fb 19       		.uleb128 0x19
 1228 00fc 01       		.uleb128 0x1
 1229 00fd 13       		.uleb128 0x13
 1230 00fe 00       		.byte	0
 1231 00ff 00       		.byte	0
 1232 0100 10       		.uleb128 0x10
 1233 0101 34       		.uleb128 0x34
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 39


 1234 0102 00       		.byte	0
 1235 0103 03       		.uleb128 0x3
 1236 0104 0E       		.uleb128 0xe
 1237 0105 3A       		.uleb128 0x3a
 1238 0106 0B       		.uleb128 0xb
 1239 0107 3B       		.uleb128 0x3b
 1240 0108 0B       		.uleb128 0xb
 1241 0109 49       		.uleb128 0x49
 1242 010a 13       		.uleb128 0x13
 1243 010b 02       		.uleb128 0x2
 1244 010c 17       		.uleb128 0x17
 1245 010d 00       		.byte	0
 1246 010e 00       		.byte	0
 1247 010f 11       		.uleb128 0x11
 1248 0110 1D       		.uleb128 0x1d
 1249 0111 01       		.byte	0x1
 1250 0112 31       		.uleb128 0x31
 1251 0113 13       		.uleb128 0x13
 1252 0114 52       		.uleb128 0x52
 1253 0115 01       		.uleb128 0x1
 1254 0116 55       		.uleb128 0x55
 1255 0117 17       		.uleb128 0x17
 1256 0118 58       		.uleb128 0x58
 1257 0119 0B       		.uleb128 0xb
 1258 011a 59       		.uleb128 0x59
 1259 011b 0B       		.uleb128 0xb
 1260 011c 01       		.uleb128 0x1
 1261 011d 13       		.uleb128 0x13
 1262 011e 00       		.byte	0
 1263 011f 00       		.byte	0
 1264 0120 12       		.uleb128 0x12
 1265 0121 05       		.uleb128 0x5
 1266 0122 00       		.byte	0
 1267 0123 31       		.uleb128 0x31
 1268 0124 13       		.uleb128 0x13
 1269 0125 02       		.uleb128 0x2
 1270 0126 17       		.uleb128 0x17
 1271 0127 00       		.byte	0
 1272 0128 00       		.byte	0
 1273 0129 13       		.uleb128 0x13
 1274 012a 1D       		.uleb128 0x1d
 1275 012b 01       		.byte	0x1
 1276 012c 31       		.uleb128 0x31
 1277 012d 13       		.uleb128 0x13
 1278 012e 11       		.uleb128 0x11
 1279 012f 01       		.uleb128 0x1
 1280 0130 12       		.uleb128 0x12
 1281 0131 06       		.uleb128 0x6
 1282 0132 58       		.uleb128 0x58
 1283 0133 0B       		.uleb128 0xb
 1284 0134 59       		.uleb128 0x59
 1285 0135 0B       		.uleb128 0xb
 1286 0136 01       		.uleb128 0x1
 1287 0137 13       		.uleb128 0x13
 1288 0138 00       		.byte	0
 1289 0139 00       		.byte	0
 1290 013a 14       		.uleb128 0x14
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 40


 1291 013b 898201   		.uleb128 0x4109
 1292 013e 00       		.byte	0
 1293 013f 11       		.uleb128 0x11
 1294 0140 01       		.uleb128 0x1
 1295 0141 31       		.uleb128 0x31
 1296 0142 13       		.uleb128 0x13
 1297 0143 00       		.byte	0
 1298 0144 00       		.byte	0
 1299 0145 15       		.uleb128 0x15
 1300 0146 898201   		.uleb128 0x4109
 1301 0149 00       		.byte	0
 1302 014a 11       		.uleb128 0x11
 1303 014b 01       		.uleb128 0x1
 1304 014c 9542     		.uleb128 0x2115
 1305 014e 19       		.uleb128 0x19
 1306 014f 31       		.uleb128 0x31
 1307 0150 13       		.uleb128 0x13
 1308 0151 00       		.byte	0
 1309 0152 00       		.byte	0
 1310 0153 16       		.uleb128 0x16
 1311 0154 2E       		.uleb128 0x2e
 1312 0155 00       		.byte	0
 1313 0156 31       		.uleb128 0x31
 1314 0157 13       		.uleb128 0x13
 1315 0158 11       		.uleb128 0x11
 1316 0159 01       		.uleb128 0x1
 1317 015a 12       		.uleb128 0x12
 1318 015b 06       		.uleb128 0x6
 1319 015c 40       		.uleb128 0x40
 1320 015d 18       		.uleb128 0x18
 1321 015e 9742     		.uleb128 0x2117
 1322 0160 19       		.uleb128 0x19
 1323 0161 00       		.byte	0
 1324 0162 00       		.byte	0
 1325 0163 17       		.uleb128 0x17
 1326 0164 2E       		.uleb128 0x2e
 1327 0165 01       		.byte	0x1
 1328 0166 3F       		.uleb128 0x3f
 1329 0167 19       		.uleb128 0x19
 1330 0168 03       		.uleb128 0x3
 1331 0169 0E       		.uleb128 0xe
 1332 016a 3A       		.uleb128 0x3a
 1333 016b 0B       		.uleb128 0xb
 1334 016c 3B       		.uleb128 0x3b
 1335 016d 05       		.uleb128 0x5
 1336 016e 27       		.uleb128 0x27
 1337 016f 19       		.uleb128 0x19
 1338 0170 49       		.uleb128 0x49
 1339 0171 13       		.uleb128 0x13
 1340 0172 11       		.uleb128 0x11
 1341 0173 01       		.uleb128 0x1
 1342 0174 12       		.uleb128 0x12
 1343 0175 06       		.uleb128 0x6
 1344 0176 40       		.uleb128 0x40
 1345 0177 18       		.uleb128 0x18
 1346 0178 9742     		.uleb128 0x2117
 1347 017a 19       		.uleb128 0x19
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 41


 1348 017b 01       		.uleb128 0x1
 1349 017c 13       		.uleb128 0x13
 1350 017d 00       		.byte	0
 1351 017e 00       		.byte	0
 1352 017f 18       		.uleb128 0x18
 1353 0180 34       		.uleb128 0x34
 1354 0181 00       		.byte	0
 1355 0182 03       		.uleb128 0x3
 1356 0183 0E       		.uleb128 0xe
 1357 0184 3A       		.uleb128 0x3a
 1358 0185 0B       		.uleb128 0xb
 1359 0186 3B       		.uleb128 0x3b
 1360 0187 05       		.uleb128 0x5
 1361 0188 49       		.uleb128 0x49
 1362 0189 13       		.uleb128 0x13
 1363 018a 02       		.uleb128 0x2
 1364 018b 18       		.uleb128 0x18
 1365 018c 00       		.byte	0
 1366 018d 00       		.byte	0
 1367 018e 19       		.uleb128 0x19
 1368 018f 05       		.uleb128 0x5
 1369 0190 00       		.byte	0
 1370 0191 03       		.uleb128 0x3
 1371 0192 0E       		.uleb128 0xe
 1372 0193 3A       		.uleb128 0x3a
 1373 0194 0B       		.uleb128 0xb
 1374 0195 3B       		.uleb128 0x3b
 1375 0196 05       		.uleb128 0x5
 1376 0197 49       		.uleb128 0x49
 1377 0198 13       		.uleb128 0x13
 1378 0199 02       		.uleb128 0x2
 1379 019a 18       		.uleb128 0x18
 1380 019b 00       		.byte	0
 1381 019c 00       		.byte	0
 1382 019d 1A       		.uleb128 0x1a
 1383 019e 34       		.uleb128 0x34
 1384 019f 00       		.byte	0
 1385 01a0 03       		.uleb128 0x3
 1386 01a1 0E       		.uleb128 0xe
 1387 01a2 3A       		.uleb128 0x3a
 1388 01a3 0B       		.uleb128 0xb
 1389 01a4 3B       		.uleb128 0x3b
 1390 01a5 0B       		.uleb128 0xb
 1391 01a6 49       		.uleb128 0x49
 1392 01a7 13       		.uleb128 0x13
 1393 01a8 3F       		.uleb128 0x3f
 1394 01a9 19       		.uleb128 0x19
 1395 01aa 02       		.uleb128 0x2
 1396 01ab 18       		.uleb128 0x18
 1397 01ac 00       		.byte	0
 1398 01ad 00       		.byte	0
 1399 01ae 1B       		.uleb128 0x1b
 1400 01af 2E       		.uleb128 0x2e
 1401 01b0 00       		.byte	0
 1402 01b1 3F       		.uleb128 0x3f
 1403 01b2 19       		.uleb128 0x19
 1404 01b3 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 42


 1405 01b4 19       		.uleb128 0x19
 1406 01b5 6E       		.uleb128 0x6e
 1407 01b6 0E       		.uleb128 0xe
 1408 01b7 03       		.uleb128 0x3
 1409 01b8 0E       		.uleb128 0xe
 1410 01b9 3A       		.uleb128 0x3a
 1411 01ba 0B       		.uleb128 0xb
 1412 01bb 3B       		.uleb128 0x3b
 1413 01bc 0B       		.uleb128 0xb
 1414 01bd 00       		.byte	0
 1415 01be 00       		.byte	0
 1416 01bf 00       		.byte	0
 1417              		.section	.debug_loc,"",%progbits
 1418              	.Ldebug_loc0:
 1419              	.LLST0:
 1420 0000 08000000 		.4byte	.LVL1
 1421 0004 10000000 		.4byte	.LVL2
 1422 0008 0600     		.2byte	0x6
 1423 000a 73       		.byte	0x73
 1424 000b 00       		.sleb128 0
 1425 000c 09       		.byte	0x9
 1426 000d C0       		.byte	0xc0
 1427 000e 1A       		.byte	0x1a
 1428 000f 9F       		.byte	0x9f
 1429 0010 00000000 		.4byte	0
 1430 0014 00000000 		.4byte	0
 1431              	.LLST1:
 1432 0018 38000000 		.4byte	.LVL8
 1433 001c 43000000 		.4byte	.LVL9-1
 1434 0020 0100     		.2byte	0x1
 1435 0022 50       		.byte	0x50
 1436 0023 00000000 		.4byte	0
 1437 0027 00000000 		.4byte	0
 1438              	.LLST2:
 1439 002b 20000000 		.4byte	.LVL3
 1440 002f 24000000 		.4byte	.LVL4
 1441 0033 0300     		.2byte	0x3
 1442 0035 09       		.byte	0x9
 1443 0036 F9       		.byte	0xf9
 1444 0037 9F       		.byte	0x9f
 1445 0038 00000000 		.4byte	0
 1446 003c 00000000 		.4byte	0
 1447              	.LLST3:
 1448 0040 24000000 		.4byte	.LVL4
 1449 0044 28000000 		.4byte	.LVL5
 1450 0048 0300     		.2byte	0x3
 1451 004a 09       		.byte	0x9
 1452 004b F9       		.byte	0xf9
 1453 004c 9F       		.byte	0x9f
 1454 004d 00000000 		.4byte	0
 1455 0051 00000000 		.4byte	0
 1456              	.LLST4:
 1457 0055 28000000 		.4byte	.LVL5
 1458 0059 2E000000 		.4byte	.LVL6
 1459 005d 0300     		.2byte	0x3
 1460 005f 08       		.byte	0x8
 1461 0060 7C       		.byte	0x7c
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 43


 1462 0061 9F       		.byte	0x9f
 1463 0062 00000000 		.4byte	0
 1464 0066 00000000 		.4byte	0
 1465              	.LLST5:
 1466 006a 2E000000 		.4byte	.LVL6
 1467 006e 34000000 		.4byte	.LVL7
 1468 0072 0200     		.2byte	0x2
 1469 0074 30       		.byte	0x30
 1470 0075 9F       		.byte	0x9f
 1471 0076 00000000 		.4byte	0
 1472 007a 00000000 		.4byte	0
 1473              		.section	.debug_aranges,"",%progbits
 1474 0000 94000000 		.4byte	0x94
 1475 0004 0200     		.2byte	0x2
 1476 0006 00000000 		.4byte	.Ldebug_info0
 1477 000a 04       		.byte	0x4
 1478 000b 00       		.byte	0
 1479 000c 0000     		.2byte	0
 1480 000e 0000     		.2byte	0
 1481 0010 00000000 		.4byte	.LFB2
 1482 0014 10000000 		.4byte	.LFE2-.LFB2
 1483 0018 00000000 		.4byte	.LFB3
 1484 001c 10000000 		.4byte	.LFE3-.LFB3
 1485 0020 00000000 		.4byte	.LFB4
 1486 0024 0C000000 		.4byte	.LFE4-.LFB4
 1487 0028 00000000 		.4byte	.LFB5
 1488 002c 14000000 		.4byte	.LFE5-.LFB5
 1489 0030 00000000 		.4byte	.LFB6
 1490 0034 18000000 		.4byte	.LFE6-.LFB6
 1491 0038 00000000 		.4byte	.LFB1
 1492 003c 58000000 		.4byte	.LFE1-.LFB1
 1493 0040 00000000 		.4byte	.LFB0
 1494 0044 1C000000 		.4byte	.LFE0-.LFB0
 1495 0048 00000000 		.4byte	.LFB7
 1496 004c 0C000000 		.4byte	.LFE7-.LFB7
 1497 0050 00000000 		.4byte	.LFB8
 1498 0054 0C000000 		.4byte	.LFE8-.LFB8
 1499 0058 00000000 		.4byte	.LFB9
 1500 005c 0C000000 		.4byte	.LFE9-.LFB9
 1501 0060 00000000 		.4byte	.LFB10
 1502 0064 0C000000 		.4byte	.LFE10-.LFB10
 1503 0068 00000000 		.4byte	.LFB11
 1504 006c 0C000000 		.4byte	.LFE11-.LFB11
 1505 0070 00000000 		.4byte	.LFB12
 1506 0074 0C000000 		.4byte	.LFE12-.LFB12
 1507 0078 00000000 		.4byte	.LFB13
 1508 007c 0C000000 		.4byte	.LFE13-.LFB13
 1509 0080 00000000 		.4byte	.LFB14
 1510 0084 0C000000 		.4byte	.LFE14-.LFB14
 1511 0088 00000000 		.4byte	.LFB15
 1512 008c 0C000000 		.4byte	.LFE15-.LFB15
 1513 0090 00000000 		.4byte	0
 1514 0094 00000000 		.4byte	0
 1515              		.section	.debug_ranges,"",%progbits
 1516              	.Ldebug_ranges0:
 1517 0000 00000000 		.4byte	.LBB14
 1518 0004 02000000 		.4byte	.LBE14
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 44


 1519 0008 04000000 		.4byte	.LBB20
 1520 000c 06000000 		.4byte	.LBE20
 1521 0010 00000000 		.4byte	0
 1522 0014 00000000 		.4byte	0
 1523 0018 02000000 		.4byte	.LBB17
 1524 001c 04000000 		.4byte	.LBE17
 1525 0020 0A000000 		.4byte	.LBB21
 1526 0024 0E000000 		.4byte	.LBE21
 1527 0028 00000000 		.4byte	0
 1528 002c 00000000 		.4byte	0
 1529 0030 08000000 		.4byte	.LBB22
 1530 0034 0C000000 		.4byte	.LBE22
 1531 0038 18000000 		.4byte	.LBB26
 1532 003c 1A000000 		.4byte	.LBE26
 1533 0040 20000000 		.4byte	.LBB27
 1534 0044 24000000 		.4byte	.LBE27
 1535 0048 00000000 		.4byte	0
 1536 004c 00000000 		.4byte	0
 1537 0050 00000000 		.4byte	.LFB2
 1538 0054 10000000 		.4byte	.LFE2
 1539 0058 00000000 		.4byte	.LFB3
 1540 005c 10000000 		.4byte	.LFE3
 1541 0060 00000000 		.4byte	.LFB4
 1542 0064 0C000000 		.4byte	.LFE4
 1543 0068 00000000 		.4byte	.LFB5
 1544 006c 14000000 		.4byte	.LFE5
 1545 0070 00000000 		.4byte	.LFB6
 1546 0074 18000000 		.4byte	.LFE6
 1547 0078 00000000 		.4byte	.LFB1
 1548 007c 58000000 		.4byte	.LFE1
 1549 0080 00000000 		.4byte	.LFB0
 1550 0084 1C000000 		.4byte	.LFE0
 1551 0088 00000000 		.4byte	.LFB7
 1552 008c 0C000000 		.4byte	.LFE7
 1553 0090 00000000 		.4byte	.LFB8
 1554 0094 0C000000 		.4byte	.LFE8
 1555 0098 00000000 		.4byte	.LFB9
 1556 009c 0C000000 		.4byte	.LFE9
 1557 00a0 00000000 		.4byte	.LFB10
 1558 00a4 0C000000 		.4byte	.LFE10
 1559 00a8 00000000 		.4byte	.LFB11
 1560 00ac 0C000000 		.4byte	.LFE11
 1561 00b0 00000000 		.4byte	.LFB12
 1562 00b4 0C000000 		.4byte	.LFE12
 1563 00b8 00000000 		.4byte	.LFB13
 1564 00bc 0C000000 		.4byte	.LFE13
 1565 00c0 00000000 		.4byte	.LFB14
 1566 00c4 0C000000 		.4byte	.LFE14
 1567 00c8 00000000 		.4byte	.LFB15
 1568 00cc 0C000000 		.4byte	.LFE15
 1569 00d0 00000000 		.4byte	0
 1570 00d4 00000000 		.4byte	0
 1571              		.section	.debug_line,"",%progbits
 1572              	.Ldebug_line0:
 1573 0000 B7010000 		.section	.debug_str,"MS",%progbits,1
 1573      02004E00 
 1573      00000201 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 45


 1573      FB0E0D00 
 1573      01010101 
 1574              	.LASF22:
 1575 0000 50574D5F 		.ascii	"PWM_lw_WritePeriod\000"
 1575      6C775F57 
 1575      72697465 
 1575      50657269 
 1575      6F6400
 1576              	.LASF23:
 1577 0013 70657269 		.ascii	"period\000"
 1577      6F6400
 1578              	.LASF31:
 1579 001a 50574D5F 		.ascii	"PWM_lw_interruptState\000"
 1579      6C775F69 
 1579      6E746572 
 1579      72757074 
 1579      53746174 
 1580              	.LASF3:
 1581 0030 73686F72 		.ascii	"short unsigned int\000"
 1581      7420756E 
 1581      7369676E 
 1581      65642069 
 1581      6E7400
 1582              	.LASF26:
 1583 0043 50574D5F 		.ascii	"PWM_lw_Enable\000"
 1583      6C775F45 
 1583      6E61626C 
 1583      6500
 1584              	.LASF9:
 1585 0051 666C6F61 		.ascii	"float\000"
 1585      7400
 1586              	.LASF25:
 1587 0057 636F756E 		.ascii	"counter\000"
 1587      74657200 
 1588              	.LASF7:
 1589 005f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1589      206C6F6E 
 1589      6720756E 
 1589      7369676E 
 1589      65642069 
 1590              	.LASF17:
 1591 0076 50574D5F 		.ascii	"PWM_lw_ReadStatusRegister\000"
 1591      6C775F52 
 1591      65616453 
 1591      74617475 
 1591      73526567 
 1592              	.LASF13:
 1593 0090 72656738 		.ascii	"reg8\000"
 1593      00
 1594              	.LASF40:
 1595 0095 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1595      43313120 
 1595      352E342E 
 1595      31203230 
 1595      31363036 
 1596 00c8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1596      20726576 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 46


 1596      6973696F 
 1596      6E203233 
 1596      37373135 
 1597 00fb 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1597      66756E63 
 1597      74696F6E 
 1597      2D736563 
 1597      74696F6E 
 1598              	.LASF12:
 1599 0123 75696E74 		.ascii	"uint8\000"
 1599      3800
 1600              	.LASF44:
 1601 0129 636F6E74 		.ascii	"control\000"
 1601      726F6C00 
 1602              	.LASF34:
 1603 0131 50574D5F 		.ascii	"PWM_lw_WriteControlRegister\000"
 1603      6C775F57 
 1603      72697465 
 1603      436F6E74 
 1603      726F6C52 
 1604              	.LASF36:
 1605 014d 50574D5F 		.ascii	"PWM_lw_ReadCompare\000"
 1605      6C775F52 
 1605      65616443 
 1605      6F6D7061 
 1605      726500
 1606              	.LASF1:
 1607 0160 756E7369 		.ascii	"unsigned char\000"
 1607      676E6564 
 1607      20636861 
 1607      7200
 1608              	.LASF41:
 1609 016e 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_lw.c\000"
 1609      72617465 
 1609      645F536F 
 1609      75726365 
 1609      5C50536F 
 1610              	.LASF10:
 1611 018e 646F7562 		.ascii	"double\000"
 1611      6C6500
 1612              	.LASF19:
 1613 0195 50574D5F 		.ascii	"PWM_lw_WriteCompare\000"
 1613      6C775F57 
 1613      72697465 
 1613      436F6D70 
 1613      61726500 
 1614              	.LASF2:
 1615 01a9 73686F72 		.ascii	"short int\000"
 1615      7420696E 
 1615      7400
 1616              	.LASF28:
 1617 01b3 50574D5F 		.ascii	"PWM_lw_ClearFIFO\000"
 1617      6C775F43 
 1617      6C656172 
 1617      4649464F 
 1617      00
 1618              	.LASF38:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 47


 1619 01c4 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1619      74657243 
 1619      72697469 
 1619      63616C53 
 1619      65637469 
 1620              	.LASF5:
 1621 01db 6C6F6E67 		.ascii	"long unsigned int\000"
 1621      20756E73 
 1621      69676E65 
 1621      6420696E 
 1621      7400
 1622              	.LASF8:
 1623 01ed 756E7369 		.ascii	"unsigned int\000"
 1623      676E6564 
 1623      20696E74 
 1623      00
 1624              	.LASF16:
 1625 01fa 50574D5F 		.ascii	"PWM_lw_ReadCapture\000"
 1625      6C775F52 
 1625      65616443 
 1625      61707475 
 1625      726500
 1626              	.LASF39:
 1627 020d 43794578 		.ascii	"CyExitCriticalSection\000"
 1627      69744372 
 1627      69746963 
 1627      616C5365 
 1627      6374696F 
 1628              	.LASF29:
 1629 0223 50574D5F 		.ascii	"PWM_lw_Init\000"
 1629      6C775F49 
 1629      6E697400 
 1630              	.LASF33:
 1631 022f 72657375 		.ascii	"result\000"
 1631      6C7400
 1632              	.LASF32:
 1633 0236 50574D5F 		.ascii	"PWM_lw_Start\000"
 1633      6C775F53 
 1633      74617274 
 1633      00
 1634              	.LASF37:
 1635 0243 50574D5F 		.ascii	"PWM_lw_ReadPeriod\000"
 1635      6C775F52 
 1635      65616450 
 1635      6572696F 
 1635      6400
 1636              	.LASF30:
 1637 0255 6374726C 		.ascii	"ctrl\000"
 1637      00
 1638              	.LASF15:
 1639 025a 73697A65 		.ascii	"sizetype\000"
 1639      74797065 
 1639      00
 1640              	.LASF6:
 1641 0263 6C6F6E67 		.ascii	"long long int\000"
 1641      206C6F6E 
 1641      6720696E 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 48


 1641      7400
 1642              	.LASF20:
 1643 0271 696E7465 		.ascii	"interruptMode\000"
 1643      72727570 
 1643      744D6F64 
 1643      6500
 1644              	.LASF35:
 1645 027f 50574D5F 		.ascii	"PWM_lw_ReadCounter\000"
 1645      6C775F52 
 1645      65616443 
 1645      6F756E74 
 1645      657200
 1646              	.LASF42:
 1647 0292 433A5C55 		.ascii	"C:\\Users\\Zwe\\Desktop\\Monash\\Y3S2\\ECE3091 - EN"
 1647      73657273 
 1647      5C5A7765 
 1647      5C446573 
 1647      6B746F70 
 1648 02bf 47494E45 		.ascii	"GINEERING DESIGN\\bcd\\Design01.cydsn\000"
 1648      4552494E 
 1648      47204445 
 1648      5349474E 
 1648      5C626364 
 1649              	.LASF24:
 1650 02e3 50574D5F 		.ascii	"PWM_lw_WriteCounter\000"
 1650      6C775F57 
 1650      72697465 
 1650      436F756E 
 1650      74657200 
 1651              	.LASF18:
 1652 02f7 50574D5F 		.ascii	"PWM_lw_SetInterruptMode\000"
 1652      6C775F53 
 1652      6574496E 
 1652      74657272 
 1652      7570744D 
 1653              	.LASF4:
 1654 030f 6C6F6E67 		.ascii	"long int\000"
 1654      20696E74 
 1654      00
 1655              	.LASF11:
 1656 0318 63686172 		.ascii	"char\000"
 1656      00
 1657              	.LASF14:
 1658 031d 6C6F6E67 		.ascii	"long double\000"
 1658      20646F75 
 1658      626C6500 
 1659              	.LASF0:
 1660 0329 7369676E 		.ascii	"signed char\000"
 1660      65642063 
 1660      68617200 
 1661              	.LASF21:
 1662 0335 636F6D70 		.ascii	"compare\000"
 1662      61726500 
 1663              	.LASF27:
 1664 033d 50574D5F 		.ascii	"PWM_lw_Stop\000"
 1664      6C775F53 
 1664      746F7000 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccVTyOTd.s 			page 49


 1665              	.LASF45:
 1666 0349 50574D5F 		.ascii	"PWM_lw_initVar\000"
 1666      6C775F69 
 1666      6E697456 
 1666      617200
 1667              	.LASF43:
 1668 0358 50574D5F 		.ascii	"PWM_lw_ReadControlRegister\000"
 1668      6C775F52 
 1668      65616443 
 1668      6F6E7472 
 1668      6F6C5265 
 1669              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
