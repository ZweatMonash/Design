ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_1_Init,"ax",%progbits
  20              		.align	1
  21              		.global	UART_1_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_1_Init, %function
  25              	UART_1_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART_1.c"
   1:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_1.c **** * File Name: UART_1.c
   3:Generated_Source\PSoC5/UART_1.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_1.c **** *
   5:Generated_Source\PSoC5/UART_1.c **** * Description:
   6:Generated_Source\PSoC5/UART_1.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_1.c **** *
   8:Generated_Source\PSoC5/UART_1.c **** * Note:
   9:Generated_Source\PSoC5/UART_1.c **** *
  10:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_1.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_1.c **** 
  17:Generated_Source\PSoC5/UART_1.c **** #include "UART_1.h"
  18:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_1.c ****     #include "UART_1_IntClock.h"
  20:Generated_Source\PSoC5/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_1.c **** 
  22:Generated_Source\PSoC5/UART_1.c **** 
  23:Generated_Source\PSoC5/UART_1.c **** /***************************************
  24:Generated_Source\PSoC5/UART_1.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART_1.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_1.c **** 
  27:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:Generated_Source\PSoC5/UART_1.c **** 
  29:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 2


  31:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_1.c **** 
  35:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART_1.c **** 
  48:Generated_Source\PSoC5/UART_1.c **** 
  49:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Start
  51:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_1.c **** *
  53:Generated_Source\PSoC5/UART_1.c **** * Summary:
  54:Generated_Source\PSoC5/UART_1.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Enable() function.
  58:Generated_Source\PSoC5/UART_1.c **** *
  59:Generated_Source\PSoC5/UART_1.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_1.c **** *  None.
  61:Generated_Source\PSoC5/UART_1.c **** *
  62:Generated_Source\PSoC5/UART_1.c **** * Return:
  63:Generated_Source\PSoC5/UART_1.c **** *  None.
  64:Generated_Source\PSoC5/UART_1.c **** *
  65:Generated_Source\PSoC5/UART_1.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
  69:Generated_Source\PSoC5/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:Generated_Source\PSoC5/UART_1.c **** *
  72:Generated_Source\PSoC5/UART_1.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_1.c **** *  No.
  74:Generated_Source\PSoC5/UART_1.c **** *
  75:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_1.c **** void UART_1_Start(void) 
  77:Generated_Source\PSoC5/UART_1.c **** {
  78:Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_1.c ****     if(UART_1_initVar == 0u)
  80:Generated_Source\PSoC5/UART_1.c ****     {
  81:Generated_Source\PSoC5/UART_1.c ****         UART_1_Init();
  82:Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
  83:Generated_Source\PSoC5/UART_1.c ****     }
  84:Generated_Source\PSoC5/UART_1.c **** 
  85:Generated_Source\PSoC5/UART_1.c ****     UART_1_Enable();
  86:Generated_Source\PSoC5/UART_1.c **** }
  87:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 3


  88:Generated_Source\PSoC5/UART_1.c **** 
  89:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Init
  91:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_1.c **** *
  93:Generated_Source\PSoC5/UART_1.c **** * Summary:
  94:Generated_Source\PSoC5/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:Generated_Source\PSoC5/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART_1.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_1.c **** *
  99:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_1.c **** *  None.
 101:Generated_Source\PSoC5/UART_1.c **** *
 102:Generated_Source\PSoC5/UART_1.c **** * Return:
 103:Generated_Source\PSoC5/UART_1.c **** *  None.
 104:Generated_Source\PSoC5/UART_1.c **** *
 105:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_1.c **** void UART_1_Init(void) 
 107:Generated_Source\PSoC5/UART_1.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 108:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_1.c **** 
 110:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART_1.c ****             UART_1_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_1.c **** 
 117:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_1.c **** 
 123:Generated_Source\PSoC5/UART_1.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
  33              		.loc 1 124 0
  34 0000 084B     		ldr	r3, .L2
  35 0002 7222     		movs	r2, #114
  36 0004 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
 127:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_1.c **** 
 129:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
 133:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 4


 136:Generated_Source\PSoC5/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
  37              		.loc 1 138 0
  38 0006 6FF4B171 		mvn	r1, #354
 126:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
  39              		.loc 1 126 0
  40 000a 2022     		movs	r2, #32
  41 000c 03F8022C 		strb	r2, [r3, #-2]
  42              		.loc 1 138 0
  43 0010 0B44     		add	r3, r3, r1
  44 0012 0622     		movs	r2, #6
  45 0014 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
  46              		.loc 1 139 0
  47 0016 4722     		movs	r2, #71
  48 0018 1A74     		strb	r2, [r3, #16]
 140:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_1.c ****         #else
 142:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_1.c **** 
 146:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART_1.c ****         #else
 150:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
  49              		.loc 1 150 0
  50 001a 0022     		movs	r2, #0
  51 001c 83F86120 		strb	r2, [r3, #97]
  52 0020 7047     		bx	lr
  53              	.L3:
  54 0022 00BF     		.align	2
  55              	.L2:
  56 0024 89650040 		.word	1073767817
  57              		.cfi_endproc
  58              	.LFE1:
  59              		.size	UART_1_Init, .-UART_1_Init
  60              		.section	.text.UART_1_Enable,"ax",%progbits
  61              		.align	1
  62              		.global	UART_1_Enable
  63              		.thumb
  64              		.thumb_func
  65              		.type	UART_1_Enable, %function
  66              	UART_1_Enable:
  67              	.LFB2:
 151:Generated_Source\PSoC5/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_1.c **** 
 153:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_1.c **** 
 155:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_1.c **** }
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 5


 161:Generated_Source\PSoC5/UART_1.c **** 
 162:Generated_Source\PSoC5/UART_1.c **** 
 163:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Enable
 165:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_1.c **** *
 167:Generated_Source\PSoC5/UART_1.c **** * Summary:
 168:Generated_Source\PSoC5/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:Generated_Source\PSoC5/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_1.c **** *  operation.
 172:Generated_Source\PSoC5/UART_1.c **** 
 173:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_1.c **** *  None.
 175:Generated_Source\PSoC5/UART_1.c **** *
 176:Generated_Source\PSoC5/UART_1.c **** * Return:
 177:Generated_Source\PSoC5/UART_1.c **** *  None.
 178:Generated_Source\PSoC5/UART_1.c **** *
 179:Generated_Source\PSoC5/UART_1.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_1.c **** *
 182:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_1.c **** void UART_1_Enable(void) 
 184:Generated_Source\PSoC5/UART_1.c **** {
  68              		.loc 1 184 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 10B5     		push	{r4, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 4, -8
  75              		.cfi_offset 14, -4
 185:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
  76              		.loc 1 186 0
  77 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  78              	.LVL0:
  79 0006 0446     		mov	r4, r0
  80              	.LVL1:
 187:Generated_Source\PSoC5/UART_1.c **** 
 188:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
  81              		.loc 1 190 0
  82 0008 0C4A     		ldr	r2, .L5
  83 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 191:Generated_Source\PSoC5/UART_1.c **** 
 192:Generated_Source\PSoC5/UART_1.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 194:Generated_Source\PSoC5/UART_1.c **** 
 195:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableRxInt();
 197:Generated_Source\PSoC5/UART_1.c **** 
 198:Generated_Source\PSoC5/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 6


 202:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_1.c **** 
 204:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_1.c **** 
 210:Generated_Source\PSoC5/UART_1.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
  84              		.loc 1 211 0
  85 000c A2F58172 		sub	r2, r2, #258
 190:Generated_Source\PSoC5/UART_1.c **** 
  86              		.loc 1 190 0
  87 0010 43F02003 		orr	r3, r3, #32
  88 0014 82F80231 		strb	r3, [r2, #258]
 193:Generated_Source\PSoC5/UART_1.c **** 
  89              		.loc 1 193 0
  90 0018 92F80031 		ldrb	r3, [r2, #256]	@ zero_extendqisi2
  91 001c 43F01003 		orr	r3, r3, #16
  92 0020 82F80031 		strb	r3, [r2, #256]
  93              		.loc 1 211 0
  94 0024 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  95 0026 43F01003 		orr	r3, r3, #16
  96 002a 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 215:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_1.c **** 
 218:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
  97              		.loc 1 219 0
  98 002c FFF7FEFF 		bl	UART_1_IntClock_Start
  99              	.LVL2:
 220:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_1.c **** 
 222:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 100              		.loc 1 222 0
 101 0030 2046     		mov	r0, r4
 223:Generated_Source\PSoC5/UART_1.c **** }
 102              		.loc 1 223 0
 103 0032 BDE81040 		pop	{r4, lr}
 104              		.cfi_restore 14
 105              		.cfi_restore 4
 106              		.cfi_def_cfa_offset 0
 107              	.LVL3:
 222:Generated_Source\PSoC5/UART_1.c **** }
 108              		.loc 1 222 0
 109 0036 FFF7FEBF 		b	CyExitCriticalSection
 110              	.LVL4:
 111              	.L6:
 112 003a 00BF     		.align	2
 113              	.L5:
 114 003c 99650040 		.word	1073767833
 115              		.cfi_endproc
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 7


 116              	.LFE2:
 117              		.size	UART_1_Enable, .-UART_1_Enable
 118              		.section	.text.UART_1_Start,"ax",%progbits
 119              		.align	1
 120              		.global	UART_1_Start
 121              		.thumb
 122              		.thumb_func
 123              		.type	UART_1_Start, %function
 124              	UART_1_Start:
 125              	.LFB0:
  77:Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
 126              		.loc 1 77 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130 0000 08B5     		push	{r3, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 3, -8
 133              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART_1.c ****     {
 134              		.loc 1 79 0
 135 0002 0548     		ldr	r0, .L10
 136 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 137 0006 1BB9     		cbnz	r3, .L8
  81:Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
 138              		.loc 1 81 0
 139 0008 FFF7FEFF 		bl	UART_1_Init
 140              	.LVL5:
  82:Generated_Source\PSoC5/UART_1.c ****     }
 141              		.loc 1 82 0
 142 000c 0123     		movs	r3, #1
 143 000e 0370     		strb	r3, [r0]
 144              	.L8:
  86:Generated_Source\PSoC5/UART_1.c **** 
 145              		.loc 1 86 0
 146 0010 BDE80840 		pop	{r3, lr}
 147              		.cfi_restore 14
 148              		.cfi_restore 3
 149              		.cfi_def_cfa_offset 0
  85:Generated_Source\PSoC5/UART_1.c **** }
 150              		.loc 1 85 0
 151 0014 FFF7FEBF 		b	UART_1_Enable
 152              	.LVL6:
 153              	.L11:
 154              		.align	2
 155              	.L10:
 156 0018 00000000 		.word	.LANCHOR0
 157              		.cfi_endproc
 158              	.LFE0:
 159              		.size	UART_1_Start, .-UART_1_Start
 160              		.section	.text.UART_1_Stop,"ax",%progbits
 161              		.align	1
 162              		.global	UART_1_Stop
 163              		.thumb
 164              		.thumb_func
 165              		.type	UART_1_Stop, %function
 166              	UART_1_Stop:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 8


 167              	.LFB3:
 224:Generated_Source\PSoC5/UART_1.c **** 
 225:Generated_Source\PSoC5/UART_1.c **** 
 226:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Stop
 228:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_1.c **** *
 230:Generated_Source\PSoC5/UART_1.c **** * Summary:
 231:Generated_Source\PSoC5/UART_1.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_1.c **** *
 233:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_1.c **** *  None.
 235:Generated_Source\PSoC5/UART_1.c **** *
 236:Generated_Source\PSoC5/UART_1.c **** * Return:
 237:Generated_Source\PSoC5/UART_1.c **** *  None.
 238:Generated_Source\PSoC5/UART_1.c **** *
 239:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_1.c **** void UART_1_Stop(void) 
 241:Generated_Source\PSoC5/UART_1.c **** {
 168              		.loc 1 241 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172 0000 10B5     		push	{r4, lr}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 4, -8
 175              		.cfi_offset 14, -4
 242:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 176              		.loc 1 243 0
 177 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 178              	.LVL7:
 179 0006 0446     		mov	r4, r0
 180              	.LVL8:
 244:Generated_Source\PSoC5/UART_1.c **** 
 245:Generated_Source\PSoC5/UART_1.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 181              		.loc 1 247 0
 182 0008 0B4A     		ldr	r2, .L13
 183 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 184 000c 03F0DF03 		and	r3, r3, #223
 185 0010 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_1.c **** 
 250:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_1.c **** 
 256:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 186              		.loc 1 257 0
 187 0012 FFF7FEFF 		bl	UART_1_IntClock_Stop
 188              	.LVL9:
 258:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 9


 259:Generated_Source\PSoC5/UART_1.c **** 
 260:Generated_Source\PSoC5/UART_1.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 189              		.loc 1 262 0
 190 0016 094A     		ldr	r2, .L13+4
 263:Generated_Source\PSoC5/UART_1.c **** 
 264:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableRxInt();
 266:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_1.c **** 
 269:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 271:Generated_Source\PSoC5/UART_1.c **** 
 272:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 274:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_1.c **** 
 277:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 191              		.loc 1 277 0
 192 0018 2046     		mov	r0, r4
 262:Generated_Source\PSoC5/UART_1.c **** 
 193              		.loc 1 262 0
 194 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 270:Generated_Source\PSoC5/UART_1.c **** 
 195              		.loc 1 270 0
 196 001c A2F58072 		sub	r2, r2, #256
 262:Generated_Source\PSoC5/UART_1.c **** 
 197              		.loc 1 262 0
 198 0020 03F0EF03 		and	r3, r3, #239
 199 0024 82F80031 		strb	r3, [r2, #256]
 270:Generated_Source\PSoC5/UART_1.c **** 
 200              		.loc 1 270 0
 201 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 202 002a 03F0EF03 		and	r3, r3, #239
 203 002e 1370     		strb	r3, [r2]
 278:Generated_Source\PSoC5/UART_1.c **** }
 204              		.loc 1 278 0
 205 0030 BDE81040 		pop	{r4, lr}
 206              		.cfi_restore 14
 207              		.cfi_restore 4
 208              		.cfi_def_cfa_offset 0
 209              	.LVL10:
 277:Generated_Source\PSoC5/UART_1.c **** }
 210              		.loc 1 277 0
 211 0034 FFF7FEBF 		b	CyExitCriticalSection
 212              	.LVL11:
 213              	.L14:
 214              		.align	2
 215              	.L13:
 216 0038 99650040 		.word	1073767833
 217 003c 97650040 		.word	1073767831
 218              		.cfi_endproc
 219              	.LFE3:
 220              		.size	UART_1_Stop, .-UART_1_Stop
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 10


 221              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 222              		.align	1
 223              		.global	UART_1_ReadControlRegister
 224              		.thumb
 225              		.thumb_func
 226              		.type	UART_1_ReadControlRegister, %function
 227              	UART_1_ReadControlRegister:
 228              	.LFB4:
 279:Generated_Source\PSoC5/UART_1.c **** 
 280:Generated_Source\PSoC5/UART_1.c **** 
 281:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_1.c **** *
 285:Generated_Source\PSoC5/UART_1.c **** * Summary:
 286:Generated_Source\PSoC5/UART_1.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_1.c **** *
 288:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_1.c **** *  None.
 290:Generated_Source\PSoC5/UART_1.c **** *
 291:Generated_Source\PSoC5/UART_1.c **** * Return:
 292:Generated_Source\PSoC5/UART_1.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_1.c **** *
 294:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_1.c **** {
 229              		.loc 1 296 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 297:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_1.c ****         return(0u);
 299:Generated_Source\PSoC5/UART_1.c ****     #else
 300:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_1.c **** }
 234              		.loc 1 302 0
 235 0000 0020     		movs	r0, #0
 236 0002 7047     		bx	lr
 237              		.cfi_endproc
 238              	.LFE4:
 239              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 240              		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 241              		.align	1
 242              		.global	UART_1_WriteControlRegister
 243              		.thumb
 244              		.thumb_func
 245              		.type	UART_1_WriteControlRegister, %function
 246              	UART_1_WriteControlRegister:
 247              	.LFB30:
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 252 0000 7047     		bx	lr
 253              		.cfi_endproc
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 11


 254              	.LFE30:
 255              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 256              		.section	.text.UART_1_SetRxInterruptMode,"ax",%progbits
 257              		.align	1
 258              		.global	UART_1_SetRxInterruptMode
 259              		.thumb
 260              		.thumb_func
 261              		.type	UART_1_SetRxInterruptMode, %function
 262              	UART_1_SetRxInterruptMode:
 263              	.LFB6:
 303:Generated_Source\PSoC5/UART_1.c **** 
 304:Generated_Source\PSoC5/UART_1.c **** 
 305:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_1.c **** *
 309:Generated_Source\PSoC5/UART_1.c **** * Summary:
 310:Generated_Source\PSoC5/UART_1.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_1.c **** *
 312:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_1.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_1.c **** *
 315:Generated_Source\PSoC5/UART_1.c **** * Return:
 316:Generated_Source\PSoC5/UART_1.c **** *  None.
 317:Generated_Source\PSoC5/UART_1.c **** *
 318:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_1.c **** {
 321:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_1.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_1.c ****         {
 324:Generated_Source\PSoC5/UART_1.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_1.c ****         }
 326:Generated_Source\PSoC5/UART_1.c ****     #else
 327:Generated_Source\PSoC5/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_1.c **** }
 330:Generated_Source\PSoC5/UART_1.c **** 
 331:Generated_Source\PSoC5/UART_1.c **** 
 332:Generated_Source\PSoC5/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_1.c ****     *
 337:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_1.c ****     *
 340:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 12


 350:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_1.c ****     *
 352:Generated_Source\PSoC5/UART_1.c ****     * Return:
 353:Generated_Source\PSoC5/UART_1.c ****     *  None.
 354:Generated_Source\PSoC5/UART_1.c ****     *
 355:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_1.c ****     *
 358:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_1.c ****     {
 264              		.loc 1 360 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269              	.LVL12:
 361:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 270              		.loc 1 361 0
 271 0000 014B     		ldr	r3, .L18
 272 0002 1870     		strb	r0, [r3]
 273 0004 7047     		bx	lr
 274              	.L19:
 275 0006 00BF     		.align	2
 276              	.L18:
 277 0008 87650040 		.word	1073767815
 278              		.cfi_endproc
 279              	.LFE6:
 280              		.size	UART_1_SetRxInterruptMode, .-UART_1_SetRxInterruptMode
 281              		.section	.text.UART_1_ReadRxData,"ax",%progbits
 282              		.align	1
 283              		.global	UART_1_ReadRxData
 284              		.thumb
 285              		.thumb_func
 286              		.type	UART_1_ReadRxData, %function
 287              	UART_1_ReadRxData:
 288              	.LFB7:
 362:Generated_Source\PSoC5/UART_1.c ****     }
 363:Generated_Source\PSoC5/UART_1.c **** 
 364:Generated_Source\PSoC5/UART_1.c **** 
 365:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_1.c ****     *
 369:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_1.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_1.c ****     *
 373:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_1.c ****     *  None.
 375:Generated_Source\PSoC5/UART_1.c ****     *
 376:Generated_Source\PSoC5/UART_1.c ****     * Return:
 377:Generated_Source\PSoC5/UART_1.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_1.c ****     *
 379:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 13


 382:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_1.c ****     *
 388:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_1.c ****     *  No.
 390:Generated_Source\PSoC5/UART_1.c ****     *
 391:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_1.c ****     {
 289              		.loc 1 393 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_1.c **** 
 396:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_1.c **** 
 398:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_1.c **** 
 401:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 403:Generated_Source\PSoC5/UART_1.c **** 
 404:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:Generated_Source\PSoC5/UART_1.c **** 
 407:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART_1.c ****         {
 409:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART_1.c **** 
 412:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART_1.c ****             {
 414:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART_1.c ****             }
 416:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART_1.c **** 
 419:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART_1.c ****             {
 421:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_1.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_1.c ****                             */
 430:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_1.c ****                         }
 432:Generated_Source\PSoC5/UART_1.c ****                     #else
 433:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 14


 434:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART_1.c ****             }
 437:Generated_Source\PSoC5/UART_1.c ****         }
 438:Generated_Source\PSoC5/UART_1.c ****         else
 439:Generated_Source\PSoC5/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:Generated_Source\PSoC5/UART_1.c ****         }
 442:Generated_Source\PSoC5/UART_1.c **** 
 443:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 444:Generated_Source\PSoC5/UART_1.c **** 
 445:Generated_Source\PSoC5/UART_1.c ****     #else
 446:Generated_Source\PSoC5/UART_1.c **** 
 447:Generated_Source\PSoC5/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 294              		.loc 1 448 0
 295 0000 014B     		ldr	r3, .L21
 296 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 297              	.LVL13:
 449:Generated_Source\PSoC5/UART_1.c **** 
 450:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_1.c **** 
 452:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART_1.c ****     }
 298              		.loc 1 453 0
 299 0004 7047     		bx	lr
 300              	.L22:
 301 0006 00BF     		.align	2
 302              	.L21:
 303 0008 4B650040 		.word	1073767755
 304              		.cfi_endproc
 305              	.LFE7:
 306              		.size	UART_1_ReadRxData, .-UART_1_ReadRxData
 307              		.section	.text.UART_1_ReadRxStatus,"ax",%progbits
 308              		.align	1
 309              		.global	UART_1_ReadRxStatus
 310              		.thumb
 311              		.thumb_func
 312              		.type	UART_1_ReadRxStatus, %function
 313              	UART_1_ReadRxStatus:
 314              	.LFB8:
 454:Generated_Source\PSoC5/UART_1.c **** 
 455:Generated_Source\PSoC5/UART_1.c **** 
 456:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_1.c ****     *
 460:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_1.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_1.c ****     *
 464:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_1.c ****     *  None.
 466:Generated_Source\PSoC5/UART_1.c ****     *
 467:Generated_Source\PSoC5/UART_1.c ****     * Return:
 468:Generated_Source\PSoC5/UART_1.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 15


 470:Generated_Source\PSoC5/UART_1.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART_1.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_1.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_1.c ****     *
 476:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_1.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_1.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_1.c ****     *
 484:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_1.c ****     {
 315              		.loc 1 486 0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART_1.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_1.c **** 
 489:Generated_Source\PSoC5/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 320              		.loc 1 489 0
 321 0000 024B     		ldr	r3, .L24
 322 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 323              	.LVL14:
 490:Generated_Source\PSoC5/UART_1.c **** 
 491:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART_1.c ****         {
 494:Generated_Source\PSoC5/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART_1.c ****         }
 497:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_1.c **** 
 499:Generated_Source\PSoC5/UART_1.c ****         return(status);
 500:Generated_Source\PSoC5/UART_1.c ****     }
 324              		.loc 1 500 0
 325 0004 00F07F00 		and	r0, r0, #127
 326              	.LVL15:
 327 0008 7047     		bx	lr
 328              	.L25:
 329 000a 00BF     		.align	2
 330              	.L24:
 331 000c 67650040 		.word	1073767783
 332              		.cfi_endproc
 333              	.LFE8:
 334              		.size	UART_1_ReadRxStatus, .-UART_1_ReadRxStatus
 335              		.section	.text.UART_1_GetChar,"ax",%progbits
 336              		.align	1
 337              		.global	UART_1_GetChar
 338              		.thumb
 339              		.thumb_func
 340              		.type	UART_1_GetChar, %function
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 16


 341              	UART_1_GetChar:
 342              	.LFB9:
 501:Generated_Source\PSoC5/UART_1.c **** 
 502:Generated_Source\PSoC5/UART_1.c **** 
 503:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetChar
 505:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_1.c ****     *
 507:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:Generated_Source\PSoC5/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_1.c ****     *
 512:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_1.c ****     *  None.
 514:Generated_Source\PSoC5/UART_1.c ****     *
 515:Generated_Source\PSoC5/UART_1.c ****     * Return:
 516:Generated_Source\PSoC5/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_1.c ****     *
 519:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_1.c ****     *
 528:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_1.c ****     *  No.
 530:Generated_Source\PSoC5/UART_1.c ****     *
 531:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:Generated_Source\PSoC5/UART_1.c ****     {
 343              		.loc 1 533 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 348              	.LVL16:
 534:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART_1.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_1.c **** 
 537:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_1.c **** 
 541:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 543:Generated_Source\PSoC5/UART_1.c **** 
 544:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:Generated_Source\PSoC5/UART_1.c **** 
 547:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART_1.c ****         {
 549:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 17


 550:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART_1.c ****             {
 553:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART_1.c ****             }
 555:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART_1.c **** 
 558:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART_1.c ****             {
 560:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_1.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_1.c ****                             */
 569:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_1.c ****                         }
 571:Generated_Source\PSoC5/UART_1.c ****                     #else
 572:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:Generated_Source\PSoC5/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_1.c ****             }
 576:Generated_Source\PSoC5/UART_1.c **** 
 577:Generated_Source\PSoC5/UART_1.c ****         }
 578:Generated_Source\PSoC5/UART_1.c ****         else
 579:Generated_Source\PSoC5/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART_1.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:Generated_Source\PSoC5/UART_1.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART_1.c ****                 {
 587:Generated_Source\PSoC5/UART_1.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART_1.c ****                 }
 589:Generated_Source\PSoC5/UART_1.c ****             }
 590:Generated_Source\PSoC5/UART_1.c ****         }
 591:Generated_Source\PSoC5/UART_1.c **** 
 592:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 593:Generated_Source\PSoC5/UART_1.c **** 
 594:Generated_Source\PSoC5/UART_1.c ****     #else
 595:Generated_Source\PSoC5/UART_1.c **** 
 596:Generated_Source\PSoC5/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 349              		.loc 1 596 0
 350 0000 074B     		ldr	r3, .L30
 351 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 352 0004 DBB2     		uxtb	r3, r3
 353              	.LVL17:
 597:Generated_Source\PSoC5/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 354              		.loc 1 597 0
 355 0006 03F02002 		and	r2, r3, #32
 356 000a 02F0FF00 		and	r0, r2, #255
 357 000e 2AB1     		cbz	r2, .L27
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 18


 598:Generated_Source\PSoC5/UART_1.c ****         {
 599:Generated_Source\PSoC5/UART_1.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 358              		.loc 1 600 0
 359 0010 044A     		ldr	r2, .L30+4
 601:Generated_Source\PSoC5/UART_1.c **** 
 602:Generated_Source\PSoC5/UART_1.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 360              		.loc 1 603 0
 361 0012 13F01E0F 		tst	r3, #30
 600:Generated_Source\PSoC5/UART_1.c **** 
 362              		.loc 1 600 0
 363 0016 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 364              	.LVL18:
 604:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART_1.c ****             {
 606:Generated_Source\PSoC5/UART_1.c ****                 rxData = 0u;
 365              		.loc 1 606 0
 366 0018 18BF     		it	ne
 367 001a 0020     		movne	r0, #0
 368              	.LVL19:
 369              	.L27:
 607:Generated_Source\PSoC5/UART_1.c ****             }
 608:Generated_Source\PSoC5/UART_1.c ****         }
 609:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_1.c **** 
 611:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART_1.c ****     }
 370              		.loc 1 612 0
 371 001c 7047     		bx	lr
 372              	.L31:
 373 001e 00BF     		.align	2
 374              	.L30:
 375 0020 67650040 		.word	1073767783
 376 0024 4B650040 		.word	1073767755
 377              		.cfi_endproc
 378              	.LFE9:
 379              		.size	UART_1_GetChar, .-UART_1_GetChar
 380              		.section	.text.UART_1_GetByte,"ax",%progbits
 381              		.align	1
 382              		.global	UART_1_GetByte
 383              		.thumb
 384              		.thumb_func
 385              		.type	UART_1_GetByte, %function
 386              	UART_1_GetByte:
 387              	.LFB10:
 613:Generated_Source\PSoC5/UART_1.c **** 
 614:Generated_Source\PSoC5/UART_1.c **** 
 615:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetByte
 617:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_1.c ****     *
 619:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_1.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_1.c ****     *
 623:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 19


 624:Generated_Source\PSoC5/UART_1.c ****     *  None.
 625:Generated_Source\PSoC5/UART_1.c ****     *
 626:Generated_Source\PSoC5/UART_1.c ****     * Return:
 627:Generated_Source\PSoC5/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_1.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_1.c ****     *
 630:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_1.c ****     *  No.
 632:Generated_Source\PSoC5/UART_1.c ****     *
 633:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:Generated_Source\PSoC5/UART_1.c ****     {
 388              		.loc 1 635 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              	.LBB6:
 394              	.LBB7:
 489:Generated_Source\PSoC5/UART_1.c **** 
 395              		.loc 1 489 0
 396 0000 044B     		ldr	r3, .L33
 397              	.LBE7:
 398              	.LBE6:
 399              	.LBB9:
 400              	.LBB10:
 448:Generated_Source\PSoC5/UART_1.c **** 
 401              		.loc 1 448 0
 402 0002 054A     		ldr	r2, .L33+4
 403              	.LBE10:
 404              	.LBE9:
 405              	.LBB12:
 406              	.LBB8:
 489:Generated_Source\PSoC5/UART_1.c **** 
 407              		.loc 1 489 0
 408 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 409              	.LBE8:
 410              	.LBE12:
 411              	.LBB13:
 412              	.LBB11:
 448:Generated_Source\PSoC5/UART_1.c **** 
 413              		.loc 1 448 0
 414 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 415              	.LBE11:
 416              	.LBE13:
 636:Generated_Source\PSoC5/UART_1.c ****         
 637:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_1.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 641:Generated_Source\PSoC5/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
 642:Generated_Source\PSoC5/UART_1.c ****         UART_1_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 644:Generated_Source\PSoC5/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:Generated_Source\PSoC5/UART_1.c ****     #else
 646:Generated_Source\PSoC5/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 417              		.loc 1 646 0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 20


 418 0008 03F07F03 		and	r3, r3, #127
 647:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_1.c ****         
 649:Generated_Source\PSoC5/UART_1.c ****     }
 419              		.loc 1 649 0
 420 000c 40EA0320 		orr	r0, r0, r3, lsl #8
 421 0010 7047     		bx	lr
 422              	.L34:
 423 0012 00BF     		.align	2
 424              	.L33:
 425 0014 67650040 		.word	1073767783
 426 0018 4B650040 		.word	1073767755
 427              		.cfi_endproc
 428              	.LFE10:
 429              		.size	UART_1_GetByte, .-UART_1_GetByte
 430              		.section	.text.UART_1_GetRxBufferSize,"ax",%progbits
 431              		.align	1
 432              		.global	UART_1_GetRxBufferSize
 433              		.thumb
 434              		.thumb_func
 435              		.type	UART_1_GetRxBufferSize, %function
 436              	UART_1_GetRxBufferSize:
 437              	.LFB11:
 650:Generated_Source\PSoC5/UART_1.c **** 
 651:Generated_Source\PSoC5/UART_1.c **** 
 652:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_1.c ****     *
 656:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_1.c ****     *    account.
 663:Generated_Source\PSoC5/UART_1.c ****     *
 664:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_1.c ****     *  None.
 666:Generated_Source\PSoC5/UART_1.c ****     *
 667:Generated_Source\PSoC5/UART_1.c ****     * Return:
 668:Generated_Source\PSoC5/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_1.c ****     *
 671:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_1.c ****     *
 676:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_1.c ****     *  No.
 678:Generated_Source\PSoC5/UART_1.c ****     *
 679:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_1.c ****     *
 682:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 21


 684:Generated_Source\PSoC5/UART_1.c ****                                                             
 685:Generated_Source\PSoC5/UART_1.c ****     {
 438              		.loc 1 685 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART_1.c **** 
 688:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_1.c **** 
 690:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 692:Generated_Source\PSoC5/UART_1.c **** 
 693:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:Generated_Source\PSoC5/UART_1.c ****         {
 695:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART_1.c ****             {
 697:Generated_Source\PSoC5/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART_1.c ****             }
 699:Generated_Source\PSoC5/UART_1.c ****             else
 700:Generated_Source\PSoC5/UART_1.c ****             {
 701:Generated_Source\PSoC5/UART_1.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART_1.c ****             }
 703:Generated_Source\PSoC5/UART_1.c ****         }
 704:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:Generated_Source\PSoC5/UART_1.c ****         {
 706:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:Generated_Source\PSoC5/UART_1.c ****         }
 708:Generated_Source\PSoC5/UART_1.c ****         else
 709:Generated_Source\PSoC5/UART_1.c ****         {
 710:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:Generated_Source\PSoC5/UART_1.c ****         }
 712:Generated_Source\PSoC5/UART_1.c **** 
 713:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 714:Generated_Source\PSoC5/UART_1.c **** 
 715:Generated_Source\PSoC5/UART_1.c ****     #else
 716:Generated_Source\PSoC5/UART_1.c **** 
 717:Generated_Source\PSoC5/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 443              		.loc 1 718 0
 444 0000 024B     		ldr	r3, .L36
 445 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 446              	.LVL20:
 719:Generated_Source\PSoC5/UART_1.c **** 
 720:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_1.c **** 
 722:Generated_Source\PSoC5/UART_1.c ****         return(size);
 723:Generated_Source\PSoC5/UART_1.c ****     }
 447              		.loc 1 723 0
 448 0004 C0F34010 		ubfx	r0, r0, #5, #1
 449              	.LVL21:
 450 0008 7047     		bx	lr
 451              	.L37:
 452 000a 00BF     		.align	2
 453              	.L36:
 454 000c 67650040 		.word	1073767783
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 22


 455              		.cfi_endproc
 456              	.LFE11:
 457              		.size	UART_1_GetRxBufferSize, .-UART_1_GetRxBufferSize
 458              		.section	.text.UART_1_ClearRxBuffer,"ax",%progbits
 459              		.align	1
 460              		.global	UART_1_ClearRxBuffer
 461              		.thumb
 462              		.thumb_func
 463              		.type	UART_1_ClearRxBuffer, %function
 464              	UART_1_ClearRxBuffer:
 465              	.LFB12:
 724:Generated_Source\PSoC5/UART_1.c **** 
 725:Generated_Source\PSoC5/UART_1.c **** 
 726:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_1.c ****     *
 730:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_1.c ****     *
 733:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_1.c ****     *  None.
 735:Generated_Source\PSoC5/UART_1.c ****     *
 736:Generated_Source\PSoC5/UART_1.c ****     * Return:
 737:Generated_Source\PSoC5/UART_1.c ****     *  None.
 738:Generated_Source\PSoC5/UART_1.c ****     *
 739:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_1.c ****     *
 745:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_1.c ****     *  No.
 747:Generated_Source\PSoC5/UART_1.c ****     *
 748:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_1.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_1.c ****     *
 753:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_1.c ****     *
 756:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_1.c ****     {
 466              		.loc 1 758 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470 0000 08B5     		push	{r3, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 3, -8
 473              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_1.c **** 
 761:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 23


 762:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 474              		.loc 1 762 0
 475 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 476              	.LVL22:
 763:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 477              		.loc 1 763 0
 478 0006 064B     		ldr	r3, .L39
 479 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 480 000a 42F00102 		orr	r2, r2, #1
 481 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 482              		.loc 1 764 0
 483 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 484 0012 02F0FE02 		and	r2, r2, #254
 485 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC5/UART_1.c **** 
 767:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_1.c **** 
 769:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 771:Generated_Source\PSoC5/UART_1.c **** 
 772:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART_1.c **** 
 777:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 778:Generated_Source\PSoC5/UART_1.c **** 
 779:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_1.c **** 
 781:Generated_Source\PSoC5/UART_1.c ****     }
 486              		.loc 1 781 0
 487 0018 BDE80840 		pop	{r3, lr}
 488              		.cfi_restore 14
 489              		.cfi_restore 3
 490              		.cfi_def_cfa_offset 0
 765:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 491              		.loc 1 765 0
 492 001c FFF7FEBF 		b	CyExitCriticalSection
 493              	.LVL23:
 494              	.L40:
 495              		.align	2
 496              	.L39:
 497 0020 9B650040 		.word	1073767835
 498              		.cfi_endproc
 499              	.LFE12:
 500              		.size	UART_1_ClearRxBuffer, .-UART_1_ClearRxBuffer
 501              		.section	.text.UART_1_SetRxAddressMode,"ax",%progbits
 502              		.align	1
 503              		.global	UART_1_SetRxAddressMode
 504              		.thumb
 505              		.thumb_func
 506              		.type	UART_1_SetRxAddressMode, %function
 507              	UART_1_SetRxAddressMode:
 508              	.LFB28:
 509              		.cfi_startproc
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 24


 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513 0000 7047     		bx	lr
 514              		.cfi_endproc
 515              	.LFE28:
 516              		.size	UART_1_SetRxAddressMode, .-UART_1_SetRxAddressMode
 517              		.section	.text.UART_1_SetRxAddress1,"ax",%progbits
 518              		.align	1
 519              		.global	UART_1_SetRxAddress1
 520              		.thumb
 521              		.thumb_func
 522              		.type	UART_1_SetRxAddress1, %function
 523              	UART_1_SetRxAddress1:
 524              	.LFB14:
 782:Generated_Source\PSoC5/UART_1.c **** 
 783:Generated_Source\PSoC5/UART_1.c **** 
 784:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_1.c ****     *
 788:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_1.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_1.c ****     *
 792:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_1.c ****     *
 804:Generated_Source\PSoC5/UART_1.c ****     * Return:
 805:Generated_Source\PSoC5/UART_1.c ****     *  None.
 806:Generated_Source\PSoC5/UART_1.c ****     *
 807:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_1.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_1.c ****     *
 812:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_1.c ****                                                         
 815:Generated_Source\PSoC5/UART_1.c ****     {
 816:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_1.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_1.c ****                 {
 820:Generated_Source\PSoC5/UART_1.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_1.c ****                 }
 822:Generated_Source\PSoC5/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_1.c ****                 uint8 tmpCtrl;
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 25


 824:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_1.c **** 
 828:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_1.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_1.c ****             {
 837:Generated_Source\PSoC5/UART_1.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_1.c ****             }
 839:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_1.c ****     }
 841:Generated_Source\PSoC5/UART_1.c **** 
 842:Generated_Source\PSoC5/UART_1.c **** 
 843:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_1.c ****     *
 847:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_1.c ****     *
 850:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_1.c ****     *
 853:Generated_Source\PSoC5/UART_1.c ****     * Return:
 854:Generated_Source\PSoC5/UART_1.c ****     *  None.
 855:Generated_Source\PSoC5/UART_1.c ****     *
 856:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_1.c ****     {
 525              		.loc 1 858 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 530              	.LVL24:
 859:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 531              		.loc 1 859 0
 532 0000 014B     		ldr	r3, .L43
 533 0002 1870     		strb	r0, [r3]
 534 0004 7047     		bx	lr
 535              	.L44:
 536 0006 00BF     		.align	2
 537              	.L43:
 538 0008 2B650040 		.word	1073767723
 539              		.cfi_endproc
 540              	.LFE14:
 541              		.size	UART_1_SetRxAddress1, .-UART_1_SetRxAddress1
 542              		.section	.text.UART_1_SetRxAddress2,"ax",%progbits
 543              		.align	1
 544              		.global	UART_1_SetRxAddress2
 545              		.thumb
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 26


 546              		.thumb_func
 547              		.type	UART_1_SetRxAddress2, %function
 548              	UART_1_SetRxAddress2:
 549              	.LFB15:
 860:Generated_Source\PSoC5/UART_1.c ****     }
 861:Generated_Source\PSoC5/UART_1.c **** 
 862:Generated_Source\PSoC5/UART_1.c **** 
 863:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_1.c ****     *
 867:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_1.c ****     *
 870:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_1.c ****     *
 873:Generated_Source\PSoC5/UART_1.c ****     * Return:
 874:Generated_Source\PSoC5/UART_1.c ****     *  None.
 875:Generated_Source\PSoC5/UART_1.c ****     *
 876:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_1.c ****     {
 550              		.loc 1 878 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554              		@ link register save eliminated.
 555              	.LVL25:
 879:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 556              		.loc 1 879 0
 557 0000 014B     		ldr	r3, .L46
 558 0002 1870     		strb	r0, [r3]
 559 0004 7047     		bx	lr
 560              	.L47:
 561 0006 00BF     		.align	2
 562              	.L46:
 563 0008 3B650040 		.word	1073767739
 564              		.cfi_endproc
 565              	.LFE15:
 566              		.size	UART_1_SetRxAddress2, .-UART_1_SetRxAddress2
 567              		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 568              		.align	1
 569              		.global	UART_1_SetTxInterruptMode
 570              		.thumb
 571              		.thumb_func
 572              		.type	UART_1_SetTxInterruptMode, %function
 573              	UART_1_SetTxInterruptMode:
 574              	.LFB16:
 880:Generated_Source\PSoC5/UART_1.c ****     }
 881:Generated_Source\PSoC5/UART_1.c **** 
 882:Generated_Source\PSoC5/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_1.c **** 
 884:Generated_Source\PSoC5/UART_1.c **** 
 885:Generated_Source\PSoC5/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 27


 888:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_1.c ****     *
 890:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_1.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_1.c ****     *
 894:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_1.c ****     *
 901:Generated_Source\PSoC5/UART_1.c ****     * Return:
 902:Generated_Source\PSoC5/UART_1.c ****     *  None.
 903:Generated_Source\PSoC5/UART_1.c ****     *
 904:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_1.c ****     *
 907:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_1.c ****     {
 575              		.loc 1 909 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580              	.LVL26:
 910:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 581              		.loc 1 910 0
 582 0000 014B     		ldr	r3, .L49
 583 0002 1870     		strb	r0, [r3]
 584 0004 7047     		bx	lr
 585              	.L50:
 586 0006 00BF     		.align	2
 587              	.L49:
 588 0008 87640040 		.word	1073767559
 589              		.cfi_endproc
 590              	.LFE16:
 591              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 592              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 593              		.align	1
 594              		.global	UART_1_WriteTxData
 595              		.thumb
 596              		.thumb_func
 597              		.type	UART_1_WriteTxData, %function
 598              	UART_1_WriteTxData:
 599              	.LFB17:
 911:Generated_Source\PSoC5/UART_1.c ****     }
 912:Generated_Source\PSoC5/UART_1.c **** 
 913:Generated_Source\PSoC5/UART_1.c **** 
 914:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_1.c ****     *
 918:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 28


 920:Generated_Source\PSoC5/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_1.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_1.c ****     *
 923:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_1.c ****     *
 926:Generated_Source\PSoC5/UART_1.c ****     * Return:
 927:Generated_Source\PSoC5/UART_1.c ****     * None.
 928:Generated_Source\PSoC5/UART_1.c ****     *
 929:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_1.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_1.c ****     *
 938:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_1.c ****     *  No.
 940:Generated_Source\PSoC5/UART_1.c ****     *
 941:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_1.c ****     {
 600              		.loc 1 943 0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 605              	.LVL27:
 944:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 606              		.loc 1 945 0
 607 0000 024B     		ldr	r3, .L56
 608 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 609 0004 0BB1     		cbz	r3, .L51
 946:Generated_Source\PSoC5/UART_1.c ****         {
 947:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_1.c **** 
 949:Generated_Source\PSoC5/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 951:Generated_Source\PSoC5/UART_1.c **** 
 952:Generated_Source\PSoC5/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART_1.c ****             {
 955:Generated_Source\PSoC5/UART_1.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART_1.c ****             }
 958:Generated_Source\PSoC5/UART_1.c ****             else
 959:Generated_Source\PSoC5/UART_1.c ****             {
 960:Generated_Source\PSoC5/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART_1.c ****                 {
 962:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART_1.c ****                 }
 964:Generated_Source\PSoC5/UART_1.c **** 
 965:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 29


 967:Generated_Source\PSoC5/UART_1.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBufferWrite++;
 969:Generated_Source\PSoC5/UART_1.c ****             }
 970:Generated_Source\PSoC5/UART_1.c **** 
 971:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 972:Generated_Source\PSoC5/UART_1.c **** 
 973:Generated_Source\PSoC5/UART_1.c ****         #else
 974:Generated_Source\PSoC5/UART_1.c **** 
 975:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 610              		.loc 1 976 0
 611 0006 024B     		ldr	r3, .L56+4
 612 0008 1870     		strb	r0, [r3]
 613              	.L51:
 614 000a 7047     		bx	lr
 615              	.L57:
 616              		.align	2
 617              	.L56:
 618 000c 00000000 		.word	.LANCHOR0
 619 0010 47650040 		.word	1073767751
 620              		.cfi_endproc
 621              	.LFE17:
 622              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 623              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 624              		.align	1
 625              		.global	UART_1_ReadTxStatus
 626              		.thumb
 627              		.thumb_func
 628              		.type	UART_1_ReadTxStatus, %function
 629              	UART_1_ReadTxStatus:
 630              	.LFB18:
 977:Generated_Source\PSoC5/UART_1.c **** 
 978:Generated_Source\PSoC5/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_1.c ****         }
 980:Generated_Source\PSoC5/UART_1.c ****     }
 981:Generated_Source\PSoC5/UART_1.c **** 
 982:Generated_Source\PSoC5/UART_1.c **** 
 983:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_1.c ****     *
 987:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_1.c ****     *
 990:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_1.c ****     *  None.
 992:Generated_Source\PSoC5/UART_1.c ****     *
 993:Generated_Source\PSoC5/UART_1.c ****     * Return:
 994:Generated_Source\PSoC5/UART_1.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_1.c ****     *
 996:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_1.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_1.c ****     *
1002:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 30


1003:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART_1.c ****     {
 631              		.loc 1 1004 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 636              		.loc 1 1005 0
 637 0000 014B     		ldr	r3, .L59
 638 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART_1.c ****     }
 639              		.loc 1 1006 0
 640 0004 7047     		bx	lr
 641              	.L60:
 642 0006 00BF     		.align	2
 643              	.L59:
 644 0008 67640040 		.word	1073767527
 645              		.cfi_endproc
 646              	.LFE18:
 647              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 648              		.section	.text.UART_1_PutChar,"ax",%progbits
 649              		.align	1
 650              		.global	UART_1_PutChar
 651              		.thumb
 652              		.thumb_func
 653              		.type	UART_1_PutChar, %function
 654              	UART_1_PutChar:
 655              	.LFB19:
1007:Generated_Source\PSoC5/UART_1.c **** 
1008:Generated_Source\PSoC5/UART_1.c **** 
1009:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutChar
1011:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_1.c ****     *
1013:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_1.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_1.c ****     *
1018:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_1.c ****     *
1021:Generated_Source\PSoC5/UART_1.c ****     * Return:
1022:Generated_Source\PSoC5/UART_1.c ****     *  None.
1023:Generated_Source\PSoC5/UART_1.c ****     *
1024:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_1.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_1.c ****     *
1034:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 31


1035:Generated_Source\PSoC5/UART_1.c ****     *  No.
1036:Generated_Source\PSoC5/UART_1.c ****     *
1037:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_1.c ****     *
1040:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_1.c ****     {
 656              		.loc 1 1042 0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661              	.LVL28:
1043:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_1.c ****         */
1048:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_1.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_1.c **** 
1051:Generated_Source\PSoC5/UART_1.c ****         do
1052:Generated_Source\PSoC5/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_1.c **** 
1054:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1057:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_1.c **** 
1059:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
1060:Generated_Source\PSoC5/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
1061:Generated_Source\PSoC5/UART_1.c **** 
1062:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1065:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_1.c ****         }
1067:Generated_Source\PSoC5/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART_1.c ****                                 (uint8)(UART_1_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART_1.c **** 
1071:Generated_Source\PSoC5/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART_1.c ****         {
1074:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART_1.c ****         }
1077:Generated_Source\PSoC5/UART_1.c ****         else
1078:Generated_Source\PSoC5/UART_1.c ****         {
1079:Generated_Source\PSoC5/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_1.c ****             {
1081:Generated_Source\PSoC5/UART_1.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_1.c ****             }
1083:Generated_Source\PSoC5/UART_1.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite++;
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 32


1086:Generated_Source\PSoC5/UART_1.c **** 
1087:Generated_Source\PSoC5/UART_1.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1090:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_1.c **** 
1092:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_1.c **** 
1094:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1096:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_1.c **** 
1098:Generated_Source\PSoC5/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_1.c ****             {
1100:Generated_Source\PSoC5/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_1.c ****             }
1103:Generated_Source\PSoC5/UART_1.c ****         }
1104:Generated_Source\PSoC5/UART_1.c **** 
1105:Generated_Source\PSoC5/UART_1.c ****     #else
1106:Generated_Source\PSoC5/UART_1.c **** 
1107:Generated_Source\PSoC5/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
 662              		.loc 1 1107 0
 663 0000 034A     		ldr	r2, .L64
 664              	.L62:
 665              		.loc 1 1107 0 is_stmt 0 discriminator 1
 666 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 667 0004 5B07     		lsls	r3, r3, #29
 668 0006 FCD4     		bmi	.L62
1108:Generated_Source\PSoC5/UART_1.c ****         {
1109:Generated_Source\PSoC5/UART_1.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_1.c ****         }
1111:Generated_Source\PSoC5/UART_1.c **** 
1112:Generated_Source\PSoC5/UART_1.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
 669              		.loc 1 1113 0 is_stmt 1
 670 0008 024B     		ldr	r3, .L64+4
 671 000a 1870     		strb	r0, [r3]
 672 000c 7047     		bx	lr
 673              	.L65:
 674 000e 00BF     		.align	2
 675              	.L64:
 676 0010 67640040 		.word	1073767527
 677 0014 47650040 		.word	1073767751
 678              		.cfi_endproc
 679              	.LFE19:
 680              		.size	UART_1_PutChar, .-UART_1_PutChar
 681              		.section	.text.UART_1_PutString,"ax",%progbits
 682              		.align	1
 683              		.global	UART_1_PutString
 684              		.thumb
 685              		.thumb_func
 686              		.type	UART_1_PutString, %function
 687              	UART_1_PutString:
 688              	.LFB20:
1114:Generated_Source\PSoC5/UART_1.c **** 
1115:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 33


1116:Generated_Source\PSoC5/UART_1.c ****     }
1117:Generated_Source\PSoC5/UART_1.c **** 
1118:Generated_Source\PSoC5/UART_1.c **** 
1119:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutString
1121:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_1.c ****     *
1123:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_1.c ****     *
1126:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_1.c ****     *
1129:Generated_Source\PSoC5/UART_1.c ****     * Return:
1130:Generated_Source\PSoC5/UART_1.c ****     *  None.
1131:Generated_Source\PSoC5/UART_1.c ****     *
1132:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_1.c ****     *
1136:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_1.c ****     *  No.
1138:Generated_Source\PSoC5/UART_1.c ****     *
1139:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_1.c ****     *
1144:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_1.c ****     {
 689              		.loc 1 1146 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              	.LVL29:
 694 0000 10B5     		push	{r4, lr}
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 4, -8
 697              		.cfi_offset 14, -4
1147:Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART_1.c **** 
1149:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 698              		.loc 1 1150 0
 699 0002 064B     		ldr	r3, .L73
1146:Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
 700              		.loc 1 1146 0
 701 0004 0446     		mov	r4, r0
 702              		.loc 1 1150 0
 703 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 704 0008 3BB1     		cbz	r3, .L66
 705 000a 0021     		movs	r1, #0
 706              	.LVL30:
 707              	.L68:
1151:Generated_Source\PSoC5/UART_1.c ****         {
1152:Generated_Source\PSoC5/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 34


1153:Generated_Source\PSoC5/UART_1.c ****             while(string[bufIndex] != (char8) 0)
 708              		.loc 1 1153 0
 709 000c 8BB2     		uxth	r3, r1
 710              	.LVL31:
 711 000e E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 712 0010 0131     		adds	r1, r1, #1
 713 0012 10B1     		cbz	r0, .L66
1154:Generated_Source\PSoC5/UART_1.c ****             {
1155:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 714              		.loc 1 1155 0
 715 0014 FFF7FEFF 		bl	UART_1_PutChar
 716              	.LVL32:
 717 0018 F8E7     		b	.L68
 718              	.LVL33:
 719              	.L66:
 720 001a 10BD     		pop	{r4, pc}
 721              	.LVL34:
 722              	.L74:
 723              		.align	2
 724              	.L73:
 725 001c 00000000 		.word	.LANCHOR0
 726              		.cfi_endproc
 727              	.LFE20:
 728              		.size	UART_1_PutString, .-UART_1_PutString
 729              		.section	.text.UART_1_PutArray,"ax",%progbits
 730              		.align	1
 731              		.global	UART_1_PutArray
 732              		.thumb
 733              		.thumb_func
 734              		.type	UART_1_PutArray, %function
 735              	UART_1_PutArray:
 736              	.LFB21:
1156:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
1157:Generated_Source\PSoC5/UART_1.c ****             }
1158:Generated_Source\PSoC5/UART_1.c ****         }
1159:Generated_Source\PSoC5/UART_1.c ****     }
1160:Generated_Source\PSoC5/UART_1.c **** 
1161:Generated_Source\PSoC5/UART_1.c **** 
1162:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutArray
1164:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_1.c ****     *
1166:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_1.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_1.c ****     *
1170:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_1.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_1.c ****     *
1175:Generated_Source\PSoC5/UART_1.c ****     * Return:
1176:Generated_Source\PSoC5/UART_1.c ****     *  None.
1177:Generated_Source\PSoC5/UART_1.c ****     *
1178:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 35


1181:Generated_Source\PSoC5/UART_1.c ****     *
1182:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_1.c ****     *  No.
1184:Generated_Source\PSoC5/UART_1.c ****     *
1185:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_1.c ****     *
1190:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART_1.c ****                                                                     
1193:Generated_Source\PSoC5/UART_1.c ****     {
 737              		.loc 1 1193 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741              	.LVL35:
 742 0000 10B5     		push	{r4, lr}
 743              		.cfi_def_cfa_offset 8
 744              		.cfi_offset 4, -8
 745              		.cfi_offset 14, -4
1194:Generated_Source\PSoC5/UART_1.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART_1.c **** 
1196:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 746              		.loc 1 1197 0
 747 0002 074B     		ldr	r3, .L80
 748 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 749 0006 4BB1     		cbz	r3, .L75
 750 0008 0139     		subs	r1, r1, #1
 751              	.LVL36:
 752 000a 441E     		subs	r4, r0, #1
 753 000c 0144     		add	r1, r1, r0
 754              	.LVL37:
 755              	.L77:
1198:Generated_Source\PSoC5/UART_1.c ****         {
1199:Generated_Source\PSoC5/UART_1.c ****             while(bufIndex < byteCount)
 756              		.loc 1 1199 0
 757 000e 8C42     		cmp	r4, r1
 758 0010 04D0     		beq	.L75
1200:Generated_Source\PSoC5/UART_1.c ****             {
1201:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 759              		.loc 1 1201 0
 760 0012 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 761              	.LVL38:
 762 0016 FFF7FEFF 		bl	UART_1_PutChar
 763              	.LVL39:
 764 001a F8E7     		b	.L77
 765              	.LVL40:
 766              	.L75:
 767 001c 10BD     		pop	{r4, pc}
 768              	.L81:
 769 001e 00BF     		.align	2
 770              	.L80:
 771 0020 00000000 		.word	.LANCHOR0
 772              		.cfi_endproc
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 36


 773              	.LFE21:
 774              		.size	UART_1_PutArray, .-UART_1_PutArray
 775              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 776              		.align	1
 777              		.global	UART_1_PutCRLF
 778              		.thumb
 779              		.thumb_func
 780              		.type	UART_1_PutCRLF, %function
 781              	UART_1_PutCRLF:
 782              	.LFB22:
1202:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
1203:Generated_Source\PSoC5/UART_1.c ****             }
1204:Generated_Source\PSoC5/UART_1.c ****         }
1205:Generated_Source\PSoC5/UART_1.c ****     }
1206:Generated_Source\PSoC5/UART_1.c **** 
1207:Generated_Source\PSoC5/UART_1.c **** 
1208:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART_1.c ****     *
1212:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_1.c ****     *
1216:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_1.c ****     *
1219:Generated_Source\PSoC5/UART_1.c ****     * Return:
1220:Generated_Source\PSoC5/UART_1.c ****     *  None.
1221:Generated_Source\PSoC5/UART_1.c ****     *
1222:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_1.c ****     *
1226:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_1.c ****     *  No.
1228:Generated_Source\PSoC5/UART_1.c ****     *
1229:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART_1.c ****     {
 783              		.loc 1 1231 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              	.LVL41:
 788 0000 08B5     		push	{r3, lr}
 789              		.cfi_def_cfa_offset 8
 790              		.cfi_offset 3, -8
 791              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 792              		.loc 1 1233 0
 793 0002 074B     		ldr	r3, .L84
 794 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 795 0006 4BB1     		cbz	r3, .L82
1234:Generated_Source\PSoC5/UART_1.c ****         {
1235:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(txDataByte);
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 37


 796              		.loc 1 1235 0
 797 0008 FFF7FEFF 		bl	UART_1_PutChar
 798              	.LVL42:
1236:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Du);
 799              		.loc 1 1236 0
 800 000c 0D20     		movs	r0, #13
 801 000e FFF7FEFF 		bl	UART_1_PutChar
 802              	.LVL43:
1237:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
1238:Generated_Source\PSoC5/UART_1.c ****         }
1239:Generated_Source\PSoC5/UART_1.c ****     }
 803              		.loc 1 1239 0
 804 0012 BDE80840 		pop	{r3, lr}
 805              		.cfi_remember_state
 806              		.cfi_restore 14
 807              		.cfi_restore 3
 808              		.cfi_def_cfa_offset 0
1237:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
 809              		.loc 1 1237 0
 810 0016 0A20     		movs	r0, #10
 811 0018 FFF7FEBF 		b	UART_1_PutChar
 812              	.LVL44:
 813              	.L82:
 814              		.cfi_restore_state
 815 001c 08BD     		pop	{r3, pc}
 816              	.L85:
 817 001e 00BF     		.align	2
 818              	.L84:
 819 0020 00000000 		.word	.LANCHOR0
 820              		.cfi_endproc
 821              	.LFE22:
 822              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 823              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 824              		.align	1
 825              		.global	UART_1_GetTxBufferSize
 826              		.thumb
 827              		.thumb_func
 828              		.type	UART_1_GetTxBufferSize, %function
 829              	UART_1_GetTxBufferSize:
 830              	.LFB23:
1240:Generated_Source\PSoC5/UART_1.c **** 
1241:Generated_Source\PSoC5/UART_1.c **** 
1242:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_1.c ****     *
1246:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_1.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART_1.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART_1.c ****     *
1255:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART_1.c ****     *  None.
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 38


1257:Generated_Source\PSoC5/UART_1.c ****     *
1258:Generated_Source\PSoC5/UART_1.c ****     * Return:
1259:Generated_Source\PSoC5/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_1.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_1.c ****     *
1262:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART_1.c ****     *
1266:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_1.c ****     *  No.
1268:Generated_Source\PSoC5/UART_1.c ****     *
1269:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1270:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_1.c ****     *
1272:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_1.c ****                                                             
1275:Generated_Source\PSoC5/UART_1.c ****     {
 831              		.loc 1 1275 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART_1.c **** 
1278:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_1.c **** 
1280:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1282:Generated_Source\PSoC5/UART_1.c **** 
1283:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
1284:Generated_Source\PSoC5/UART_1.c ****         {
1285:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART_1.c ****         }
1287:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
1288:Generated_Source\PSoC5/UART_1.c ****         {
1289:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
1290:Generated_Source\PSoC5/UART_1.c ****         }
1291:Generated_Source\PSoC5/UART_1.c ****         else
1292:Generated_Source\PSoC5/UART_1.c ****         {
1293:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
1294:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite;
1295:Generated_Source\PSoC5/UART_1.c ****         }
1296:Generated_Source\PSoC5/UART_1.c **** 
1297:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1298:Generated_Source\PSoC5/UART_1.c **** 
1299:Generated_Source\PSoC5/UART_1.c ****     #else
1300:Generated_Source\PSoC5/UART_1.c **** 
1301:Generated_Source\PSoC5/UART_1.c ****         size = UART_1_TXSTATUS_REG;
 836              		.loc 1 1301 0
 837 0000 054B     		ldr	r3, .L89
 838 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 839 0004 C0B2     		uxtb	r0, r0
 840              	.LVL45:
1302:Generated_Source\PSoC5/UART_1.c **** 
1303:Generated_Source\PSoC5/UART_1.c ****         /* Is the fifo is full. */
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 39


1304:Generated_Source\PSoC5/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
 841              		.loc 1 1304 0
 842 0006 4307     		lsls	r3, r0, #29
1305:Generated_Source\PSoC5/UART_1.c ****         {
1306:Generated_Source\PSoC5/UART_1.c ****             size = UART_1_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART_1.c ****         }
1308:Generated_Source\PSoC5/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
 843              		.loc 1 1308 0
 844 0008 5ABF     		itte	pl
 845 000a 80F00200 		eorpl	r0, r0, #2
 846              	.LVL46:
 847 000e C0F34000 		ubfxpl	r0, r0, #1, #1
1306:Generated_Source\PSoC5/UART_1.c ****         }
 848              		.loc 1 1306 0
 849 0012 0420     		movmi	r0, #4
 850              	.LVL47:
1309:Generated_Source\PSoC5/UART_1.c ****         {
1310:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART_1.c ****         }
1312:Generated_Source\PSoC5/UART_1.c ****         else
1313:Generated_Source\PSoC5/UART_1.c ****         {
1314:Generated_Source\PSoC5/UART_1.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_1.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART_1.c ****         }
1317:Generated_Source\PSoC5/UART_1.c **** 
1318:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_1.c **** 
1320:Generated_Source\PSoC5/UART_1.c ****     return(size);
1321:Generated_Source\PSoC5/UART_1.c ****     }
 851              		.loc 1 1321 0
 852 0014 7047     		bx	lr
 853              	.L90:
 854 0016 00BF     		.align	2
 855              	.L89:
 856 0018 67640040 		.word	1073767527
 857              		.cfi_endproc
 858              	.LFE23:
 859              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 860              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 861              		.align	1
 862              		.global	UART_1_ClearTxBuffer
 863              		.thumb
 864              		.thumb_func
 865              		.type	UART_1_ClearTxBuffer, %function
 866              	UART_1_ClearTxBuffer:
 867              	.LFB24:
1322:Generated_Source\PSoC5/UART_1.c **** 
1323:Generated_Source\PSoC5/UART_1.c **** 
1324:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_1.c ****     *
1328:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_1.c ****     *
1331:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_1.c ****     *  None.
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 40


1333:Generated_Source\PSoC5/UART_1.c ****     *
1334:Generated_Source\PSoC5/UART_1.c ****     * Return:
1335:Generated_Source\PSoC5/UART_1.c ****     *  None.
1336:Generated_Source\PSoC5/UART_1.c ****     *
1337:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_1.c ****     *
1341:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_1.c ****     *  No.
1343:Generated_Source\PSoC5/UART_1.c ****     *
1344:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_1.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_1.c ****     *
1349:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_1.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_1.c ****     *
1353:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART_1.c ****     {
 868              		.loc 1 1355 0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 0
 871              		@ frame_needed = 0, uses_anonymous_args = 0
 872 0000 08B5     		push	{r3, lr}
 873              		.cfi_def_cfa_offset 8
 874              		.cfi_offset 3, -8
 875              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_1.c **** 
1358:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 876              		.loc 1 1358 0
 877 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 878              	.LVL48:
1359:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 879              		.loc 1 1360 0
 880 0006 064B     		ldr	r3, .L92
 881 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 882 000a 42F00102 		orr	r2, r2, #1
 883 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 884              		.loc 1 1361 0
 885 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 886 0012 02F0FE02 		and	r2, r2, #254
 887 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
1363:Generated_Source\PSoC5/UART_1.c **** 
1364:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_1.c **** 
1366:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
1368:Generated_Source\PSoC5/UART_1.c **** 
1369:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferRead = 0u;
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 41


1370:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART_1.c **** 
1372:Generated_Source\PSoC5/UART_1.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
1374:Generated_Source\PSoC5/UART_1.c **** 
1375:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART_1.c ****     }
 888              		.loc 1 1376 0
 889 0018 BDE80840 		pop	{r3, lr}
 890              		.cfi_restore 14
 891              		.cfi_restore 3
 892              		.cfi_def_cfa_offset 0
1362:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 893              		.loc 1 1362 0
 894 001c FFF7FEBF 		b	CyExitCriticalSection
 895              	.LVL49:
 896              	.L93:
 897              		.align	2
 898              	.L92:
 899 0020 97650040 		.word	1073767831
 900              		.cfi_endproc
 901              	.LFE24:
 902              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 903              		.section	.text.UART_1_SendBreak,"ax",%progbits
 904              		.align	1
 905              		.global	UART_1_SendBreak
 906              		.thumb
 907              		.thumb_func
 908              		.type	UART_1_SendBreak, %function
 909              	UART_1_SendBreak:
 910              	.LFB25:
1377:Generated_Source\PSoC5/UART_1.c **** 
1378:Generated_Source\PSoC5/UART_1.c **** 
1379:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_1.c ****     *
1383:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_1.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART_1.c ****     *
1386:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_1.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART_1.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_1.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_1.c ****     *
1398:Generated_Source\PSoC5/UART_1.c ****     * Return:
1399:Generated_Source\PSoC5/UART_1.c ****     *  None.
1400:Generated_Source\PSoC5/UART_1.c ****     *
1401:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 42


1403:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_1.c ****     *
1406:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_1.c ****     *  No.
1408:Generated_Source\PSoC5/UART_1.c ****     *
1409:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART_1.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_1.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_1.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_1.c ****     *     operation
1419:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_1.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_1.c ****     *
1432:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_1.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_1.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART_1.c ****     *
1439:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_1.c ****     {
 911              		.loc 1 1441 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 0
 914              		@ frame_needed = 0, uses_anonymous_args = 0
 915              		@ link register save eliminated.
 916              	.LVL50:
1442:Generated_Source\PSoC5/UART_1.c **** 
1443:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 917              		.loc 1 1444 0
 918 0000 124B     		ldr	r3, .L117
 919 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 920 0004 0AB3     		cbz	r2, .L94
 921              	.LBB14:
1445:Generated_Source\PSoC5/UART_1.c ****         {
1446:Generated_Source\PSoC5/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_1.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_1.c ****             uint8 tmpStat;
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 43


1449:Generated_Source\PSoC5/UART_1.c **** 
1450:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART_1.c **** 
1452:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_1.c ****             {
1455:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART_1.c **** 
1461:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART_1.c ****                 {
1463:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART_1.c ****                 }
1465:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART_1.c ****             }
1467:Generated_Source\PSoC5/UART_1.c **** 
1468:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_1.c ****             {
1471:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_1.c ****                 {
1473:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_1.c ****                 }
1475:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_1.c ****             }
1477:Generated_Source\PSoC5/UART_1.c **** 
1478:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_1.c ****             {
1482:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART_1.c ****             }
1485:Generated_Source\PSoC5/UART_1.c **** 
1486:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART_1.c **** 
1488:Generated_Source\PSoC5/UART_1.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_1.c **** 
1490:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 922              		.loc 1 1490 0
 923 0006 08B1     		cbz	r0, .L97
 924              		.loc 1 1490 0 is_stmt 0 discriminator 1
 925 0008 0328     		cmp	r0, #3
 926 000a 1CD1     		bne	.L98
 927              	.L97:
1491:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_1.c ****             {
1493:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 44


1500:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
 928              		.loc 1 1501 0 is_stmt 1
 929 000c 104A     		ldr	r2, .L117+4
 930 000e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 931 0010 5970     		strb	r1, [r3, #1]
1502:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 932              		.loc 1 1502 0
 933 0012 6721     		movs	r1, #103
 934 0014 1170     		strb	r1, [r2]
1503:Generated_Source\PSoC5/UART_1.c ****                 #else
1504:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_1.c **** 
1508:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 935              		.loc 1 1509 0
 936 0016 0021     		movs	r1, #0
 937 0018 82F81111 		strb	r1, [r2, #273]
1510:Generated_Source\PSoC5/UART_1.c **** 
1511:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART_1.c ****                 {
1513:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 938              		.loc 1 1513 0
 939 001c 0D49     		ldr	r1, .L117+8
 940              	.L99:
 941              		.loc 1 1513 0 is_stmt 0 discriminator 1
 942 001e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 943              	.LVL51:
1514:Generated_Source\PSoC5/UART_1.c ****                 }
1515:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 944              		.loc 1 1515 0 is_stmt 1 discriminator 1
 945 0020 9207     		lsls	r2, r2, #30
 946              	.LVL52:
 947 0022 FCD4     		bmi	.L99
1516:Generated_Source\PSoC5/UART_1.c ****             }
1517:Generated_Source\PSoC5/UART_1.c **** 
1518:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 948              		.loc 1 1518 0
 949 0024 00F0FD02 		and	r2, r0, #253
 950 0028 012A     		cmp	r2, #1
 951              	.L116:
 952 002a 03D0     		beq	.L100
 953              	.L104:
1519:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART_1.c ****             {
1521:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART_1.c ****                 {
1523:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1524:Generated_Source\PSoC5/UART_1.c ****                 }
1525:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1526:Generated_Source\PSoC5/UART_1.c ****             }
1527:Generated_Source\PSoC5/UART_1.c **** 
1528:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 954              		.loc 1 1528 0
 955 002c 0138     		subs	r0, r0, #1
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 45


 956              	.LVL53:
 957 002e 0228     		cmp	r0, #2
 958 0030 05D9     		bls	.L101
 959 0032 7047     		bx	lr
 960              	.LVL54:
 961              	.L100:
1523:Generated_Source\PSoC5/UART_1.c ****                 }
 962              		.loc 1 1523 0
 963 0034 0749     		ldr	r1, .L117+8
 964              	.L103:
1523:Generated_Source\PSoC5/UART_1.c ****                 }
 965              		.loc 1 1523 0 is_stmt 0 discriminator 1
 966 0036 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 967              	.LVL55:
1525:Generated_Source\PSoC5/UART_1.c ****             }
 968              		.loc 1 1525 0 is_stmt 1 discriminator 1
 969 0038 D207     		lsls	r2, r2, #31
 970              	.LVL56:
 971 003a FCD5     		bpl	.L103
 972 003c F6E7     		b	.L104
 973              	.LVL57:
 974              	.L101:
1529:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1530:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_1.c ****             {
1532:Generated_Source\PSoC5/UART_1.c **** 
1533:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 975              		.loc 1 1534 0
 976 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 977 0040 034B     		ldr	r3, .L117+4
 978 0042 1A70     		strb	r2, [r3]
 979              	.LBE14:
1535:Generated_Source\PSoC5/UART_1.c ****             #else
1536:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_1.c **** 
1539:Generated_Source\PSoC5/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_1.c ****             }
1545:Generated_Source\PSoC5/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_1.c ****         }
1547:Generated_Source\PSoC5/UART_1.c ****     }
 980              		.loc 1 1547 0
 981 0044 7047     		bx	lr
 982              	.LVL58:
 983              	.L98:
 984              	.LBB15:
1518:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
 985              		.loc 1 1518 0
 986 0046 0128     		cmp	r0, #1
 987 0048 EFE7     		b	.L116
 988              	.L94:
 989 004a 7047     		bx	lr
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 46


 990              	.L118:
 991              		.align	2
 992              	.L117:
 993 004c 00000000 		.word	.LANCHOR0
 994 0050 36640040 		.word	1073767478
 995 0054 67640040 		.word	1073767527
 996              	.LBE15:
 997              		.cfi_endproc
 998              	.LFE25:
 999              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 1000              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 1001              		.align	1
 1002              		.global	UART_1_SetTxAddressMode
 1003              		.thumb
 1004              		.thumb_func
 1005              		.type	UART_1_SetTxAddressMode, %function
 1006              	UART_1_SetTxAddressMode:
 1007              	.LFB26:
1548:Generated_Source\PSoC5/UART_1.c **** 
1549:Generated_Source\PSoC5/UART_1.c **** 
1550:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART_1.c ****     *
1554:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_1.c ****     *
1557:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_1.c ****     *
1564:Generated_Source\PSoC5/UART_1.c ****     * Return:
1565:Generated_Source\PSoC5/UART_1.c ****     *  None.
1566:Generated_Source\PSoC5/UART_1.c ****     *
1567:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_1.c ****     *  register.
1570:Generated_Source\PSoC5/UART_1.c ****     *
1571:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_1.c ****     {
 1008              		.loc 1 1573 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 0
 1011              		@ frame_needed = 0, uses_anonymous_args = 0
 1012              		@ link register save eliminated.
 1013              	.LVL59:
 1014 0000 7047     		bx	lr
 1015              		.cfi_endproc
 1016              	.LFE26:
 1017              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 1018              		.global	UART_1_initVar
 1019              		.bss
 1020              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 47


 1021              		.type	UART_1_initVar, %object
 1022              		.size	UART_1_initVar, 1
 1023              	UART_1_initVar:
 1024 0000 00       		.space	1
 1025              		.type	txPeriod.5122, %object
 1026              		.size	txPeriod.5122, 1
 1027              	txPeriod.5122:
 1028 0001 00       		.space	1
 1029              		.text
 1030              	.Letext0:
 1031              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1032              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1033              		.file 4 "Generated_Source\\PSoC5\\UART_1_IntClock.h"
 1034              		.section	.debug_info,"",%progbits
 1035              	.Ldebug_info0:
 1036 0000 08060000 		.4byte	0x608
 1037 0004 0400     		.2byte	0x4
 1038 0006 00000000 		.4byte	.Ldebug_abbrev0
 1039 000a 04       		.byte	0x4
 1040 000b 01       		.uleb128 0x1
 1041 000c 2F010000 		.4byte	.LASF59
 1042 0010 0C       		.byte	0xc
 1043 0011 00000000 		.4byte	.LASF60
 1044 0015 6C000000 		.4byte	.LASF61
 1045 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 1046 001d 00000000 		.4byte	0
 1047 0021 00000000 		.4byte	.Ldebug_line0
 1048 0025 02       		.uleb128 0x2
 1049 0026 01       		.byte	0x1
 1050 0027 06       		.byte	0x6
 1051 0028 23010000 		.4byte	.LASF0
 1052 002c 02       		.uleb128 0x2
 1053 002d 01       		.byte	0x1
 1054 002e 08       		.byte	0x8
 1055 002f BF030000 		.4byte	.LASF1
 1056 0033 02       		.uleb128 0x2
 1057 0034 02       		.byte	0x2
 1058 0035 05       		.byte	0x5
 1059 0036 CD030000 		.4byte	.LASF2
 1060 003a 02       		.uleb128 0x2
 1061 003b 02       		.byte	0x2
 1062 003c 07       		.byte	0x7
 1063 003d 8A020000 		.4byte	.LASF3
 1064 0041 02       		.uleb128 0x2
 1065 0042 04       		.byte	0x4
 1066 0043 05       		.byte	0x5
 1067 0044 D5010000 		.4byte	.LASF4
 1068 0048 02       		.uleb128 0x2
 1069 0049 04       		.byte	0x4
 1070 004a 07       		.byte	0x7
 1071 004b 5C020000 		.4byte	.LASF5
 1072 004f 02       		.uleb128 0x2
 1073 0050 08       		.byte	0x8
 1074 0051 05       		.byte	0x5
 1075 0052 15010000 		.4byte	.LASF6
 1076 0056 02       		.uleb128 0x2
 1077 0057 08       		.byte	0x8
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 48


 1078 0058 07       		.byte	0x7
 1079 0059 E7000000 		.4byte	.LASF7
 1080 005d 03       		.uleb128 0x3
 1081 005e 04       		.byte	0x4
 1082 005f 05       		.byte	0x5
 1083 0060 696E7400 		.ascii	"int\000"
 1084 0064 02       		.uleb128 0x2
 1085 0065 04       		.byte	0x4
 1086 0066 07       		.byte	0x7
 1087 0067 3B020000 		.4byte	.LASF8
 1088 006b 04       		.uleb128 0x4
 1089 006c EB010000 		.4byte	.LASF9
 1090 0070 02       		.byte	0x2
 1091 0071 E401     		.2byte	0x1e4
 1092 0073 2C000000 		.4byte	0x2c
 1093 0077 04       		.uleb128 0x4
 1094 0078 20000000 		.4byte	.LASF10
 1095 007c 02       		.byte	0x2
 1096 007d E501     		.2byte	0x1e5
 1097 007f 3A000000 		.4byte	0x3a
 1098 0083 02       		.uleb128 0x2
 1099 0084 04       		.byte	0x4
 1100 0085 04       		.byte	0x4
 1101 0086 8E030000 		.4byte	.LASF11
 1102 008a 02       		.uleb128 0x2
 1103 008b 08       		.byte	0x8
 1104 008c 04       		.byte	0x4
 1105 008d F1010000 		.4byte	.LASF12
 1106 0091 04       		.uleb128 0x4
 1107 0092 13040000 		.4byte	.LASF13
 1108 0096 02       		.byte	0x2
 1109 0097 F501     		.2byte	0x1f5
 1110 0099 9D000000 		.4byte	0x9d
 1111 009d 02       		.uleb128 0x2
 1112 009e 01       		.byte	0x1
 1113 009f 08       		.byte	0x8
 1114 00a0 0E040000 		.4byte	.LASF14
 1115 00a4 04       		.uleb128 0x4
 1116 00a5 BA030000 		.4byte	.LASF15
 1117 00a9 02       		.byte	0x2
 1118 00aa 8E02     		.2byte	0x28e
 1119 00ac B0000000 		.4byte	0xb0
 1120 00b0 05       		.uleb128 0x5
 1121 00b1 6B000000 		.4byte	0x6b
 1122 00b5 02       		.uleb128 0x2
 1123 00b6 08       		.byte	0x8
 1124 00b7 04       		.byte	0x4
 1125 00b8 57030000 		.4byte	.LASF16
 1126 00bc 02       		.uleb128 0x2
 1127 00bd 04       		.byte	0x4
 1128 00be 07       		.byte	0x7
 1129 00bf 24030000 		.4byte	.LASF17
 1130 00c3 06       		.uleb128 0x6
 1131 00c4 D5000000 		.4byte	.LASF18
 1132 00c8 01       		.byte	0x1
 1133 00c9 8801     		.2byte	0x188
 1134 00cb 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 49


 1135 00cf 01       		.byte	0x1
 1136 00d0 E1000000 		.4byte	0xe1
 1137 00d4 07       		.uleb128 0x7
 1138 00d5 07040000 		.4byte	.LASF20
 1139 00d9 01       		.byte	0x1
 1140 00da 8A01     		.2byte	0x18a
 1141 00dc 6B000000 		.4byte	0x6b
 1142 00e0 00       		.byte	0
 1143 00e1 06       		.uleb128 0x6
 1144 00e2 53040000 		.4byte	.LASF19
 1145 00e6 01       		.byte	0x1
 1146 00e7 E501     		.2byte	0x1e5
 1147 00e9 6B000000 		.4byte	0x6b
 1148 00ed 01       		.byte	0x1
 1149 00ee FF000000 		.4byte	0xff
 1150 00f2 07       		.uleb128 0x7
 1151 00f3 36040000 		.4byte	.LASF21
 1152 00f7 01       		.byte	0x1
 1153 00f8 E701     		.2byte	0x1e7
 1154 00fa 6B000000 		.4byte	0x6b
 1155 00fe 00       		.byte	0
 1156 00ff 08       		.uleb128 0x8
 1157 0100 19040000 		.4byte	.LASF62
 1158 0104 01       		.byte	0x1
 1159 0105 6A       		.byte	0x6a
 1160 0106 00000000 		.4byte	.LFB1
 1161 010a 28000000 		.4byte	.LFE1-.LFB1
 1162 010e 01       		.uleb128 0x1
 1163 010f 9C       		.byte	0x9c
 1164 0110 09       		.uleb128 0x9
 1165 0111 9D020000 		.4byte	.LASF22
 1166 0115 01       		.byte	0x1
 1167 0116 B7       		.byte	0xb7
 1168 0117 00000000 		.4byte	.LFB2
 1169 011b 40000000 		.4byte	.LFE2-.LFB2
 1170 011f 01       		.uleb128 0x1
 1171 0120 9C       		.byte	0x9c
 1172 0121 50010000 		.4byte	0x150
 1173 0125 0A       		.uleb128 0xa
 1174 0126 25040000 		.4byte	.LASF25
 1175 012a 01       		.byte	0x1
 1176 012b B9       		.byte	0xb9
 1177 012c 6B000000 		.4byte	0x6b
 1178 0130 00000000 		.4byte	.LLST0
 1179 0134 0B       		.uleb128 0xb
 1180 0135 06000000 		.4byte	.LVL0
 1181 0139 DF050000 		.4byte	0x5df
 1182 013d 0B       		.uleb128 0xb
 1183 013e 30000000 		.4byte	.LVL2
 1184 0142 EA050000 		.4byte	0x5ea
 1185 0146 0C       		.uleb128 0xc
 1186 0147 3A000000 		.4byte	.LVL4
 1187 014b F5050000 		.4byte	0x5f5
 1188 014f 00       		.byte	0
 1189 0150 09       		.uleb128 0x9
 1190 0151 DE010000 		.4byte	.LASF23
 1191 0155 01       		.byte	0x1
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 50


 1192 0156 4C       		.byte	0x4c
 1193 0157 00000000 		.4byte	.LFB0
 1194 015b 1C000000 		.4byte	.LFE0-.LFB0
 1195 015f 01       		.uleb128 0x1
 1196 0160 9C       		.byte	0x9c
 1197 0161 78010000 		.4byte	0x178
 1198 0165 0B       		.uleb128 0xb
 1199 0166 0C000000 		.4byte	.LVL5
 1200 016a FF000000 		.4byte	0xff
 1201 016e 0C       		.uleb128 0xc
 1202 016f 18000000 		.4byte	.LVL6
 1203 0173 10010000 		.4byte	0x110
 1204 0177 00       		.byte	0
 1205 0178 09       		.uleb128 0x9
 1206 0179 EE020000 		.4byte	.LASF24
 1207 017d 01       		.byte	0x1
 1208 017e F0       		.byte	0xf0
 1209 017f 00000000 		.4byte	.LFB3
 1210 0183 40000000 		.4byte	.LFE3-.LFB3
 1211 0187 01       		.uleb128 0x1
 1212 0188 9C       		.byte	0x9c
 1213 0189 B8010000 		.4byte	0x1b8
 1214 018d 0A       		.uleb128 0xa
 1215 018e 25040000 		.4byte	.LASF25
 1216 0192 01       		.byte	0x1
 1217 0193 F2       		.byte	0xf2
 1218 0194 6B000000 		.4byte	0x6b
 1219 0198 13000000 		.4byte	.LLST1
 1220 019c 0B       		.uleb128 0xb
 1221 019d 06000000 		.4byte	.LVL7
 1222 01a1 DF050000 		.4byte	0x5df
 1223 01a5 0B       		.uleb128 0xb
 1224 01a6 16000000 		.4byte	.LVL9
 1225 01aa 00060000 		.4byte	0x600
 1226 01ae 0C       		.uleb128 0xc
 1227 01af 38000000 		.4byte	.LVL11
 1228 01b3 F5050000 		.4byte	0x5f5
 1229 01b7 00       		.byte	0
 1230 01b8 0D       		.uleb128 0xd
 1231 01b9 D3020000 		.4byte	.LASF40
 1232 01bd 01       		.byte	0x1
 1233 01be 2701     		.2byte	0x127
 1234 01c0 6B000000 		.4byte	0x6b
 1235 01c4 00000000 		.4byte	.LFB4
 1236 01c8 04000000 		.4byte	.LFE4-.LFB4
 1237 01cc 01       		.uleb128 0x1
 1238 01cd 9C       		.byte	0x9c
 1239 01ce 0E       		.uleb128 0xe
 1240 01cf 19020000 		.4byte	.LASF26
 1241 01d3 01       		.byte	0x1
 1242 01d4 6701     		.2byte	0x167
 1243 01d6 00000000 		.4byte	.LFB6
 1244 01da 0C000000 		.4byte	.LFE6-.LFB6
 1245 01de 01       		.uleb128 0x1
 1246 01df 9C       		.byte	0x9c
 1247 01e0 F3010000 		.4byte	0x1f3
 1248 01e4 0F       		.uleb128 0xf
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 51


 1249 01e5 CC020000 		.4byte	.LASF34
 1250 01e9 01       		.byte	0x1
 1251 01ea 6701     		.2byte	0x167
 1252 01ec 6B000000 		.4byte	0x6b
 1253 01f0 01       		.uleb128 0x1
 1254 01f1 50       		.byte	0x50
 1255 01f2 00       		.byte	0
 1256 01f3 10       		.uleb128 0x10
 1257 01f4 C3000000 		.4byte	0xc3
 1258 01f8 00000000 		.4byte	.LFB7
 1259 01fc 0C000000 		.4byte	.LFE7-.LFB7
 1260 0200 01       		.uleb128 0x1
 1261 0201 9C       		.byte	0x9c
 1262 0202 0E020000 		.4byte	0x20e
 1263 0206 11       		.uleb128 0x11
 1264 0207 D4000000 		.4byte	0xd4
 1265 020b 01       		.uleb128 0x1
 1266 020c 50       		.byte	0x50
 1267 020d 00       		.byte	0
 1268 020e 10       		.uleb128 0x10
 1269 020f E1000000 		.4byte	0xe1
 1270 0213 00000000 		.4byte	.LFB8
 1271 0217 10000000 		.4byte	.LFE8-.LFB8
 1272 021b 01       		.uleb128 0x1
 1273 021c 9C       		.byte	0x9c
 1274 021d 2B020000 		.4byte	0x22b
 1275 0221 12       		.uleb128 0x12
 1276 0222 F2000000 		.4byte	0xf2
 1277 0226 26000000 		.4byte	.LLST2
 1278 022a 00       		.byte	0
 1279 022b 13       		.uleb128 0x13
 1280 022c 67040000 		.4byte	.LASF28
 1281 0230 01       		.byte	0x1
 1282 0231 1402     		.2byte	0x214
 1283 0233 6B000000 		.4byte	0x6b
 1284 0237 00000000 		.4byte	.LFB9
 1285 023b 28000000 		.4byte	.LFE9-.LFB9
 1286 023f 01       		.uleb128 0x1
 1287 0240 9C       		.byte	0x9c
 1288 0241 64020000 		.4byte	0x264
 1289 0245 14       		.uleb128 0x14
 1290 0246 07040000 		.4byte	.LASF20
 1291 024a 01       		.byte	0x1
 1292 024b 1602     		.2byte	0x216
 1293 024d 6B000000 		.4byte	0x6b
 1294 0251 3E000000 		.4byte	.LLST3
 1295 0255 15       		.uleb128 0x15
 1296 0256 6B030000 		.4byte	.LASF27
 1297 025a 01       		.byte	0x1
 1298 025b 1702     		.2byte	0x217
 1299 025d 6B000000 		.4byte	0x6b
 1300 0261 01       		.uleb128 0x1
 1301 0262 53       		.byte	0x53
 1302 0263 00       		.byte	0
 1303 0264 13       		.uleb128 0x13
 1304 0265 FA020000 		.4byte	.LASF29
 1305 0269 01       		.byte	0x1
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 52


 1306 026a 7A02     		.2byte	0x27a
 1307 026c 77000000 		.4byte	0x77
 1308 0270 00000000 		.4byte	.LFB10
 1309 0274 1C000000 		.4byte	.LFE10-.LFB10
 1310 0278 01       		.uleb128 0x1
 1311 0279 9C       		.byte	0x9c
 1312 027a BB020000 		.4byte	0x2bb
 1313 027e 16       		.uleb128 0x16
 1314 027f E1000000 		.4byte	0xe1
 1315 0283 00000000 		.4byte	.LBB6
 1316 0287 00000000 		.4byte	.Ldebug_ranges0+0
 1317 028b 01       		.byte	0x1
 1318 028c 8602     		.2byte	0x286
 1319 028e 9E020000 		.4byte	0x29e
 1320 0292 17       		.uleb128 0x17
 1321 0293 00000000 		.4byte	.Ldebug_ranges0+0
 1322 0297 18       		.uleb128 0x18
 1323 0298 F2000000 		.4byte	0xf2
 1324 029c 00       		.byte	0
 1325 029d 00       		.byte	0
 1326 029e 19       		.uleb128 0x19
 1327 029f C3000000 		.4byte	0xc3
 1328 02a3 02000000 		.4byte	.LBB9
 1329 02a7 18000000 		.4byte	.Ldebug_ranges0+0x18
 1330 02ab 01       		.byte	0x1
 1331 02ac 8602     		.2byte	0x286
 1332 02ae 17       		.uleb128 0x17
 1333 02af 18000000 		.4byte	.Ldebug_ranges0+0x18
 1334 02b3 18       		.uleb128 0x18
 1335 02b4 D4000000 		.4byte	0xd4
 1336 02b8 00       		.byte	0
 1337 02b9 00       		.byte	0
 1338 02ba 00       		.byte	0
 1339 02bb 13       		.uleb128 0x13
 1340 02bc F0030000 		.4byte	.LASF30
 1341 02c0 01       		.byte	0x1
 1342 02c1 AB02     		.2byte	0x2ab
 1343 02c3 6B000000 		.4byte	0x6b
 1344 02c7 00000000 		.4byte	.LFB11
 1345 02cb 10000000 		.4byte	.LFE11-.LFB11
 1346 02cf 01       		.uleb128 0x1
 1347 02d0 9C       		.byte	0x9c
 1348 02d1 E6020000 		.4byte	0x2e6
 1349 02d5 14       		.uleb128 0x14
 1350 02d6 85020000 		.4byte	.LASF31
 1351 02da 01       		.byte	0x1
 1352 02db AE02     		.2byte	0x2ae
 1353 02dd 6B000000 		.4byte	0x6b
 1354 02e1 5D000000 		.4byte	.LLST4
 1355 02e5 00       		.byte	0
 1356 02e6 0E       		.uleb128 0xe
 1357 02e7 A5030000 		.4byte	.LASF32
 1358 02eb 01       		.byte	0x1
 1359 02ec F502     		.2byte	0x2f5
 1360 02ee 00000000 		.4byte	.LFB12
 1361 02f2 24000000 		.4byte	.LFE12-.LFB12
 1362 02f6 01       		.uleb128 0x1
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 53


 1363 02f7 9C       		.byte	0x9c
 1364 02f8 1F030000 		.4byte	0x31f
 1365 02fc 14       		.uleb128 0x14
 1366 02fd 25040000 		.4byte	.LASF25
 1367 0301 01       		.byte	0x1
 1368 0302 F702     		.2byte	0x2f7
 1369 0304 6B000000 		.4byte	0x6b
 1370 0308 79000000 		.4byte	.LLST5
 1371 030c 0B       		.uleb128 0xb
 1372 030d 06000000 		.4byte	.LVL22
 1373 0311 DF050000 		.4byte	0x5df
 1374 0315 0C       		.uleb128 0xc
 1375 0316 20000000 		.4byte	.LVL23
 1376 031a F5050000 		.4byte	0x5f5
 1377 031e 00       		.byte	0
 1378 031f 0E       		.uleb128 0xe
 1379 0320 2D030000 		.4byte	.LASF33
 1380 0324 01       		.byte	0x1
 1381 0325 5903     		.2byte	0x359
 1382 0327 00000000 		.4byte	.LFB14
 1383 032b 0C000000 		.4byte	.LFE14-.LFB14
 1384 032f 01       		.uleb128 0x1
 1385 0330 9C       		.byte	0x9c
 1386 0331 44030000 		.4byte	0x344
 1387 0335 0F       		.uleb128 0xf
 1388 0336 63030000 		.4byte	.LASF35
 1389 033a 01       		.byte	0x1
 1390 033b 5903     		.2byte	0x359
 1391 033d 6B000000 		.4byte	0x6b
 1392 0341 01       		.uleb128 0x1
 1393 0342 50       		.byte	0x50
 1394 0343 00       		.byte	0
 1395 0344 0E       		.uleb128 0xe
 1396 0345 42030000 		.4byte	.LASF36
 1397 0349 01       		.byte	0x1
 1398 034a 6D03     		.2byte	0x36d
 1399 034c 00000000 		.4byte	.LFB15
 1400 0350 0C000000 		.4byte	.LFE15-.LFB15
 1401 0354 01       		.uleb128 0x1
 1402 0355 9C       		.byte	0x9c
 1403 0356 69030000 		.4byte	0x369
 1404 035a 0F       		.uleb128 0xf
 1405 035b 63030000 		.4byte	.LASF35
 1406 035f 01       		.byte	0x1
 1407 0360 6D03     		.2byte	0x36d
 1408 0362 6B000000 		.4byte	0x6b
 1409 0366 01       		.uleb128 0x1
 1410 0367 50       		.byte	0x50
 1411 0368 00       		.byte	0
 1412 0369 0E       		.uleb128 0xe
 1413 036a 74030000 		.4byte	.LASF37
 1414 036e 01       		.byte	0x1
 1415 036f 8C03     		.2byte	0x38c
 1416 0371 00000000 		.4byte	.LFB16
 1417 0375 0C000000 		.4byte	.LFE16-.LFB16
 1418 0379 01       		.uleb128 0x1
 1419 037a 9C       		.byte	0x9c
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 54


 1420 037b 8E030000 		.4byte	0x38e
 1421 037f 0F       		.uleb128 0xf
 1422 0380 CC020000 		.4byte	.LASF34
 1423 0384 01       		.byte	0x1
 1424 0385 8C03     		.2byte	0x38c
 1425 0387 6B000000 		.4byte	0x6b
 1426 038b 01       		.uleb128 0x1
 1427 038c 50       		.byte	0x50
 1428 038d 00       		.byte	0
 1429 038e 0E       		.uleb128 0xe
 1430 038f 09030000 		.4byte	.LASF38
 1431 0393 01       		.byte	0x1
 1432 0394 AE03     		.2byte	0x3ae
 1433 0396 00000000 		.4byte	.LFB17
 1434 039a 14000000 		.4byte	.LFE17-.LFB17
 1435 039e 01       		.uleb128 0x1
 1436 039f 9C       		.byte	0x9c
 1437 03a0 B3030000 		.4byte	0x3b3
 1438 03a4 0F       		.uleb128 0xf
 1439 03a5 52000000 		.4byte	.LASF39
 1440 03a9 01       		.byte	0x1
 1441 03aa AE03     		.2byte	0x3ae
 1442 03ac 6B000000 		.4byte	0x6b
 1443 03b0 01       		.uleb128 0x1
 1444 03b1 50       		.byte	0x50
 1445 03b2 00       		.byte	0
 1446 03b3 0D       		.uleb128 0xd
 1447 03b4 48020000 		.4byte	.LASF41
 1448 03b8 01       		.byte	0x1
 1449 03b9 EB03     		.2byte	0x3eb
 1450 03bb 6B000000 		.4byte	0x6b
 1451 03bf 00000000 		.4byte	.LFB18
 1452 03c3 0C000000 		.4byte	.LFE18-.LFB18
 1453 03c7 01       		.uleb128 0x1
 1454 03c8 9C       		.byte	0x9c
 1455 03c9 0E       		.uleb128 0xe
 1456 03ca 5D000000 		.4byte	.LASF42
 1457 03ce 01       		.byte	0x1
 1458 03cf 1104     		.2byte	0x411
 1459 03d1 00000000 		.4byte	.LFB19
 1460 03d5 18000000 		.4byte	.LFE19-.LFB19
 1461 03d9 01       		.uleb128 0x1
 1462 03da 9C       		.byte	0x9c
 1463 03db EE030000 		.4byte	0x3ee
 1464 03df 0F       		.uleb128 0xf
 1465 03e0 52000000 		.4byte	.LASF39
 1466 03e4 01       		.byte	0x1
 1467 03e5 1104     		.2byte	0x411
 1468 03e7 6B000000 		.4byte	0x6b
 1469 03eb 01       		.uleb128 0x1
 1470 03ec 50       		.byte	0x50
 1471 03ed 00       		.byte	0
 1472 03ee 0E       		.uleb128 0xe
 1473 03ef 94030000 		.4byte	.LASF43
 1474 03f3 01       		.byte	0x1
 1475 03f4 7904     		.2byte	0x479
 1476 03f6 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 55


 1477 03fa 20000000 		.4byte	.LFE20-.LFB20
 1478 03fe 01       		.uleb128 0x1
 1479 03ff 9C       		.byte	0x9c
 1480 0400 2E040000 		.4byte	0x42e
 1481 0404 1A       		.uleb128 0x1a
 1482 0405 BD000000 		.4byte	.LASF44
 1483 0409 01       		.byte	0x1
 1484 040a 7904     		.2byte	0x479
 1485 040c 2E040000 		.4byte	0x42e
 1486 0410 8C000000 		.4byte	.LLST6
 1487 0414 14       		.uleb128 0x14
 1488 0415 AB020000 		.4byte	.LASF45
 1489 0419 01       		.byte	0x1
 1490 041a 7B04     		.2byte	0x47b
 1491 041c 77000000 		.4byte	0x77
 1492 0420 B8000000 		.4byte	.LLST7
 1493 0424 0B       		.uleb128 0xb
 1494 0425 18000000 		.4byte	.LVL32
 1495 0429 C9030000 		.4byte	0x3c9
 1496 042d 00       		.byte	0
 1497 042e 1B       		.uleb128 0x1b
 1498 042f 04       		.byte	0x4
 1499 0430 34040000 		.4byte	0x434
 1500 0434 1C       		.uleb128 0x1c
 1501 0435 91000000 		.4byte	0x91
 1502 0439 0E       		.uleb128 0xe
 1503 043a 76040000 		.4byte	.LASF46
 1504 043e 01       		.byte	0x1
 1505 043f A704     		.2byte	0x4a7
 1506 0441 00000000 		.4byte	.LFB21
 1507 0445 24000000 		.4byte	.LFE21-.LFB21
 1508 0449 01       		.uleb128 0x1
 1509 044a 9C       		.byte	0x9c
 1510 044b 89040000 		.4byte	0x489
 1511 044f 1A       		.uleb128 0x1a
 1512 0450 BD000000 		.4byte	.LASF44
 1513 0454 01       		.byte	0x1
 1514 0455 A704     		.2byte	0x4a7
 1515 0457 89040000 		.4byte	0x489
 1516 045b ED000000 		.4byte	.LLST8
 1517 045f 1A       		.uleb128 0x1a
 1518 0460 E6030000 		.4byte	.LASF47
 1519 0464 01       		.byte	0x1
 1520 0465 A704     		.2byte	0x4a7
 1521 0467 6B000000 		.4byte	0x6b
 1522 046b 0E010000 		.4byte	.LLST9
 1523 046f 14       		.uleb128 0x14
 1524 0470 AB020000 		.4byte	.LASF45
 1525 0474 01       		.byte	0x1
 1526 0475 AA04     		.2byte	0x4aa
 1527 0477 6B000000 		.4byte	0x6b
 1528 047b 2F010000 		.4byte	.LLST10
 1529 047f 0B       		.uleb128 0xb
 1530 0480 1A000000 		.4byte	.LVL39
 1531 0484 C9030000 		.4byte	0x3c9
 1532 0488 00       		.byte	0
 1533 0489 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 56


 1534 048a 04       		.byte	0x4
 1535 048b 8F040000 		.4byte	0x48f
 1536 048f 1C       		.uleb128 0x1c
 1537 0490 6B000000 		.4byte	0x6b
 1538 0494 0E       		.uleb128 0xe
 1539 0495 C6010000 		.4byte	.LASF48
 1540 0499 01       		.byte	0x1
 1541 049a CE04     		.2byte	0x4ce
 1542 049c 00000000 		.4byte	.LFB22
 1543 04a0 24000000 		.4byte	.LFE22-.LFB22
 1544 04a4 01       		.uleb128 0x1
 1545 04a5 9C       		.byte	0x9c
 1546 04a6 E6040000 		.4byte	0x4e6
 1547 04aa 1A       		.uleb128 0x1a
 1548 04ab 52000000 		.4byte	.LASF39
 1549 04af 01       		.byte	0x1
 1550 04b0 CE04     		.2byte	0x4ce
 1551 04b2 6B000000 		.4byte	0x6b
 1552 04b6 69010000 		.4byte	.LLST11
 1553 04ba 0B       		.uleb128 0xb
 1554 04bb 0C000000 		.4byte	.LVL42
 1555 04bf C9030000 		.4byte	0x3c9
 1556 04c3 1D       		.uleb128 0x1d
 1557 04c4 12000000 		.4byte	.LVL43
 1558 04c8 C9030000 		.4byte	0x3c9
 1559 04cc D6040000 		.4byte	0x4d6
 1560 04d0 1E       		.uleb128 0x1e
 1561 04d1 01       		.uleb128 0x1
 1562 04d2 50       		.byte	0x50
 1563 04d3 01       		.uleb128 0x1
 1564 04d4 3D       		.byte	0x3d
 1565 04d5 00       		.byte	0
 1566 04d6 1F       		.uleb128 0x1f
 1567 04d7 1C000000 		.4byte	.LVL44
 1568 04db C9030000 		.4byte	0x3c9
 1569 04df 1E       		.uleb128 0x1e
 1570 04e0 01       		.uleb128 0x1
 1571 04e1 50       		.byte	0x50
 1572 04e2 01       		.uleb128 0x1
 1573 04e3 3A       		.byte	0x3a
 1574 04e4 00       		.byte	0
 1575 04e5 00       		.byte	0
 1576 04e6 13       		.uleb128 0x13
 1577 04e7 FE000000 		.4byte	.LASF49
 1578 04eb 01       		.byte	0x1
 1579 04ec F904     		.2byte	0x4f9
 1580 04ee 6B000000 		.4byte	0x6b
 1581 04f2 00000000 		.4byte	.LFB23
 1582 04f6 1C000000 		.4byte	.LFE23-.LFB23
 1583 04fa 01       		.uleb128 0x1
 1584 04fb 9C       		.byte	0x9c
 1585 04fc 11050000 		.4byte	0x511
 1586 0500 14       		.uleb128 0x14
 1587 0501 85020000 		.4byte	.LASF31
 1588 0505 01       		.byte	0x1
 1589 0506 FC04     		.2byte	0x4fc
 1590 0508 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 57


 1591 050c 95010000 		.4byte	.LLST12
 1592 0510 00       		.byte	0
 1593 0511 0E       		.uleb128 0xe
 1594 0512 27000000 		.4byte	.LASF50
 1595 0516 01       		.byte	0x1
 1596 0517 4A05     		.2byte	0x54a
 1597 0519 00000000 		.4byte	.LFB24
 1598 051d 24000000 		.4byte	.LFE24-.LFB24
 1599 0521 01       		.uleb128 0x1
 1600 0522 9C       		.byte	0x9c
 1601 0523 4A050000 		.4byte	0x54a
 1602 0527 14       		.uleb128 0x14
 1603 0528 25040000 		.4byte	.LASF25
 1604 052c 01       		.byte	0x1
 1605 052d 4C05     		.2byte	0x54c
 1606 052f 6B000000 		.4byte	0x6b
 1607 0533 B3010000 		.4byte	.LLST13
 1608 0537 0B       		.uleb128 0xb
 1609 0538 06000000 		.4byte	.LVL48
 1610 053c DF050000 		.4byte	0x5df
 1611 0540 0C       		.uleb128 0xc
 1612 0541 20000000 		.4byte	.LVL49
 1613 0545 F5050000 		.4byte	0x5f5
 1614 0549 00       		.byte	0
 1615 054a 0E       		.uleb128 0xe
 1616 054b C4000000 		.4byte	.LASF51
 1617 054f 01       		.byte	0x1
 1618 0550 A005     		.2byte	0x5a0
 1619 0552 00000000 		.4byte	.LFB25
 1620 0556 58000000 		.4byte	.LFE25-.LFB25
 1621 055a 01       		.uleb128 0x1
 1622 055b 9C       		.byte	0x9c
 1623 055c 99050000 		.4byte	0x599
 1624 0560 1A       		.uleb128 0x1a
 1625 0561 33020000 		.4byte	.LASF52
 1626 0565 01       		.byte	0x1
 1627 0566 A005     		.2byte	0x5a0
 1628 0568 6B000000 		.4byte	0x6b
 1629 056c C6010000 		.4byte	.LLST14
 1630 0570 17       		.uleb128 0x17
 1631 0571 30000000 		.4byte	.Ldebug_ranges0+0x30
 1632 0575 14       		.uleb128 0x14
 1633 0576 1C030000 		.4byte	.LASF53
 1634 057a 01       		.byte	0x1
 1635 057b A805     		.2byte	0x5a8
 1636 057d 6B000000 		.4byte	0x6b
 1637 0581 0B020000 		.4byte	.LLST15
 1638 0585 15       		.uleb128 0x15
 1639 0586 BD010000 		.4byte	.LASF54
 1640 058a 01       		.byte	0x1
 1641 058b D005     		.2byte	0x5d0
 1642 058d 6B000000 		.4byte	0x6b
 1643 0591 05       		.uleb128 0x5
 1644 0592 03       		.byte	0x3
 1645 0593 01000000 		.4byte	txPeriod.5122
 1646 0597 00       		.byte	0
 1647 0598 00       		.byte	0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 58


 1648 0599 20       		.uleb128 0x20
 1649 059a B4020000 		.4byte	.LASF63
 1650 059e 01       		.byte	0x1
 1651 059f 2406     		.2byte	0x624
 1652 05a1 01       		.byte	0x1
 1653 05a2 B3050000 		.4byte	0x5b3
 1654 05a6 21       		.uleb128 0x21
 1655 05a7 F8010000 		.4byte	.LASF64
 1656 05ab 01       		.byte	0x1
 1657 05ac 2406     		.2byte	0x624
 1658 05ae 6B000000 		.4byte	0x6b
 1659 05b2 00       		.byte	0
 1660 05b3 10       		.uleb128 0x10
 1661 05b4 99050000 		.4byte	0x599
 1662 05b8 00000000 		.4byte	.LFB26
 1663 05bc 02000000 		.4byte	.LFE26-.LFB26
 1664 05c0 01       		.uleb128 0x1
 1665 05c1 9C       		.byte	0x9c
 1666 05c2 CE050000 		.4byte	0x5ce
 1667 05c6 22       		.uleb128 0x22
 1668 05c7 A6050000 		.4byte	0x5a6
 1669 05cb 01       		.uleb128 0x1
 1670 05cc 50       		.byte	0x50
 1671 05cd 00       		.byte	0
 1672 05ce 23       		.uleb128 0x23
 1673 05cf D7030000 		.4byte	.LASF65
 1674 05d3 01       		.byte	0x1
 1675 05d4 1B       		.byte	0x1b
 1676 05d5 6B000000 		.4byte	0x6b
 1677 05d9 05       		.uleb128 0x5
 1678 05da 03       		.byte	0x3
 1679 05db 00000000 		.4byte	UART_1_initVar
 1680 05df 24       		.uleb128 0x24
 1681 05e0 6E020000 		.4byte	.LASF55
 1682 05e4 6E020000 		.4byte	.LASF55
 1683 05e8 03       		.byte	0x3
 1684 05e9 7D       		.byte	0x7d
 1685 05ea 24       		.uleb128 0x24
 1686 05eb 3D040000 		.4byte	.LASF56
 1687 05ef 3D040000 		.4byte	.LASF56
 1688 05f3 04       		.byte	0x4
 1689 05f4 27       		.byte	0x27
 1690 05f5 24       		.uleb128 0x24
 1691 05f6 3C000000 		.4byte	.LASF57
 1692 05fa 3C000000 		.4byte	.LASF57
 1693 05fe 03       		.byte	0x3
 1694 05ff 7E       		.byte	0x7e
 1695 0600 24       		.uleb128 0x24
 1696 0601 04020000 		.4byte	.LASF58
 1697 0605 04020000 		.4byte	.LASF58
 1698 0609 04       		.byte	0x4
 1699 060a 28       		.byte	0x28
 1700 060b 00       		.byte	0
 1701              		.section	.debug_abbrev,"",%progbits
 1702              	.Ldebug_abbrev0:
 1703 0000 01       		.uleb128 0x1
 1704 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 59


 1705 0002 01       		.byte	0x1
 1706 0003 25       		.uleb128 0x25
 1707 0004 0E       		.uleb128 0xe
 1708 0005 13       		.uleb128 0x13
 1709 0006 0B       		.uleb128 0xb
 1710 0007 03       		.uleb128 0x3
 1711 0008 0E       		.uleb128 0xe
 1712 0009 1B       		.uleb128 0x1b
 1713 000a 0E       		.uleb128 0xe
 1714 000b 55       		.uleb128 0x55
 1715 000c 17       		.uleb128 0x17
 1716 000d 11       		.uleb128 0x11
 1717 000e 01       		.uleb128 0x1
 1718 000f 10       		.uleb128 0x10
 1719 0010 17       		.uleb128 0x17
 1720 0011 00       		.byte	0
 1721 0012 00       		.byte	0
 1722 0013 02       		.uleb128 0x2
 1723 0014 24       		.uleb128 0x24
 1724 0015 00       		.byte	0
 1725 0016 0B       		.uleb128 0xb
 1726 0017 0B       		.uleb128 0xb
 1727 0018 3E       		.uleb128 0x3e
 1728 0019 0B       		.uleb128 0xb
 1729 001a 03       		.uleb128 0x3
 1730 001b 0E       		.uleb128 0xe
 1731 001c 00       		.byte	0
 1732 001d 00       		.byte	0
 1733 001e 03       		.uleb128 0x3
 1734 001f 24       		.uleb128 0x24
 1735 0020 00       		.byte	0
 1736 0021 0B       		.uleb128 0xb
 1737 0022 0B       		.uleb128 0xb
 1738 0023 3E       		.uleb128 0x3e
 1739 0024 0B       		.uleb128 0xb
 1740 0025 03       		.uleb128 0x3
 1741 0026 08       		.uleb128 0x8
 1742 0027 00       		.byte	0
 1743 0028 00       		.byte	0
 1744 0029 04       		.uleb128 0x4
 1745 002a 16       		.uleb128 0x16
 1746 002b 00       		.byte	0
 1747 002c 03       		.uleb128 0x3
 1748 002d 0E       		.uleb128 0xe
 1749 002e 3A       		.uleb128 0x3a
 1750 002f 0B       		.uleb128 0xb
 1751 0030 3B       		.uleb128 0x3b
 1752 0031 05       		.uleb128 0x5
 1753 0032 49       		.uleb128 0x49
 1754 0033 13       		.uleb128 0x13
 1755 0034 00       		.byte	0
 1756 0035 00       		.byte	0
 1757 0036 05       		.uleb128 0x5
 1758 0037 35       		.uleb128 0x35
 1759 0038 00       		.byte	0
 1760 0039 49       		.uleb128 0x49
 1761 003a 13       		.uleb128 0x13
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 60


 1762 003b 00       		.byte	0
 1763 003c 00       		.byte	0
 1764 003d 06       		.uleb128 0x6
 1765 003e 2E       		.uleb128 0x2e
 1766 003f 01       		.byte	0x1
 1767 0040 3F       		.uleb128 0x3f
 1768 0041 19       		.uleb128 0x19
 1769 0042 03       		.uleb128 0x3
 1770 0043 0E       		.uleb128 0xe
 1771 0044 3A       		.uleb128 0x3a
 1772 0045 0B       		.uleb128 0xb
 1773 0046 3B       		.uleb128 0x3b
 1774 0047 05       		.uleb128 0x5
 1775 0048 27       		.uleb128 0x27
 1776 0049 19       		.uleb128 0x19
 1777 004a 49       		.uleb128 0x49
 1778 004b 13       		.uleb128 0x13
 1779 004c 20       		.uleb128 0x20
 1780 004d 0B       		.uleb128 0xb
 1781 004e 01       		.uleb128 0x1
 1782 004f 13       		.uleb128 0x13
 1783 0050 00       		.byte	0
 1784 0051 00       		.byte	0
 1785 0052 07       		.uleb128 0x7
 1786 0053 34       		.uleb128 0x34
 1787 0054 00       		.byte	0
 1788 0055 03       		.uleb128 0x3
 1789 0056 0E       		.uleb128 0xe
 1790 0057 3A       		.uleb128 0x3a
 1791 0058 0B       		.uleb128 0xb
 1792 0059 3B       		.uleb128 0x3b
 1793 005a 05       		.uleb128 0x5
 1794 005b 49       		.uleb128 0x49
 1795 005c 13       		.uleb128 0x13
 1796 005d 00       		.byte	0
 1797 005e 00       		.byte	0
 1798 005f 08       		.uleb128 0x8
 1799 0060 2E       		.uleb128 0x2e
 1800 0061 00       		.byte	0
 1801 0062 3F       		.uleb128 0x3f
 1802 0063 19       		.uleb128 0x19
 1803 0064 03       		.uleb128 0x3
 1804 0065 0E       		.uleb128 0xe
 1805 0066 3A       		.uleb128 0x3a
 1806 0067 0B       		.uleb128 0xb
 1807 0068 3B       		.uleb128 0x3b
 1808 0069 0B       		.uleb128 0xb
 1809 006a 27       		.uleb128 0x27
 1810 006b 19       		.uleb128 0x19
 1811 006c 11       		.uleb128 0x11
 1812 006d 01       		.uleb128 0x1
 1813 006e 12       		.uleb128 0x12
 1814 006f 06       		.uleb128 0x6
 1815 0070 40       		.uleb128 0x40
 1816 0071 18       		.uleb128 0x18
 1817 0072 9742     		.uleb128 0x2117
 1818 0074 19       		.uleb128 0x19
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 61


 1819 0075 00       		.byte	0
 1820 0076 00       		.byte	0
 1821 0077 09       		.uleb128 0x9
 1822 0078 2E       		.uleb128 0x2e
 1823 0079 01       		.byte	0x1
 1824 007a 3F       		.uleb128 0x3f
 1825 007b 19       		.uleb128 0x19
 1826 007c 03       		.uleb128 0x3
 1827 007d 0E       		.uleb128 0xe
 1828 007e 3A       		.uleb128 0x3a
 1829 007f 0B       		.uleb128 0xb
 1830 0080 3B       		.uleb128 0x3b
 1831 0081 0B       		.uleb128 0xb
 1832 0082 27       		.uleb128 0x27
 1833 0083 19       		.uleb128 0x19
 1834 0084 11       		.uleb128 0x11
 1835 0085 01       		.uleb128 0x1
 1836 0086 12       		.uleb128 0x12
 1837 0087 06       		.uleb128 0x6
 1838 0088 40       		.uleb128 0x40
 1839 0089 18       		.uleb128 0x18
 1840 008a 9742     		.uleb128 0x2117
 1841 008c 19       		.uleb128 0x19
 1842 008d 01       		.uleb128 0x1
 1843 008e 13       		.uleb128 0x13
 1844 008f 00       		.byte	0
 1845 0090 00       		.byte	0
 1846 0091 0A       		.uleb128 0xa
 1847 0092 34       		.uleb128 0x34
 1848 0093 00       		.byte	0
 1849 0094 03       		.uleb128 0x3
 1850 0095 0E       		.uleb128 0xe
 1851 0096 3A       		.uleb128 0x3a
 1852 0097 0B       		.uleb128 0xb
 1853 0098 3B       		.uleb128 0x3b
 1854 0099 0B       		.uleb128 0xb
 1855 009a 49       		.uleb128 0x49
 1856 009b 13       		.uleb128 0x13
 1857 009c 02       		.uleb128 0x2
 1858 009d 17       		.uleb128 0x17
 1859 009e 00       		.byte	0
 1860 009f 00       		.byte	0
 1861 00a0 0B       		.uleb128 0xb
 1862 00a1 898201   		.uleb128 0x4109
 1863 00a4 00       		.byte	0
 1864 00a5 11       		.uleb128 0x11
 1865 00a6 01       		.uleb128 0x1
 1866 00a7 31       		.uleb128 0x31
 1867 00a8 13       		.uleb128 0x13
 1868 00a9 00       		.byte	0
 1869 00aa 00       		.byte	0
 1870 00ab 0C       		.uleb128 0xc
 1871 00ac 898201   		.uleb128 0x4109
 1872 00af 00       		.byte	0
 1873 00b0 11       		.uleb128 0x11
 1874 00b1 01       		.uleb128 0x1
 1875 00b2 9542     		.uleb128 0x2115
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 62


 1876 00b4 19       		.uleb128 0x19
 1877 00b5 31       		.uleb128 0x31
 1878 00b6 13       		.uleb128 0x13
 1879 00b7 00       		.byte	0
 1880 00b8 00       		.byte	0
 1881 00b9 0D       		.uleb128 0xd
 1882 00ba 2E       		.uleb128 0x2e
 1883 00bb 00       		.byte	0
 1884 00bc 3F       		.uleb128 0x3f
 1885 00bd 19       		.uleb128 0x19
 1886 00be 03       		.uleb128 0x3
 1887 00bf 0E       		.uleb128 0xe
 1888 00c0 3A       		.uleb128 0x3a
 1889 00c1 0B       		.uleb128 0xb
 1890 00c2 3B       		.uleb128 0x3b
 1891 00c3 05       		.uleb128 0x5
 1892 00c4 27       		.uleb128 0x27
 1893 00c5 19       		.uleb128 0x19
 1894 00c6 49       		.uleb128 0x49
 1895 00c7 13       		.uleb128 0x13
 1896 00c8 11       		.uleb128 0x11
 1897 00c9 01       		.uleb128 0x1
 1898 00ca 12       		.uleb128 0x12
 1899 00cb 06       		.uleb128 0x6
 1900 00cc 40       		.uleb128 0x40
 1901 00cd 18       		.uleb128 0x18
 1902 00ce 9742     		.uleb128 0x2117
 1903 00d0 19       		.uleb128 0x19
 1904 00d1 00       		.byte	0
 1905 00d2 00       		.byte	0
 1906 00d3 0E       		.uleb128 0xe
 1907 00d4 2E       		.uleb128 0x2e
 1908 00d5 01       		.byte	0x1
 1909 00d6 3F       		.uleb128 0x3f
 1910 00d7 19       		.uleb128 0x19
 1911 00d8 03       		.uleb128 0x3
 1912 00d9 0E       		.uleb128 0xe
 1913 00da 3A       		.uleb128 0x3a
 1914 00db 0B       		.uleb128 0xb
 1915 00dc 3B       		.uleb128 0x3b
 1916 00dd 05       		.uleb128 0x5
 1917 00de 27       		.uleb128 0x27
 1918 00df 19       		.uleb128 0x19
 1919 00e0 11       		.uleb128 0x11
 1920 00e1 01       		.uleb128 0x1
 1921 00e2 12       		.uleb128 0x12
 1922 00e3 06       		.uleb128 0x6
 1923 00e4 40       		.uleb128 0x40
 1924 00e5 18       		.uleb128 0x18
 1925 00e6 9742     		.uleb128 0x2117
 1926 00e8 19       		.uleb128 0x19
 1927 00e9 01       		.uleb128 0x1
 1928 00ea 13       		.uleb128 0x13
 1929 00eb 00       		.byte	0
 1930 00ec 00       		.byte	0
 1931 00ed 0F       		.uleb128 0xf
 1932 00ee 05       		.uleb128 0x5
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 63


 1933 00ef 00       		.byte	0
 1934 00f0 03       		.uleb128 0x3
 1935 00f1 0E       		.uleb128 0xe
 1936 00f2 3A       		.uleb128 0x3a
 1937 00f3 0B       		.uleb128 0xb
 1938 00f4 3B       		.uleb128 0x3b
 1939 00f5 05       		.uleb128 0x5
 1940 00f6 49       		.uleb128 0x49
 1941 00f7 13       		.uleb128 0x13
 1942 00f8 02       		.uleb128 0x2
 1943 00f9 18       		.uleb128 0x18
 1944 00fa 00       		.byte	0
 1945 00fb 00       		.byte	0
 1946 00fc 10       		.uleb128 0x10
 1947 00fd 2E       		.uleb128 0x2e
 1948 00fe 01       		.byte	0x1
 1949 00ff 31       		.uleb128 0x31
 1950 0100 13       		.uleb128 0x13
 1951 0101 11       		.uleb128 0x11
 1952 0102 01       		.uleb128 0x1
 1953 0103 12       		.uleb128 0x12
 1954 0104 06       		.uleb128 0x6
 1955 0105 40       		.uleb128 0x40
 1956 0106 18       		.uleb128 0x18
 1957 0107 9742     		.uleb128 0x2117
 1958 0109 19       		.uleb128 0x19
 1959 010a 01       		.uleb128 0x1
 1960 010b 13       		.uleb128 0x13
 1961 010c 00       		.byte	0
 1962 010d 00       		.byte	0
 1963 010e 11       		.uleb128 0x11
 1964 010f 34       		.uleb128 0x34
 1965 0110 00       		.byte	0
 1966 0111 31       		.uleb128 0x31
 1967 0112 13       		.uleb128 0x13
 1968 0113 02       		.uleb128 0x2
 1969 0114 18       		.uleb128 0x18
 1970 0115 00       		.byte	0
 1971 0116 00       		.byte	0
 1972 0117 12       		.uleb128 0x12
 1973 0118 34       		.uleb128 0x34
 1974 0119 00       		.byte	0
 1975 011a 31       		.uleb128 0x31
 1976 011b 13       		.uleb128 0x13
 1977 011c 02       		.uleb128 0x2
 1978 011d 17       		.uleb128 0x17
 1979 011e 00       		.byte	0
 1980 011f 00       		.byte	0
 1981 0120 13       		.uleb128 0x13
 1982 0121 2E       		.uleb128 0x2e
 1983 0122 01       		.byte	0x1
 1984 0123 3F       		.uleb128 0x3f
 1985 0124 19       		.uleb128 0x19
 1986 0125 03       		.uleb128 0x3
 1987 0126 0E       		.uleb128 0xe
 1988 0127 3A       		.uleb128 0x3a
 1989 0128 0B       		.uleb128 0xb
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 64


 1990 0129 3B       		.uleb128 0x3b
 1991 012a 05       		.uleb128 0x5
 1992 012b 27       		.uleb128 0x27
 1993 012c 19       		.uleb128 0x19
 1994 012d 49       		.uleb128 0x49
 1995 012e 13       		.uleb128 0x13
 1996 012f 11       		.uleb128 0x11
 1997 0130 01       		.uleb128 0x1
 1998 0131 12       		.uleb128 0x12
 1999 0132 06       		.uleb128 0x6
 2000 0133 40       		.uleb128 0x40
 2001 0134 18       		.uleb128 0x18
 2002 0135 9742     		.uleb128 0x2117
 2003 0137 19       		.uleb128 0x19
 2004 0138 01       		.uleb128 0x1
 2005 0139 13       		.uleb128 0x13
 2006 013a 00       		.byte	0
 2007 013b 00       		.byte	0
 2008 013c 14       		.uleb128 0x14
 2009 013d 34       		.uleb128 0x34
 2010 013e 00       		.byte	0
 2011 013f 03       		.uleb128 0x3
 2012 0140 0E       		.uleb128 0xe
 2013 0141 3A       		.uleb128 0x3a
 2014 0142 0B       		.uleb128 0xb
 2015 0143 3B       		.uleb128 0x3b
 2016 0144 05       		.uleb128 0x5
 2017 0145 49       		.uleb128 0x49
 2018 0146 13       		.uleb128 0x13
 2019 0147 02       		.uleb128 0x2
 2020 0148 17       		.uleb128 0x17
 2021 0149 00       		.byte	0
 2022 014a 00       		.byte	0
 2023 014b 15       		.uleb128 0x15
 2024 014c 34       		.uleb128 0x34
 2025 014d 00       		.byte	0
 2026 014e 03       		.uleb128 0x3
 2027 014f 0E       		.uleb128 0xe
 2028 0150 3A       		.uleb128 0x3a
 2029 0151 0B       		.uleb128 0xb
 2030 0152 3B       		.uleb128 0x3b
 2031 0153 05       		.uleb128 0x5
 2032 0154 49       		.uleb128 0x49
 2033 0155 13       		.uleb128 0x13
 2034 0156 02       		.uleb128 0x2
 2035 0157 18       		.uleb128 0x18
 2036 0158 00       		.byte	0
 2037 0159 00       		.byte	0
 2038 015a 16       		.uleb128 0x16
 2039 015b 1D       		.uleb128 0x1d
 2040 015c 01       		.byte	0x1
 2041 015d 31       		.uleb128 0x31
 2042 015e 13       		.uleb128 0x13
 2043 015f 52       		.uleb128 0x52
 2044 0160 01       		.uleb128 0x1
 2045 0161 55       		.uleb128 0x55
 2046 0162 17       		.uleb128 0x17
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 65


 2047 0163 58       		.uleb128 0x58
 2048 0164 0B       		.uleb128 0xb
 2049 0165 59       		.uleb128 0x59
 2050 0166 05       		.uleb128 0x5
 2051 0167 01       		.uleb128 0x1
 2052 0168 13       		.uleb128 0x13
 2053 0169 00       		.byte	0
 2054 016a 00       		.byte	0
 2055 016b 17       		.uleb128 0x17
 2056 016c 0B       		.uleb128 0xb
 2057 016d 01       		.byte	0x1
 2058 016e 55       		.uleb128 0x55
 2059 016f 17       		.uleb128 0x17
 2060 0170 00       		.byte	0
 2061 0171 00       		.byte	0
 2062 0172 18       		.uleb128 0x18
 2063 0173 34       		.uleb128 0x34
 2064 0174 00       		.byte	0
 2065 0175 31       		.uleb128 0x31
 2066 0176 13       		.uleb128 0x13
 2067 0177 00       		.byte	0
 2068 0178 00       		.byte	0
 2069 0179 19       		.uleb128 0x19
 2070 017a 1D       		.uleb128 0x1d
 2071 017b 01       		.byte	0x1
 2072 017c 31       		.uleb128 0x31
 2073 017d 13       		.uleb128 0x13
 2074 017e 52       		.uleb128 0x52
 2075 017f 01       		.uleb128 0x1
 2076 0180 55       		.uleb128 0x55
 2077 0181 17       		.uleb128 0x17
 2078 0182 58       		.uleb128 0x58
 2079 0183 0B       		.uleb128 0xb
 2080 0184 59       		.uleb128 0x59
 2081 0185 05       		.uleb128 0x5
 2082 0186 00       		.byte	0
 2083 0187 00       		.byte	0
 2084 0188 1A       		.uleb128 0x1a
 2085 0189 05       		.uleb128 0x5
 2086 018a 00       		.byte	0
 2087 018b 03       		.uleb128 0x3
 2088 018c 0E       		.uleb128 0xe
 2089 018d 3A       		.uleb128 0x3a
 2090 018e 0B       		.uleb128 0xb
 2091 018f 3B       		.uleb128 0x3b
 2092 0190 05       		.uleb128 0x5
 2093 0191 49       		.uleb128 0x49
 2094 0192 13       		.uleb128 0x13
 2095 0193 02       		.uleb128 0x2
 2096 0194 17       		.uleb128 0x17
 2097 0195 00       		.byte	0
 2098 0196 00       		.byte	0
 2099 0197 1B       		.uleb128 0x1b
 2100 0198 0F       		.uleb128 0xf
 2101 0199 00       		.byte	0
 2102 019a 0B       		.uleb128 0xb
 2103 019b 0B       		.uleb128 0xb
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 66


 2104 019c 49       		.uleb128 0x49
 2105 019d 13       		.uleb128 0x13
 2106 019e 00       		.byte	0
 2107 019f 00       		.byte	0
 2108 01a0 1C       		.uleb128 0x1c
 2109 01a1 26       		.uleb128 0x26
 2110 01a2 00       		.byte	0
 2111 01a3 49       		.uleb128 0x49
 2112 01a4 13       		.uleb128 0x13
 2113 01a5 00       		.byte	0
 2114 01a6 00       		.byte	0
 2115 01a7 1D       		.uleb128 0x1d
 2116 01a8 898201   		.uleb128 0x4109
 2117 01ab 01       		.byte	0x1
 2118 01ac 11       		.uleb128 0x11
 2119 01ad 01       		.uleb128 0x1
 2120 01ae 31       		.uleb128 0x31
 2121 01af 13       		.uleb128 0x13
 2122 01b0 01       		.uleb128 0x1
 2123 01b1 13       		.uleb128 0x13
 2124 01b2 00       		.byte	0
 2125 01b3 00       		.byte	0
 2126 01b4 1E       		.uleb128 0x1e
 2127 01b5 8A8201   		.uleb128 0x410a
 2128 01b8 00       		.byte	0
 2129 01b9 02       		.uleb128 0x2
 2130 01ba 18       		.uleb128 0x18
 2131 01bb 9142     		.uleb128 0x2111
 2132 01bd 18       		.uleb128 0x18
 2133 01be 00       		.byte	0
 2134 01bf 00       		.byte	0
 2135 01c0 1F       		.uleb128 0x1f
 2136 01c1 898201   		.uleb128 0x4109
 2137 01c4 01       		.byte	0x1
 2138 01c5 11       		.uleb128 0x11
 2139 01c6 01       		.uleb128 0x1
 2140 01c7 9542     		.uleb128 0x2115
 2141 01c9 19       		.uleb128 0x19
 2142 01ca 31       		.uleb128 0x31
 2143 01cb 13       		.uleb128 0x13
 2144 01cc 00       		.byte	0
 2145 01cd 00       		.byte	0
 2146 01ce 20       		.uleb128 0x20
 2147 01cf 2E       		.uleb128 0x2e
 2148 01d0 01       		.byte	0x1
 2149 01d1 3F       		.uleb128 0x3f
 2150 01d2 19       		.uleb128 0x19
 2151 01d3 03       		.uleb128 0x3
 2152 01d4 0E       		.uleb128 0xe
 2153 01d5 3A       		.uleb128 0x3a
 2154 01d6 0B       		.uleb128 0xb
 2155 01d7 3B       		.uleb128 0x3b
 2156 01d8 05       		.uleb128 0x5
 2157 01d9 27       		.uleb128 0x27
 2158 01da 19       		.uleb128 0x19
 2159 01db 20       		.uleb128 0x20
 2160 01dc 0B       		.uleb128 0xb
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 67


 2161 01dd 01       		.uleb128 0x1
 2162 01de 13       		.uleb128 0x13
 2163 01df 00       		.byte	0
 2164 01e0 00       		.byte	0
 2165 01e1 21       		.uleb128 0x21
 2166 01e2 05       		.uleb128 0x5
 2167 01e3 00       		.byte	0
 2168 01e4 03       		.uleb128 0x3
 2169 01e5 0E       		.uleb128 0xe
 2170 01e6 3A       		.uleb128 0x3a
 2171 01e7 0B       		.uleb128 0xb
 2172 01e8 3B       		.uleb128 0x3b
 2173 01e9 05       		.uleb128 0x5
 2174 01ea 49       		.uleb128 0x49
 2175 01eb 13       		.uleb128 0x13
 2176 01ec 00       		.byte	0
 2177 01ed 00       		.byte	0
 2178 01ee 22       		.uleb128 0x22
 2179 01ef 05       		.uleb128 0x5
 2180 01f0 00       		.byte	0
 2181 01f1 31       		.uleb128 0x31
 2182 01f2 13       		.uleb128 0x13
 2183 01f3 02       		.uleb128 0x2
 2184 01f4 18       		.uleb128 0x18
 2185 01f5 00       		.byte	0
 2186 01f6 00       		.byte	0
 2187 01f7 23       		.uleb128 0x23
 2188 01f8 34       		.uleb128 0x34
 2189 01f9 00       		.byte	0
 2190 01fa 03       		.uleb128 0x3
 2191 01fb 0E       		.uleb128 0xe
 2192 01fc 3A       		.uleb128 0x3a
 2193 01fd 0B       		.uleb128 0xb
 2194 01fe 3B       		.uleb128 0x3b
 2195 01ff 0B       		.uleb128 0xb
 2196 0200 49       		.uleb128 0x49
 2197 0201 13       		.uleb128 0x13
 2198 0202 3F       		.uleb128 0x3f
 2199 0203 19       		.uleb128 0x19
 2200 0204 02       		.uleb128 0x2
 2201 0205 18       		.uleb128 0x18
 2202 0206 00       		.byte	0
 2203 0207 00       		.byte	0
 2204 0208 24       		.uleb128 0x24
 2205 0209 2E       		.uleb128 0x2e
 2206 020a 00       		.byte	0
 2207 020b 3F       		.uleb128 0x3f
 2208 020c 19       		.uleb128 0x19
 2209 020d 3C       		.uleb128 0x3c
 2210 020e 19       		.uleb128 0x19
 2211 020f 6E       		.uleb128 0x6e
 2212 0210 0E       		.uleb128 0xe
 2213 0211 03       		.uleb128 0x3
 2214 0212 0E       		.uleb128 0xe
 2215 0213 3A       		.uleb128 0x3a
 2216 0214 0B       		.uleb128 0xb
 2217 0215 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 68


 2218 0216 0B       		.uleb128 0xb
 2219 0217 00       		.byte	0
 2220 0218 00       		.byte	0
 2221 0219 00       		.byte	0
 2222              		.section	.debug_loc,"",%progbits
 2223              	.Ldebug_loc0:
 2224              	.LLST0:
 2225 0000 08000000 		.4byte	.LVL1
 2226 0004 36000000 		.4byte	.LVL3
 2227 0008 0100     		.2byte	0x1
 2228 000a 54       		.byte	0x54
 2229 000b 00000000 		.4byte	0
 2230 000f 00000000 		.4byte	0
 2231              	.LLST1:
 2232 0013 08000000 		.4byte	.LVL8
 2233 0017 34000000 		.4byte	.LVL10
 2234 001b 0100     		.2byte	0x1
 2235 001d 54       		.byte	0x54
 2236 001e 00000000 		.4byte	0
 2237 0022 00000000 		.4byte	0
 2238              	.LLST2:
 2239 0026 04000000 		.4byte	.LVL14
 2240 002a 08000000 		.4byte	.LVL15
 2241 002e 0600     		.2byte	0x6
 2242 0030 70       		.byte	0x70
 2243 0031 00       		.sleb128 0
 2244 0032 08       		.byte	0x8
 2245 0033 7F       		.byte	0x7f
 2246 0034 1A       		.byte	0x1a
 2247 0035 9F       		.byte	0x9f
 2248 0036 00000000 		.4byte	0
 2249 003a 00000000 		.4byte	0
 2250              	.LLST3:
 2251 003e 00000000 		.4byte	.LVL16
 2252 0042 18000000 		.4byte	.LVL18
 2253 0046 0200     		.2byte	0x2
 2254 0048 30       		.byte	0x30
 2255 0049 9F       		.byte	0x9f
 2256 004a 18000000 		.4byte	.LVL18
 2257 004e 28000000 		.4byte	.LFE9
 2258 0052 0100     		.2byte	0x1
 2259 0054 50       		.byte	0x50
 2260 0055 00000000 		.4byte	0
 2261 0059 00000000 		.4byte	0
 2262              	.LLST4:
 2263 005d 04000000 		.4byte	.LVL20
 2264 0061 08000000 		.4byte	.LVL21
 2265 0065 0A00     		.2byte	0xa
 2266 0067 70       		.byte	0x70
 2267 0068 00       		.sleb128 0
 2268 0069 08       		.byte	0x8
 2269 006a 20       		.byte	0x20
 2270 006b 1A       		.byte	0x1a
 2271 006c 48       		.byte	0x48
 2272 006d 24       		.byte	0x24
 2273 006e 30       		.byte	0x30
 2274 006f 2E       		.byte	0x2e
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 69


 2275 0070 9F       		.byte	0x9f
 2276 0071 00000000 		.4byte	0
 2277 0075 00000000 		.4byte	0
 2278              	.LLST5:
 2279 0079 06000000 		.4byte	.LVL22
 2280 007d 1F000000 		.4byte	.LVL23-1
 2281 0081 0100     		.2byte	0x1
 2282 0083 50       		.byte	0x50
 2283 0084 00000000 		.4byte	0
 2284 0088 00000000 		.4byte	0
 2285              	.LLST6:
 2286 008c 00000000 		.4byte	.LVL29
 2287 0090 0C000000 		.4byte	.LVL30
 2288 0094 0100     		.2byte	0x1
 2289 0096 50       		.byte	0x50
 2290 0097 0C000000 		.4byte	.LVL30
 2291 009b 1C000000 		.4byte	.LVL34
 2292 009f 0100     		.2byte	0x1
 2293 00a1 54       		.byte	0x54
 2294 00a2 1C000000 		.4byte	.LVL34
 2295 00a6 20000000 		.4byte	.LFE20
 2296 00aa 0400     		.2byte	0x4
 2297 00ac F3       		.byte	0xf3
 2298 00ad 01       		.uleb128 0x1
 2299 00ae 50       		.byte	0x50
 2300 00af 9F       		.byte	0x9f
 2301 00b0 00000000 		.4byte	0
 2302 00b4 00000000 		.4byte	0
 2303              	.LLST7:
 2304 00b8 00000000 		.4byte	.LVL29
 2305 00bc 0C000000 		.4byte	.LVL30
 2306 00c0 0200     		.2byte	0x2
 2307 00c2 30       		.byte	0x30
 2308 00c3 9F       		.byte	0x9f
 2309 00c4 0C000000 		.4byte	.LVL30
 2310 00c8 0E000000 		.4byte	.LVL31
 2311 00cc 0100     		.2byte	0x1
 2312 00ce 51       		.byte	0x51
 2313 00cf 0E000000 		.4byte	.LVL31
 2314 00d3 17000000 		.4byte	.LVL32-1
 2315 00d7 0100     		.2byte	0x1
 2316 00d9 53       		.byte	0x53
 2317 00da 18000000 		.4byte	.LVL32
 2318 00de 1A000000 		.4byte	.LVL33
 2319 00e2 0100     		.2byte	0x1
 2320 00e4 51       		.byte	0x51
 2321 00e5 00000000 		.4byte	0
 2322 00e9 00000000 		.4byte	0
 2323              	.LLST8:
 2324 00ed 00000000 		.4byte	.LVL35
 2325 00f1 0E000000 		.4byte	.LVL37
 2326 00f5 0100     		.2byte	0x1
 2327 00f7 50       		.byte	0x50
 2328 00f8 0E000000 		.4byte	.LVL37
 2329 00fc 24000000 		.4byte	.LFE21
 2330 0100 0400     		.2byte	0x4
 2331 0102 F3       		.byte	0xf3
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 70


 2332 0103 01       		.uleb128 0x1
 2333 0104 50       		.byte	0x50
 2334 0105 9F       		.byte	0x9f
 2335 0106 00000000 		.4byte	0
 2336 010a 00000000 		.4byte	0
 2337              	.LLST9:
 2338 010e 00000000 		.4byte	.LVL35
 2339 0112 0A000000 		.4byte	.LVL36
 2340 0116 0100     		.2byte	0x1
 2341 0118 51       		.byte	0x51
 2342 0119 0A000000 		.4byte	.LVL36
 2343 011d 24000000 		.4byte	.LFE21
 2344 0121 0400     		.2byte	0x4
 2345 0123 F3       		.byte	0xf3
 2346 0124 01       		.uleb128 0x1
 2347 0125 51       		.byte	0x51
 2348 0126 9F       		.byte	0x9f
 2349 0127 00000000 		.4byte	0
 2350 012b 00000000 		.4byte	0
 2351              	.LLST10:
 2352 012f 00000000 		.4byte	.LVL35
 2353 0133 0E000000 		.4byte	.LVL37
 2354 0137 0200     		.2byte	0x2
 2355 0139 30       		.byte	0x30
 2356 013a 9F       		.byte	0x9f
 2357 013b 0E000000 		.4byte	.LVL37
 2358 013f 16000000 		.4byte	.LVL38
 2359 0143 0900     		.2byte	0x9
 2360 0145 74       		.byte	0x74
 2361 0146 00       		.sleb128 0
 2362 0147 F3       		.byte	0xf3
 2363 0148 01       		.uleb128 0x1
 2364 0149 50       		.byte	0x50
 2365 014a 31       		.byte	0x31
 2366 014b 1C       		.byte	0x1c
 2367 014c 1C       		.byte	0x1c
 2368 014d 9F       		.byte	0x9f
 2369 014e 1A000000 		.4byte	.LVL39
 2370 0152 1C000000 		.4byte	.LVL40
 2371 0156 0900     		.2byte	0x9
 2372 0158 74       		.byte	0x74
 2373 0159 00       		.sleb128 0
 2374 015a F3       		.byte	0xf3
 2375 015b 01       		.uleb128 0x1
 2376 015c 50       		.byte	0x50
 2377 015d 31       		.byte	0x31
 2378 015e 1C       		.byte	0x1c
 2379 015f 1C       		.byte	0x1c
 2380 0160 9F       		.byte	0x9f
 2381 0161 00000000 		.4byte	0
 2382 0165 00000000 		.4byte	0
 2383              	.LLST11:
 2384 0169 00000000 		.4byte	.LVL41
 2385 016d 0B000000 		.4byte	.LVL42-1
 2386 0171 0100     		.2byte	0x1
 2387 0173 50       		.byte	0x50
 2388 0174 0B000000 		.4byte	.LVL42-1
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 71


 2389 0178 1C000000 		.4byte	.LVL44
 2390 017c 0400     		.2byte	0x4
 2391 017e F3       		.byte	0xf3
 2392 017f 01       		.uleb128 0x1
 2393 0180 50       		.byte	0x50
 2394 0181 9F       		.byte	0x9f
 2395 0182 1C000000 		.4byte	.LVL44
 2396 0186 24000000 		.4byte	.LFE22
 2397 018a 0100     		.2byte	0x1
 2398 018c 50       		.byte	0x50
 2399 018d 00000000 		.4byte	0
 2400 0191 00000000 		.4byte	0
 2401              	.LLST12:
 2402 0195 06000000 		.4byte	.LVL45
 2403 0199 0E000000 		.4byte	.LVL46
 2404 019d 0100     		.2byte	0x1
 2405 019f 50       		.byte	0x50
 2406 01a0 14000000 		.4byte	.LVL47
 2407 01a4 1C000000 		.4byte	.LFE23
 2408 01a8 0100     		.2byte	0x1
 2409 01aa 50       		.byte	0x50
 2410 01ab 00000000 		.4byte	0
 2411 01af 00000000 		.4byte	0
 2412              	.LLST13:
 2413 01b3 06000000 		.4byte	.LVL48
 2414 01b7 1F000000 		.4byte	.LVL49-1
 2415 01bb 0100     		.2byte	0x1
 2416 01bd 50       		.byte	0x50
 2417 01be 00000000 		.4byte	0
 2418 01c2 00000000 		.4byte	0
 2419              	.LLST14:
 2420 01c6 00000000 		.4byte	.LVL50
 2421 01ca 2E000000 		.4byte	.LVL53
 2422 01ce 0100     		.2byte	0x1
 2423 01d0 50       		.byte	0x50
 2424 01d1 2E000000 		.4byte	.LVL53
 2425 01d5 34000000 		.4byte	.LVL54
 2426 01d9 0400     		.2byte	0x4
 2427 01db F3       		.byte	0xf3
 2428 01dc 01       		.uleb128 0x1
 2429 01dd 50       		.byte	0x50
 2430 01de 9F       		.byte	0x9f
 2431 01df 34000000 		.4byte	.LVL54
 2432 01e3 3E000000 		.4byte	.LVL57
 2433 01e7 0100     		.2byte	0x1
 2434 01e9 50       		.byte	0x50
 2435 01ea 3E000000 		.4byte	.LVL57
 2436 01ee 46000000 		.4byte	.LVL58
 2437 01f2 0400     		.2byte	0x4
 2438 01f4 F3       		.byte	0xf3
 2439 01f5 01       		.uleb128 0x1
 2440 01f6 50       		.byte	0x50
 2441 01f7 9F       		.byte	0x9f
 2442 01f8 46000000 		.4byte	.LVL58
 2443 01fc 58000000 		.4byte	.LFE25
 2444 0200 0100     		.2byte	0x1
 2445 0202 50       		.byte	0x50
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 72


 2446 0203 00000000 		.4byte	0
 2447 0207 00000000 		.4byte	0
 2448              	.LLST15:
 2449 020b 20000000 		.4byte	.LVL51
 2450 020f 22000000 		.4byte	.LVL52
 2451 0213 0100     		.2byte	0x1
 2452 0215 52       		.byte	0x52
 2453 0216 38000000 		.4byte	.LVL55
 2454 021a 3A000000 		.4byte	.LVL56
 2455 021e 0100     		.2byte	0x1
 2456 0220 52       		.byte	0x52
 2457 0221 00000000 		.4byte	0
 2458 0225 00000000 		.4byte	0
 2459              		.section	.debug_aranges,"",%progbits
 2460 0000 DC000000 		.4byte	0xdc
 2461 0004 0200     		.2byte	0x2
 2462 0006 00000000 		.4byte	.Ldebug_info0
 2463 000a 04       		.byte	0x4
 2464 000b 00       		.byte	0
 2465 000c 0000     		.2byte	0
 2466 000e 0000     		.2byte	0
 2467 0010 00000000 		.4byte	.LFB1
 2468 0014 28000000 		.4byte	.LFE1-.LFB1
 2469 0018 00000000 		.4byte	.LFB2
 2470 001c 40000000 		.4byte	.LFE2-.LFB2
 2471 0020 00000000 		.4byte	.LFB0
 2472 0024 1C000000 		.4byte	.LFE0-.LFB0
 2473 0028 00000000 		.4byte	.LFB3
 2474 002c 40000000 		.4byte	.LFE3-.LFB3
 2475 0030 00000000 		.4byte	.LFB4
 2476 0034 04000000 		.4byte	.LFE4-.LFB4
 2477 0038 00000000 		.4byte	.LFB6
 2478 003c 0C000000 		.4byte	.LFE6-.LFB6
 2479 0040 00000000 		.4byte	.LFB7
 2480 0044 0C000000 		.4byte	.LFE7-.LFB7
 2481 0048 00000000 		.4byte	.LFB8
 2482 004c 10000000 		.4byte	.LFE8-.LFB8
 2483 0050 00000000 		.4byte	.LFB9
 2484 0054 28000000 		.4byte	.LFE9-.LFB9
 2485 0058 00000000 		.4byte	.LFB10
 2486 005c 1C000000 		.4byte	.LFE10-.LFB10
 2487 0060 00000000 		.4byte	.LFB11
 2488 0064 10000000 		.4byte	.LFE11-.LFB11
 2489 0068 00000000 		.4byte	.LFB12
 2490 006c 24000000 		.4byte	.LFE12-.LFB12
 2491 0070 00000000 		.4byte	.LFB14
 2492 0074 0C000000 		.4byte	.LFE14-.LFB14
 2493 0078 00000000 		.4byte	.LFB15
 2494 007c 0C000000 		.4byte	.LFE15-.LFB15
 2495 0080 00000000 		.4byte	.LFB16
 2496 0084 0C000000 		.4byte	.LFE16-.LFB16
 2497 0088 00000000 		.4byte	.LFB17
 2498 008c 14000000 		.4byte	.LFE17-.LFB17
 2499 0090 00000000 		.4byte	.LFB18
 2500 0094 0C000000 		.4byte	.LFE18-.LFB18
 2501 0098 00000000 		.4byte	.LFB19
 2502 009c 18000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 73


 2503 00a0 00000000 		.4byte	.LFB20
 2504 00a4 20000000 		.4byte	.LFE20-.LFB20
 2505 00a8 00000000 		.4byte	.LFB21
 2506 00ac 24000000 		.4byte	.LFE21-.LFB21
 2507 00b0 00000000 		.4byte	.LFB22
 2508 00b4 24000000 		.4byte	.LFE22-.LFB22
 2509 00b8 00000000 		.4byte	.LFB23
 2510 00bc 1C000000 		.4byte	.LFE23-.LFB23
 2511 00c0 00000000 		.4byte	.LFB24
 2512 00c4 24000000 		.4byte	.LFE24-.LFB24
 2513 00c8 00000000 		.4byte	.LFB25
 2514 00cc 58000000 		.4byte	.LFE25-.LFB25
 2515 00d0 00000000 		.4byte	.LFB26
 2516 00d4 02000000 		.4byte	.LFE26-.LFB26
 2517 00d8 00000000 		.4byte	0
 2518 00dc 00000000 		.4byte	0
 2519              		.section	.debug_ranges,"",%progbits
 2520              	.Ldebug_ranges0:
 2521 0000 00000000 		.4byte	.LBB6
 2522 0004 02000000 		.4byte	.LBE6
 2523 0008 04000000 		.4byte	.LBB12
 2524 000c 06000000 		.4byte	.LBE12
 2525 0010 00000000 		.4byte	0
 2526 0014 00000000 		.4byte	0
 2527 0018 02000000 		.4byte	.LBB9
 2528 001c 04000000 		.4byte	.LBE9
 2529 0020 06000000 		.4byte	.LBB13
 2530 0024 08000000 		.4byte	.LBE13
 2531 0028 00000000 		.4byte	0
 2532 002c 00000000 		.4byte	0
 2533 0030 06000000 		.4byte	.LBB14
 2534 0034 44000000 		.4byte	.LBE14
 2535 0038 46000000 		.4byte	.LBB15
 2536 003c 58000000 		.4byte	.LBE15
 2537 0040 00000000 		.4byte	0
 2538 0044 00000000 		.4byte	0
 2539 0048 00000000 		.4byte	.LFB1
 2540 004c 28000000 		.4byte	.LFE1
 2541 0050 00000000 		.4byte	.LFB2
 2542 0054 40000000 		.4byte	.LFE2
 2543 0058 00000000 		.4byte	.LFB0
 2544 005c 1C000000 		.4byte	.LFE0
 2545 0060 00000000 		.4byte	.LFB3
 2546 0064 40000000 		.4byte	.LFE3
 2547 0068 00000000 		.4byte	.LFB4
 2548 006c 04000000 		.4byte	.LFE4
 2549 0070 00000000 		.4byte	.LFB6
 2550 0074 0C000000 		.4byte	.LFE6
 2551 0078 00000000 		.4byte	.LFB7
 2552 007c 0C000000 		.4byte	.LFE7
 2553 0080 00000000 		.4byte	.LFB8
 2554 0084 10000000 		.4byte	.LFE8
 2555 0088 00000000 		.4byte	.LFB9
 2556 008c 28000000 		.4byte	.LFE9
 2557 0090 00000000 		.4byte	.LFB10
 2558 0094 1C000000 		.4byte	.LFE10
 2559 0098 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 74


 2560 009c 10000000 		.4byte	.LFE11
 2561 00a0 00000000 		.4byte	.LFB12
 2562 00a4 24000000 		.4byte	.LFE12
 2563 00a8 00000000 		.4byte	.LFB14
 2564 00ac 0C000000 		.4byte	.LFE14
 2565 00b0 00000000 		.4byte	.LFB15
 2566 00b4 0C000000 		.4byte	.LFE15
 2567 00b8 00000000 		.4byte	.LFB16
 2568 00bc 0C000000 		.4byte	.LFE16
 2569 00c0 00000000 		.4byte	.LFB17
 2570 00c4 14000000 		.4byte	.LFE17
 2571 00c8 00000000 		.4byte	.LFB18
 2572 00cc 0C000000 		.4byte	.LFE18
 2573 00d0 00000000 		.4byte	.LFB19
 2574 00d4 18000000 		.4byte	.LFE19
 2575 00d8 00000000 		.4byte	.LFB20
 2576 00dc 20000000 		.4byte	.LFE20
 2577 00e0 00000000 		.4byte	.LFB21
 2578 00e4 24000000 		.4byte	.LFE21
 2579 00e8 00000000 		.4byte	.LFB22
 2580 00ec 24000000 		.4byte	.LFE22
 2581 00f0 00000000 		.4byte	.LFB23
 2582 00f4 1C000000 		.4byte	.LFE23
 2583 00f8 00000000 		.4byte	.LFB24
 2584 00fc 24000000 		.4byte	.LFE24
 2585 0100 00000000 		.4byte	.LFB25
 2586 0104 58000000 		.4byte	.LFE25
 2587 0108 00000000 		.4byte	.LFB26
 2588 010c 02000000 		.4byte	.LFE26
 2589 0110 00000000 		.4byte	0
 2590 0114 00000000 		.4byte	0
 2591              		.section	.debug_line,"",%progbits
 2592              	.Ldebug_line0:
 2593 0000 CE020000 		.section	.debug_str,"MS",%progbits,1
 2593      02006300 
 2593      00000201 
 2593      FB0E0D00 
 2593      01010101 
 2594              	.LASF60:
 2595 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_1.c\000"
 2595      72617465 
 2595      645F536F 
 2595      75726365 
 2595      5C50536F 
 2596              	.LASF10:
 2597 0020 75696E74 		.ascii	"uint16\000"
 2597      313600
 2598              	.LASF50:
 2599 0027 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 2599      5F315F43 
 2599      6C656172 
 2599      54784275 
 2599      66666572 
 2600              	.LASF57:
 2601 003c 43794578 		.ascii	"CyExitCriticalSection\000"
 2601      69744372 
 2601      69746963 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 75


 2601      616C5365 
 2601      6374696F 
 2602              	.LASF39:
 2603 0052 74784461 		.ascii	"txDataByte\000"
 2603      74614279 
 2603      746500
 2604              	.LASF42:
 2605 005d 55415254 		.ascii	"UART_1_PutChar\000"
 2605      5F315F50 
 2605      75744368 
 2605      617200
 2606              	.LASF61:
 2607 006c 433A5C55 		.ascii	"C:\\Users\\Zwe\\Desktop\\Monash\\Y3S2\\ECE3091 - EN"
 2607      73657273 
 2607      5C5A7765 
 2607      5C446573 
 2607      6B746F70 
 2608 0099 47494E45 		.ascii	"GINEERING DESIGN\\bcd\\Design01.cydsn\000"
 2608      4552494E 
 2608      47204445 
 2608      5349474E 
 2608      5C626364 
 2609              	.LASF44:
 2610 00bd 73747269 		.ascii	"string\000"
 2610      6E6700
 2611              	.LASF51:
 2612 00c4 55415254 		.ascii	"UART_1_SendBreak\000"
 2612      5F315F53 
 2612      656E6442 
 2612      7265616B 
 2612      00
 2613              	.LASF18:
 2614 00d5 55415254 		.ascii	"UART_1_ReadRxData\000"
 2614      5F315F52 
 2614      65616452 
 2614      78446174 
 2614      6100
 2615              	.LASF7:
 2616 00e7 6C6F6E67 		.ascii	"long long unsigned int\000"
 2616      206C6F6E 
 2616      6720756E 
 2616      7369676E 
 2616      65642069 
 2617              	.LASF49:
 2618 00fe 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 2618      5F315F47 
 2618      65745478 
 2618      42756666 
 2618      65725369 
 2619              	.LASF6:
 2620 0115 6C6F6E67 		.ascii	"long long int\000"
 2620      206C6F6E 
 2620      6720696E 
 2620      7400
 2621              	.LASF0:
 2622 0123 7369676E 		.ascii	"signed char\000"
 2622      65642063 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 76


 2622      68617200 
 2623              	.LASF59:
 2624 012f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2624      43313120 
 2624      352E342E 
 2624      31203230 
 2624      31363036 
 2625 0162 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2625      20726576 
 2625      6973696F 
 2625      6E203233 
 2625      37373135 
 2626 0195 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2626      66756E63 
 2626      74696F6E 
 2626      2D736563 
 2626      74696F6E 
 2627              	.LASF54:
 2628 01bd 74785065 		.ascii	"txPeriod\000"
 2628      72696F64 
 2628      00
 2629              	.LASF48:
 2630 01c6 55415254 		.ascii	"UART_1_PutCRLF\000"
 2630      5F315F50 
 2630      75744352 
 2630      4C4600
 2631              	.LASF4:
 2632 01d5 6C6F6E67 		.ascii	"long int\000"
 2632      20696E74 
 2632      00
 2633              	.LASF23:
 2634 01de 55415254 		.ascii	"UART_1_Start\000"
 2634      5F315F53 
 2634      74617274 
 2634      00
 2635              	.LASF9:
 2636 01eb 75696E74 		.ascii	"uint8\000"
 2636      3800
 2637              	.LASF12:
 2638 01f1 646F7562 		.ascii	"double\000"
 2638      6C6500
 2639              	.LASF64:
 2640 01f8 61646472 		.ascii	"addressMode\000"
 2640      6573734D 
 2640      6F646500 
 2641              	.LASF58:
 2642 0204 55415254 		.ascii	"UART_1_IntClock_Stop\000"
 2642      5F315F49 
 2642      6E74436C 
 2642      6F636B5F 
 2642      53746F70 
 2643              	.LASF26:
 2644 0219 55415254 		.ascii	"UART_1_SetRxInterruptMode\000"
 2644      5F315F53 
 2644      65745278 
 2644      496E7465 
 2644      72727570 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 77


 2645              	.LASF52:
 2646 0233 7265744D 		.ascii	"retMode\000"
 2646      6F646500 
 2647              	.LASF8:
 2648 023b 756E7369 		.ascii	"unsigned int\000"
 2648      676E6564 
 2648      20696E74 
 2648      00
 2649              	.LASF41:
 2650 0248 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 2650      5F315F52 
 2650      65616454 
 2650      78537461 
 2650      74757300 
 2651              	.LASF5:
 2652 025c 6C6F6E67 		.ascii	"long unsigned int\000"
 2652      20756E73 
 2652      69676E65 
 2652      6420696E 
 2652      7400
 2653              	.LASF55:
 2654 026e 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2654      74657243 
 2654      72697469 
 2654      63616C53 
 2654      65637469 
 2655              	.LASF31:
 2656 0285 73697A65 		.ascii	"size\000"
 2656      00
 2657              	.LASF3:
 2658 028a 73686F72 		.ascii	"short unsigned int\000"
 2658      7420756E 
 2658      7369676E 
 2658      65642069 
 2658      6E7400
 2659              	.LASF22:
 2660 029d 55415254 		.ascii	"UART_1_Enable\000"
 2660      5F315F45 
 2660      6E61626C 
 2660      6500
 2661              	.LASF45:
 2662 02ab 62756649 		.ascii	"bufIndex\000"
 2662      6E646578 
 2662      00
 2663              	.LASF63:
 2664 02b4 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 2664      5F315F53 
 2664      65745478 
 2664      41646472 
 2664      6573734D 
 2665              	.LASF34:
 2666 02cc 696E7453 		.ascii	"intSrc\000"
 2666      726300
 2667              	.LASF40:
 2668 02d3 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 2668      5F315F52 
 2668      65616443 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 78


 2668      6F6E7472 
 2668      6F6C5265 
 2669              	.LASF24:
 2670 02ee 55415254 		.ascii	"UART_1_Stop\000"
 2670      5F315F53 
 2670      746F7000 
 2671              	.LASF29:
 2672 02fa 55415254 		.ascii	"UART_1_GetByte\000"
 2672      5F315F47 
 2672      65744279 
 2672      746500
 2673              	.LASF38:
 2674 0309 55415254 		.ascii	"UART_1_WriteTxData\000"
 2674      5F315F57 
 2674      72697465 
 2674      54784461 
 2674      746100
 2675              	.LASF53:
 2676 031c 746D7053 		.ascii	"tmpStat\000"
 2676      74617400 
 2677              	.LASF17:
 2678 0324 73697A65 		.ascii	"sizetype\000"
 2678      74797065 
 2678      00
 2679              	.LASF33:
 2680 032d 55415254 		.ascii	"UART_1_SetRxAddress1\000"
 2680      5F315F53 
 2680      65745278 
 2680      41646472 
 2680      65737331 
 2681              	.LASF36:
 2682 0342 55415254 		.ascii	"UART_1_SetRxAddress2\000"
 2682      5F315F53 
 2682      65745278 
 2682      41646472 
 2682      65737332 
 2683              	.LASF16:
 2684 0357 6C6F6E67 		.ascii	"long double\000"
 2684      20646F75 
 2684      626C6500 
 2685              	.LASF35:
 2686 0363 61646472 		.ascii	"address\000"
 2686      65737300 
 2687              	.LASF27:
 2688 036b 72785374 		.ascii	"rxStatus\000"
 2688      61747573 
 2688      00
 2689              	.LASF37:
 2690 0374 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 2690      5F315F53 
 2690      65745478 
 2690      496E7465 
 2690      72727570 
 2691              	.LASF11:
 2692 038e 666C6F61 		.ascii	"float\000"
 2692      7400
 2693              	.LASF43:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 79


 2694 0394 55415254 		.ascii	"UART_1_PutString\000"
 2694      5F315F50 
 2694      75745374 
 2694      72696E67 
 2694      00
 2695              	.LASF32:
 2696 03a5 55415254 		.ascii	"UART_1_ClearRxBuffer\000"
 2696      5F315F43 
 2696      6C656172 
 2696      52784275 
 2696      66666572 
 2697              	.LASF15:
 2698 03ba 72656738 		.ascii	"reg8\000"
 2698      00
 2699              	.LASF1:
 2700 03bf 756E7369 		.ascii	"unsigned char\000"
 2700      676E6564 
 2700      20636861 
 2700      7200
 2701              	.LASF2:
 2702 03cd 73686F72 		.ascii	"short int\000"
 2702      7420696E 
 2702      7400
 2703              	.LASF65:
 2704 03d7 55415254 		.ascii	"UART_1_initVar\000"
 2704      5F315F69 
 2704      6E697456 
 2704      617200
 2705              	.LASF47:
 2706 03e6 62797465 		.ascii	"byteCount\000"
 2706      436F756E 
 2706      7400
 2707              	.LASF30:
 2708 03f0 55415254 		.ascii	"UART_1_GetRxBufferSize\000"
 2708      5F315F47 
 2708      65745278 
 2708      42756666 
 2708      65725369 
 2709              	.LASF20:
 2710 0407 72784461 		.ascii	"rxData\000"
 2710      746100
 2711              	.LASF14:
 2712 040e 63686172 		.ascii	"char\000"
 2712      00
 2713              	.LASF13:
 2714 0413 63686172 		.ascii	"char8\000"
 2714      3800
 2715              	.LASF62:
 2716 0419 55415254 		.ascii	"UART_1_Init\000"
 2716      5F315F49 
 2716      6E697400 
 2717              	.LASF25:
 2718 0425 656E6162 		.ascii	"enableInterrupts\000"
 2718      6C65496E 
 2718      74657272 
 2718      75707473 
 2718      00
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccPOjHzn.s 			page 80


 2719              	.LASF21:
 2720 0436 73746174 		.ascii	"status\000"
 2720      757300
 2721              	.LASF56:
 2722 043d 55415254 		.ascii	"UART_1_IntClock_Start\000"
 2722      5F315F49 
 2722      6E74436C 
 2722      6F636B5F 
 2722      53746172 
 2723              	.LASF19:
 2724 0453 55415254 		.ascii	"UART_1_ReadRxStatus\000"
 2724      5F315F52 
 2724      65616452 
 2724      78537461 
 2724      74757300 
 2725              	.LASF28:
 2726 0467 55415254 		.ascii	"UART_1_GetChar\000"
 2726      5F315F47 
 2726      65744368 
 2726      617200
 2727              	.LASF46:
 2728 0476 55415254 		.ascii	"UART_1_PutArray\000"
 2728      5F315F50 
 2728      75744172 
 2728      72617900 
 2729              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
