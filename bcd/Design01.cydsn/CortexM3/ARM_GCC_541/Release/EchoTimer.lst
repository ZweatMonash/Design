ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"EchoTimer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.EchoTimer_Enable,"ax",%progbits
  20              		.align	1
  21              		.global	EchoTimer_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	EchoTimer_Enable, %function
  25              	EchoTimer_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\EchoTimer.c"
   1:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/EchoTimer.c **** * File Name: EchoTimer.c
   3:Generated_Source\PSoC5/EchoTimer.c **** * Version 2.80
   4:Generated_Source\PSoC5/EchoTimer.c **** *
   5:Generated_Source\PSoC5/EchoTimer.c **** * Description:
   6:Generated_Source\PSoC5/EchoTimer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/EchoTimer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/EchoTimer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/EchoTimer.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/EchoTimer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/EchoTimer.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/EchoTimer.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/EchoTimer.c **** *  or a capture event.
  14:Generated_Source\PSoC5/EchoTimer.c **** *
  15:Generated_Source\PSoC5/EchoTimer.c **** * Note:
  16:Generated_Source\PSoC5/EchoTimer.c **** *
  17:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
  18:Generated_Source\PSoC5/EchoTimer.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/EchoTimer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/EchoTimer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/EchoTimer.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/EchoTimer.c **** 
  24:Generated_Source\PSoC5/EchoTimer.c **** #include "EchoTimer.h"
  25:Generated_Source\PSoC5/EchoTimer.c **** 
  26:Generated_Source\PSoC5/EchoTimer.c **** uint8 EchoTimer_initVar = 0u;
  27:Generated_Source\PSoC5/EchoTimer.c **** 
  28:Generated_Source\PSoC5/EchoTimer.c **** 
  29:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_Init
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 2


  31:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
  32:Generated_Source\PSoC5/EchoTimer.c **** *
  33:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
  34:Generated_Source\PSoC5/EchoTimer.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/EchoTimer.c **** *
  36:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
  37:Generated_Source\PSoC5/EchoTimer.c **** *  void
  38:Generated_Source\PSoC5/EchoTimer.c **** *
  39:Generated_Source\PSoC5/EchoTimer.c **** * Return:
  40:Generated_Source\PSoC5/EchoTimer.c **** *  void
  41:Generated_Source\PSoC5/EchoTimer.c **** *
  42:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_Init(void) 
  44:Generated_Source\PSoC5/EchoTimer.c **** {
  45:Generated_Source\PSoC5/EchoTimer.c ****     #if(!EchoTimer_UsingFixedFunction)
  46:Generated_Source\PSoC5/EchoTimer.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/EchoTimer.c ****             uint8 EchoTimer_interruptState;
  48:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/EchoTimer.c **** 
  50:Generated_Source\PSoC5/EchoTimer.c ****     #if (EchoTimer_UsingFixedFunction)
  51:Generated_Source\PSoC5/EchoTimer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CONTROL &= EchoTimer_CTRL_ENABLE;
  53:Generated_Source\PSoC5/EchoTimer.c **** 
  54:Generated_Source\PSoC5/EchoTimer.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/EchoTimer.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/EchoTimer.c ****             EchoTimer_CONTROL2 &= ((uint8)(~EchoTimer_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/EchoTimer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/EchoTimer.c **** 
  59:Generated_Source\PSoC5/EchoTimer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/EchoTimer.c ****             EchoTimer_CONTROL3 &= ((uint8)(~EchoTimer_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/EchoTimer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/EchoTimer.c **** 
  63:Generated_Source\PSoC5/EchoTimer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/EchoTimer.c ****         #if (EchoTimer_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/EchoTimer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/EchoTimer.c ****             EchoTimer_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/EchoTimer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/EchoTimer.c **** 
  69:Generated_Source\PSoC5/EchoTimer.c ****         #if (EchoTimer_RunModeUsed == 2)
  70:Generated_Source\PSoC5/EchoTimer.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/EchoTimer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/EchoTimer.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/EchoTimer.c ****                 EchoTimer_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/EchoTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/EchoTimer.c **** 
  76:Generated_Source\PSoC5/EchoTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/EchoTimer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/EchoTimer.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/EchoTimer.c ****                 EchoTimer_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/EchoTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/EchoTimer.c **** 
  82:Generated_Source\PSoC5/EchoTimer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/EchoTimer.c **** 
  84:Generated_Source\PSoC5/EchoTimer.c ****         #if (EchoTimer_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/EchoTimer.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/EchoTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/EchoTimer.c ****                 EchoTimer_CONTROL2 |= EchoTimer_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 3


  88:Generated_Source\PSoC5/EchoTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/EchoTimer.c **** 
  90:Generated_Source\PSoC5/EchoTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/EchoTimer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/EchoTimer.c ****                 EchoTimer_CONTROL3 &= ((uint8)(~EchoTimer_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/EchoTimer.c ****                 EchoTimer_CONTROL3 |= EchoTimer_CTRL_RCOD;
  94:Generated_Source\PSoC5/EchoTimer.c **** 
  95:Generated_Source\PSoC5/EchoTimer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/EchoTimer.c ****                 EchoTimer_CONTROL3 &= ((uint8)(~EchoTimer_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/EchoTimer.c ****                 EchoTimer_CONTROL3 |= EchoTimer_CTRL_ENBL;
  98:Generated_Source\PSoC5/EchoTimer.c **** 
  99:Generated_Source\PSoC5/EchoTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/EchoTimer.c ****                 EchoTimer_CONTROL3 |= EchoTimer_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/EchoTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/EchoTimer.c **** 
 103:Generated_Source\PSoC5/EchoTimer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/EchoTimer.c **** 
 105:Generated_Source\PSoC5/EchoTimer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_RT1 &= ((uint8)(~EchoTimer_RT1_MASK));
 107:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_RT1 |= EchoTimer_SYNC;
 108:Generated_Source\PSoC5/EchoTimer.c **** 
 109:Generated_Source\PSoC5/EchoTimer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_RT1 &= ((uint8)(~EchoTimer_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_RT1 |= EchoTimer_SYNCDSI_EN;
 112:Generated_Source\PSoC5/EchoTimer.c **** 
 113:Generated_Source\PSoC5/EchoTimer.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CONTROL2 |= EchoTimer_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/EchoTimer.c **** 
 117:Generated_Source\PSoC5/EchoTimer.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/EchoTimer.c ****     EchoTimer_WritePeriod(EchoTimer_INIT_PERIOD);
 119:Generated_Source\PSoC5/EchoTimer.c ****     EchoTimer_WriteCounter(EchoTimer_INIT_PERIOD);
 120:Generated_Source\PSoC5/EchoTimer.c **** 
 121:Generated_Source\PSoC5/EchoTimer.c ****     #if (EchoTimer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CAPTURE_COUNT_CTRL |= EchoTimer_CNTR_ENABLE;
 123:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_SetCaptureCount(EchoTimer_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/EchoTimer.c **** 
 126:Generated_Source\PSoC5/EchoTimer.c ****     #if (!EchoTimer_UsingFixedFunction)
 127:Generated_Source\PSoC5/EchoTimer.c ****         #if (EchoTimer_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/EchoTimer.c ****             EchoTimer_SetCaptureMode(EchoTimer_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/EchoTimer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/EchoTimer.c **** 
 131:Generated_Source\PSoC5/EchoTimer.c ****         #if (EchoTimer_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/EchoTimer.c ****             #if (!EchoTimer_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/EchoTimer.c ****                 if (0u == (EchoTimer_CONTROL & EchoTimer__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/EchoTimer.c ****                 {
 135:Generated_Source\PSoC5/EchoTimer.c ****                     EchoTimer_SetTriggerMode(EchoTimer_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/EchoTimer.c ****                 }
 137:Generated_Source\PSoC5/EchoTimer.c ****             #endif /* (!EchoTimer_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/EchoTimer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/EchoTimer.c **** 
 140:Generated_Source\PSoC5/EchoTimer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/EchoTimer.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/EchoTimer.c **** 
 144:Generated_Source\PSoC5/EchoTimer.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 4


 145:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_STATUS_AUX_CTRL |= EchoTimer_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/EchoTimer.c **** 
 147:Generated_Source\PSoC5/EchoTimer.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/EchoTimer.c ****         CyExitCriticalSection(EchoTimer_interruptState);
 149:Generated_Source\PSoC5/EchoTimer.c **** 
 150:Generated_Source\PSoC5/EchoTimer.c ****         #if (EchoTimer_EnableTriggerMode)
 151:Generated_Source\PSoC5/EchoTimer.c ****             EchoTimer_EnableTrigger();
 152:Generated_Source\PSoC5/EchoTimer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/EchoTimer.c **** 		
 154:Generated_Source\PSoC5/EchoTimer.c **** 		
 155:Generated_Source\PSoC5/EchoTimer.c ****         #if (EchoTimer_InterruptOnCaptureCount && !EchoTimer_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/EchoTimer.c ****             EchoTimer_SetInterruptCount(EchoTimer_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/EchoTimer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/EchoTimer.c **** 
 159:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_ClearFIFO();
 160:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/EchoTimer.c **** 
 162:Generated_Source\PSoC5/EchoTimer.c ****     EchoTimer_SetInterruptMode(EchoTimer_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/EchoTimer.c **** }
 164:Generated_Source\PSoC5/EchoTimer.c **** 
 165:Generated_Source\PSoC5/EchoTimer.c **** 
 166:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_Enable
 168:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 169:Generated_Source\PSoC5/EchoTimer.c **** *
 170:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 171:Generated_Source\PSoC5/EchoTimer.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/EchoTimer.c **** *
 173:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 174:Generated_Source\PSoC5/EchoTimer.c **** *  void
 175:Generated_Source\PSoC5/EchoTimer.c **** *
 176:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 177:Generated_Source\PSoC5/EchoTimer.c **** *  void
 178:Generated_Source\PSoC5/EchoTimer.c **** *
 179:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_Enable(void) 
 181:Generated_Source\PSoC5/EchoTimer.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:Generated_Source\PSoC5/EchoTimer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/EchoTimer.c ****     #if (EchoTimer_UsingFixedFunction)
 184:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_GLOBAL_ENABLE |= EchoTimer_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_GLOBAL_STBY_ENABLE |= EchoTimer_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/EchoTimer.c **** 
 188:Generated_Source\PSoC5/EchoTimer.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/EchoTimer.c ****     #if (!EchoTimer_UDB_CONTROL_REG_REMOVED || EchoTimer_UsingFixedFunction)
 190:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CONTROL |= EchoTimer_CTRL_ENABLE;
  33              		.loc 1 190 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 5


  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 7F640040 		.word	1073767551
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	EchoTimer_Enable, .-EchoTimer_Enable
  46              		.section	.text.EchoTimer_Stop,"ax",%progbits
  47              		.align	1
  48              		.global	EchoTimer_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	EchoTimer_Stop, %function
  52              	EchoTimer_Stop:
  53              	.LFB3:
 191:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/EchoTimer.c **** }
 193:Generated_Source\PSoC5/EchoTimer.c **** 
 194:Generated_Source\PSoC5/EchoTimer.c **** 
 195:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_Start
 197:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 198:Generated_Source\PSoC5/EchoTimer.c **** *
 199:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 200:Generated_Source\PSoC5/EchoTimer.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/EchoTimer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/EchoTimer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/EchoTimer.c **** *
 204:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 205:Generated_Source\PSoC5/EchoTimer.c **** *  void
 206:Generated_Source\PSoC5/EchoTimer.c **** *
 207:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 208:Generated_Source\PSoC5/EchoTimer.c **** *  void
 209:Generated_Source\PSoC5/EchoTimer.c **** *
 210:Generated_Source\PSoC5/EchoTimer.c **** * Global variables:
 211:Generated_Source\PSoC5/EchoTimer.c **** *  EchoTimer_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/EchoTimer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/EchoTimer.c **** *
 214:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_Start(void) 
 216:Generated_Source\PSoC5/EchoTimer.c **** {
 217:Generated_Source\PSoC5/EchoTimer.c ****     if(EchoTimer_initVar == 0u)
 218:Generated_Source\PSoC5/EchoTimer.c ****     {
 219:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_Init();
 220:Generated_Source\PSoC5/EchoTimer.c **** 
 221:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/EchoTimer.c ****     }
 223:Generated_Source\PSoC5/EchoTimer.c **** 
 224:Generated_Source\PSoC5/EchoTimer.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/EchoTimer.c ****     EchoTimer_Enable();
 226:Generated_Source\PSoC5/EchoTimer.c **** }
 227:Generated_Source\PSoC5/EchoTimer.c **** 
 228:Generated_Source\PSoC5/EchoTimer.c **** 
 229:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_Stop
 231:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 232:Generated_Source\PSoC5/EchoTimer.c **** *
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 6


 233:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 234:Generated_Source\PSoC5/EchoTimer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/EchoTimer.c **** *  interrupts.
 236:Generated_Source\PSoC5/EchoTimer.c **** *
 237:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 238:Generated_Source\PSoC5/EchoTimer.c **** *  void
 239:Generated_Source\PSoC5/EchoTimer.c **** *
 240:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 241:Generated_Source\PSoC5/EchoTimer.c **** *  void
 242:Generated_Source\PSoC5/EchoTimer.c **** *
 243:Generated_Source\PSoC5/EchoTimer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/EchoTimer.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/EchoTimer.c **** *
 246:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_Stop(void) 
 248:Generated_Source\PSoC5/EchoTimer.c **** {
  54              		.loc 1 248 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 249:Generated_Source\PSoC5/EchoTimer.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/EchoTimer.c ****     #if(!EchoTimer_UDB_CONTROL_REG_REMOVED || EchoTimer_UsingFixedFunction)
 251:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CONTROL &= ((uint8)(~EchoTimer_CTRL_ENABLE));
  59              		.loc 1 251 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 7F640040 		.word	1073767551
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	EchoTimer_Stop, .-EchoTimer_Stop
  72              		.section	.text.EchoTimer_SetInterruptMode,"ax",%progbits
  73              		.align	1
  74              		.global	EchoTimer_SetInterruptMode
  75              		.thumb
  76              		.thumb_func
  77              		.type	EchoTimer_SetInterruptMode, %function
  78              	EchoTimer_SetInterruptMode:
  79              	.LFB4:
 252:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/EchoTimer.c **** 
 254:Generated_Source\PSoC5/EchoTimer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/EchoTimer.c ****     #if (EchoTimer_UsingFixedFunction)
 256:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_GLOBAL_ENABLE &= ((uint8)(~EchoTimer_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_GLOBAL_STBY_ENABLE &= ((uint8)(~EchoTimer_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/EchoTimer.c **** }
 260:Generated_Source\PSoC5/EchoTimer.c **** 
 261:Generated_Source\PSoC5/EchoTimer.c **** 
 262:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_SetInterruptMode
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 7


 264:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 265:Generated_Source\PSoC5/EchoTimer.c **** *
 266:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 267:Generated_Source\PSoC5/EchoTimer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/EchoTimer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/EchoTimer.c **** *  be selected.
 270:Generated_Source\PSoC5/EchoTimer.c **** *
 271:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 272:Generated_Source\PSoC5/EchoTimer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/EchoTimer.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/EchoTimer.c **** *
 275:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 276:Generated_Source\PSoC5/EchoTimer.c **** *  void
 277:Generated_Source\PSoC5/EchoTimer.c **** *
 278:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/EchoTimer.c **** {
  80              		.loc 1 280 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 281:Generated_Source\PSoC5/EchoTimer.c ****     EchoTimer_STATUS_MASK = interruptMode;
  86              		.loc 1 281 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 8E640040 		.word	1073767566
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	EchoTimer_SetInterruptMode, .-EchoTimer_SetInterruptMode
  97              		.section	.text.EchoTimer_SoftwareCapture,"ax",%progbits
  98              		.align	1
  99              		.global	EchoTimer_SoftwareCapture
 100              		.thumb
 101              		.thumb_func
 102              		.type	EchoTimer_SoftwareCapture, %function
 103              	EchoTimer_SoftwareCapture:
 104              	.LFB5:
 282:Generated_Source\PSoC5/EchoTimer.c **** }
 283:Generated_Source\PSoC5/EchoTimer.c **** 
 284:Generated_Source\PSoC5/EchoTimer.c **** 
 285:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_SoftwareCapture
 287:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 288:Generated_Source\PSoC5/EchoTimer.c **** *
 289:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 290:Generated_Source\PSoC5/EchoTimer.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/EchoTimer.c **** *
 292:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 293:Generated_Source\PSoC5/EchoTimer.c **** *  void
 294:Generated_Source\PSoC5/EchoTimer.c **** *
 295:Generated_Source\PSoC5/EchoTimer.c **** * Return:
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 8


 296:Generated_Source\PSoC5/EchoTimer.c **** *  void
 297:Generated_Source\PSoC5/EchoTimer.c **** *
 298:Generated_Source\PSoC5/EchoTimer.c **** * Side Effects:
 299:Generated_Source\PSoC5/EchoTimer.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/EchoTimer.c **** *
 301:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/EchoTimer.c **** {
 105              		.loc 1 303 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 304:Generated_Source\PSoC5/EchoTimer.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/EchoTimer.c ****     #if(EchoTimer_UsingFixedFunction)
 306:Generated_Source\PSoC5/EchoTimer.c ****         (void)CY_GET_REG16(EchoTimer_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/EchoTimer.c ****     #else
 308:Generated_Source\PSoC5/EchoTimer.c ****         (void)CY_GET_REG8(EchoTimer_COUNTER_LSB_PTR_8BIT);
 110              		.loc 1 308 0
 111 0000 014B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 0004 7047     		bx	lr
 114              	.L12:
 115 0006 00BF     		.align	2
 116              	.L11:
 117 0008 0C640040 		.word	1073767436
 118              		.cfi_endproc
 119              	.LFE5:
 120              		.size	EchoTimer_SoftwareCapture, .-EchoTimer_SoftwareCapture
 121              		.section	.text.EchoTimer_ReadStatusRegister,"ax",%progbits
 122              		.align	1
 123              		.global	EchoTimer_ReadStatusRegister
 124              		.thumb
 125              		.thumb_func
 126              		.type	EchoTimer_ReadStatusRegister, %function
 127              	EchoTimer_ReadStatusRegister:
 128              	.LFB6:
 309:Generated_Source\PSoC5/EchoTimer.c ****     #endif/* (EchoTimer_UsingFixedFunction) */
 310:Generated_Source\PSoC5/EchoTimer.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/EchoTimer.c **** }
 312:Generated_Source\PSoC5/EchoTimer.c **** 
 313:Generated_Source\PSoC5/EchoTimer.c **** 
 314:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_ReadStatusRegister
 316:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 317:Generated_Source\PSoC5/EchoTimer.c **** *
 318:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 319:Generated_Source\PSoC5/EchoTimer.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/EchoTimer.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/EchoTimer.c **** *  be permuteable.
 322:Generated_Source\PSoC5/EchoTimer.c **** *
 323:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 324:Generated_Source\PSoC5/EchoTimer.c **** *  void
 325:Generated_Source\PSoC5/EchoTimer.c **** *
 326:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 327:Generated_Source\PSoC5/EchoTimer.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/EchoTimer.c **** *
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 9


 329:Generated_Source\PSoC5/EchoTimer.c **** * Side Effects:
 330:Generated_Source\PSoC5/EchoTimer.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/EchoTimer.c **** *
 332:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/EchoTimer.c **** uint8   EchoTimer_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/EchoTimer.c **** {
 129              		.loc 1 334 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 335:Generated_Source\PSoC5/EchoTimer.c ****     return (EchoTimer_STATUS);
 134              		.loc 1 335 0
 135 0000 014B     		ldr	r3, .L14
 136 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/EchoTimer.c **** }
 137              		.loc 1 336 0
 138 0004 7047     		bx	lr
 139              	.L15:
 140 0006 00BF     		.align	2
 141              	.L14:
 142 0008 6E640040 		.word	1073767534
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	EchoTimer_ReadStatusRegister, .-EchoTimer_ReadStatusRegister
 146              		.section	.text.EchoTimer_ReadControlRegister,"ax",%progbits
 147              		.align	1
 148              		.global	EchoTimer_ReadControlRegister
 149              		.thumb
 150              		.thumb_func
 151              		.type	EchoTimer_ReadControlRegister, %function
 152              	EchoTimer_ReadControlRegister:
 153              	.LFB7:
 337:Generated_Source\PSoC5/EchoTimer.c **** 
 338:Generated_Source\PSoC5/EchoTimer.c **** 
 339:Generated_Source\PSoC5/EchoTimer.c **** #if (!EchoTimer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/EchoTimer.c **** 
 341:Generated_Source\PSoC5/EchoTimer.c **** 
 342:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_ReadControlRegister
 344:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 345:Generated_Source\PSoC5/EchoTimer.c **** *
 346:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 347:Generated_Source\PSoC5/EchoTimer.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/EchoTimer.c **** *
 349:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 350:Generated_Source\PSoC5/EchoTimer.c **** *  void
 351:Generated_Source\PSoC5/EchoTimer.c **** *
 352:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 353:Generated_Source\PSoC5/EchoTimer.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/EchoTimer.c **** *
 355:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/EchoTimer.c **** uint8 EchoTimer_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/EchoTimer.c **** {
 154              		.loc 1 357 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 10


 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 358:Generated_Source\PSoC5/EchoTimer.c ****     #if (!EchoTimer_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/EchoTimer.c ****         return ((uint8)EchoTimer_CONTROL);
 159              		.loc 1 359 0
 160 0000 014B     		ldr	r3, .L17
 161 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:Generated_Source\PSoC5/EchoTimer.c ****     #else
 361:Generated_Source\PSoC5/EchoTimer.c ****         return (0);
 362:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* (!EchoTimer_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/EchoTimer.c **** }
 162              		.loc 1 363 0
 163 0004 7047     		bx	lr
 164              	.L18:
 165 0006 00BF     		.align	2
 166              	.L17:
 167 0008 7F640040 		.word	1073767551
 168              		.cfi_endproc
 169              	.LFE7:
 170              		.size	EchoTimer_ReadControlRegister, .-EchoTimer_ReadControlRegister
 171              		.section	.text.EchoTimer_WriteControlRegister,"ax",%progbits
 172              		.align	1
 173              		.global	EchoTimer_WriteControlRegister
 174              		.thumb
 175              		.thumb_func
 176              		.type	EchoTimer_WriteControlRegister, %function
 177              	EchoTimer_WriteControlRegister:
 178              	.LFB8:
 364:Generated_Source\PSoC5/EchoTimer.c **** 
 365:Generated_Source\PSoC5/EchoTimer.c **** 
 366:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_WriteControlRegister
 368:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 369:Generated_Source\PSoC5/EchoTimer.c **** *
 370:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 371:Generated_Source\PSoC5/EchoTimer.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/EchoTimer.c **** *
 373:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 374:Generated_Source\PSoC5/EchoTimer.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/EchoTimer.c **** *
 376:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 377:Generated_Source\PSoC5/EchoTimer.c **** *
 378:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/EchoTimer.c **** {
 179              		.loc 1 380 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL1:
 381:Generated_Source\PSoC5/EchoTimer.c ****     #if (!EchoTimer_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CONTROL = control;
 185              		.loc 1 382 0
 186 0000 014B     		ldr	r3, .L20
 187 0002 1870     		strb	r0, [r3]
 188 0004 7047     		bx	lr
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 11


 189              	.L21:
 190 0006 00BF     		.align	2
 191              	.L20:
 192 0008 7F640040 		.word	1073767551
 193              		.cfi_endproc
 194              	.LFE8:
 195              		.size	EchoTimer_WriteControlRegister, .-EchoTimer_WriteControlRegister
 196              		.section	.text.EchoTimer_ReadPeriod,"ax",%progbits
 197              		.align	1
 198              		.global	EchoTimer_ReadPeriod
 199              		.thumb
 200              		.thumb_func
 201              		.type	EchoTimer_ReadPeriod, %function
 202              	EchoTimer_ReadPeriod:
 203              	.LFB9:
 383:Generated_Source\PSoC5/EchoTimer.c ****     #else
 384:Generated_Source\PSoC5/EchoTimer.c ****         control = 0u;
 385:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* (!EchoTimer_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/EchoTimer.c **** }
 387:Generated_Source\PSoC5/EchoTimer.c **** 
 388:Generated_Source\PSoC5/EchoTimer.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/EchoTimer.c **** 
 390:Generated_Source\PSoC5/EchoTimer.c **** 
 391:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_ReadPeriod
 393:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 394:Generated_Source\PSoC5/EchoTimer.c **** *
 395:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 396:Generated_Source\PSoC5/EchoTimer.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/EchoTimer.c **** *
 398:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 399:Generated_Source\PSoC5/EchoTimer.c **** *  void
 400:Generated_Source\PSoC5/EchoTimer.c **** *
 401:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 402:Generated_Source\PSoC5/EchoTimer.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/EchoTimer.c **** *
 404:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/EchoTimer.c **** uint32 EchoTimer_ReadPeriod(void) 
 406:Generated_Source\PSoC5/EchoTimer.c **** {
 204              		.loc 1 406 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 407:Generated_Source\PSoC5/EchoTimer.c ****    #if(EchoTimer_UsingFixedFunction)
 408:Generated_Source\PSoC5/EchoTimer.c ****        return ((uint32)CY_GET_REG16(EchoTimer_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/EchoTimer.c ****    #else
 410:Generated_Source\PSoC5/EchoTimer.c ****        return (CY_GET_REG24(EchoTimer_PERIOD_LSB_PTR));
 209              		.loc 1 410 0
 210 0000 024B     		ldr	r3, .L23
 211 0002 1868     		ldr	r0, [r3]
 411:Generated_Source\PSoC5/EchoTimer.c ****    #endif /* (EchoTimer_UsingFixedFunction) */
 412:Generated_Source\PSoC5/EchoTimer.c **** }
 212              		.loc 1 412 0
 213 0004 20F07F40 		bic	r0, r0, #-16777216
 214 0008 7047     		bx	lr
 215              	.L24:
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 12


 216 000a 00BF     		.align	2
 217              	.L23:
 218 000c 2C640040 		.word	1073767468
 219              		.cfi_endproc
 220              	.LFE9:
 221              		.size	EchoTimer_ReadPeriod, .-EchoTimer_ReadPeriod
 222              		.section	.text.EchoTimer_WritePeriod,"ax",%progbits
 223              		.align	1
 224              		.global	EchoTimer_WritePeriod
 225              		.thumb
 226              		.thumb_func
 227              		.type	EchoTimer_WritePeriod, %function
 228              	EchoTimer_WritePeriod:
 229              	.LFB10:
 413:Generated_Source\PSoC5/EchoTimer.c **** 
 414:Generated_Source\PSoC5/EchoTimer.c **** 
 415:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_WritePeriod
 417:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 418:Generated_Source\PSoC5/EchoTimer.c **** *
 419:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 420:Generated_Source\PSoC5/EchoTimer.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/EchoTimer.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/EchoTimer.c **** *
 423:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 424:Generated_Source\PSoC5/EchoTimer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/EchoTimer.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/EchoTimer.c **** *
 427:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 428:Generated_Source\PSoC5/EchoTimer.c **** *  void
 429:Generated_Source\PSoC5/EchoTimer.c **** *
 430:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_WritePeriod(uint32 period) 
 432:Generated_Source\PSoC5/EchoTimer.c **** {
 230              		.loc 1 432 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235              	.LVL2:
 433:Generated_Source\PSoC5/EchoTimer.c ****     #if(EchoTimer_UsingFixedFunction)
 434:Generated_Source\PSoC5/EchoTimer.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/EchoTimer.c ****         CY_SET_REG16(EchoTimer_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/EchoTimer.c ****     #else
 437:Generated_Source\PSoC5/EchoTimer.c ****         CY_SET_REG24(EchoTimer_PERIOD_LSB_PTR, period);
 236              		.loc 1 437 0
 237 0000 0146     		mov	r1, r0
 238 0002 0148     		ldr	r0, .L26
 239              	.LVL3:
 240 0004 FFF7FEBF 		b	CySetReg24
 241              	.LVL4:
 242              	.L27:
 243              		.align	2
 244              	.L26:
 245 0008 2C640040 		.word	1073767468
 246              		.cfi_endproc
 247              	.LFE10:
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 13


 248              		.size	EchoTimer_WritePeriod, .-EchoTimer_WritePeriod
 249              		.section	.text.EchoTimer_ReadCapture,"ax",%progbits
 250              		.align	1
 251              		.global	EchoTimer_ReadCapture
 252              		.thumb
 253              		.thumb_func
 254              		.type	EchoTimer_ReadCapture, %function
 255              	EchoTimer_ReadCapture:
 256              	.LFB11:
 438:Generated_Source\PSoC5/EchoTimer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/EchoTimer.c **** }
 440:Generated_Source\PSoC5/EchoTimer.c **** 
 441:Generated_Source\PSoC5/EchoTimer.c **** 
 442:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_ReadCapture
 444:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 445:Generated_Source\PSoC5/EchoTimer.c **** *
 446:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 447:Generated_Source\PSoC5/EchoTimer.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/EchoTimer.c **** *
 449:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 450:Generated_Source\PSoC5/EchoTimer.c **** *  void
 451:Generated_Source\PSoC5/EchoTimer.c **** *
 452:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 453:Generated_Source\PSoC5/EchoTimer.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/EchoTimer.c **** *
 455:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/EchoTimer.c **** uint32 EchoTimer_ReadCapture(void) 
 457:Generated_Source\PSoC5/EchoTimer.c **** {
 257              		.loc 1 457 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 458:Generated_Source\PSoC5/EchoTimer.c ****    #if(EchoTimer_UsingFixedFunction)
 459:Generated_Source\PSoC5/EchoTimer.c ****        return ((uint32)CY_GET_REG16(EchoTimer_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/EchoTimer.c ****    #else
 461:Generated_Source\PSoC5/EchoTimer.c ****        return (CY_GET_REG24(EchoTimer_CAPTURE_LSB_PTR));
 262              		.loc 1 461 0
 263 0000 024B     		ldr	r3, .L29
 264 0002 1868     		ldr	r0, [r3]
 462:Generated_Source\PSoC5/EchoTimer.c ****    #endif /* (EchoTimer_UsingFixedFunction) */
 463:Generated_Source\PSoC5/EchoTimer.c **** }
 265              		.loc 1 463 0
 266 0004 20F07F40 		bic	r0, r0, #-16777216
 267 0008 7047     		bx	lr
 268              	.L30:
 269 000a 00BF     		.align	2
 270              	.L29:
 271 000c 4C640040 		.word	1073767500
 272              		.cfi_endproc
 273              	.LFE11:
 274              		.size	EchoTimer_ReadCapture, .-EchoTimer_ReadCapture
 275              		.section	.text.EchoTimer_WriteCounter,"ax",%progbits
 276              		.align	1
 277              		.global	EchoTimer_WriteCounter
 278              		.thumb
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 14


 279              		.thumb_func
 280              		.type	EchoTimer_WriteCounter, %function
 281              	EchoTimer_WriteCounter:
 282              	.LFB12:
 464:Generated_Source\PSoC5/EchoTimer.c **** 
 465:Generated_Source\PSoC5/EchoTimer.c **** 
 466:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_WriteCounter
 468:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 469:Generated_Source\PSoC5/EchoTimer.c **** *
 470:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 471:Generated_Source\PSoC5/EchoTimer.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/EchoTimer.c **** *
 473:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 474:Generated_Source\PSoC5/EchoTimer.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/EchoTimer.c **** *
 476:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 477:Generated_Source\PSoC5/EchoTimer.c **** *  void
 478:Generated_Source\PSoC5/EchoTimer.c **** *
 479:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_WriteCounter(uint32 counter) 
 481:Generated_Source\PSoC5/EchoTimer.c **** {
 283              		.loc 1 481 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288              	.LVL5:
 482:Generated_Source\PSoC5/EchoTimer.c ****    #if(EchoTimer_UsingFixedFunction)
 483:Generated_Source\PSoC5/EchoTimer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/EchoTimer.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/EchoTimer.c ****          */
 486:Generated_Source\PSoC5/EchoTimer.c ****         CY_SET_REG16(EchoTimer_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/EchoTimer.c ****         
 488:Generated_Source\PSoC5/EchoTimer.c ****     #else
 489:Generated_Source\PSoC5/EchoTimer.c ****         CY_SET_REG24(EchoTimer_COUNTER_LSB_PTR, counter);
 289              		.loc 1 489 0
 290 0000 0146     		mov	r1, r0
 291 0002 0148     		ldr	r0, .L32
 292              	.LVL6:
 293 0004 FFF7FEBF 		b	CySetReg24
 294              	.LVL7:
 295              	.L33:
 296              		.align	2
 297              	.L32:
 298 0008 0C640040 		.word	1073767436
 299              		.cfi_endproc
 300              	.LFE12:
 301              		.size	EchoTimer_WriteCounter, .-EchoTimer_WriteCounter
 302              		.section	.text.EchoTimer_ReadCounter,"ax",%progbits
 303              		.align	1
 304              		.global	EchoTimer_ReadCounter
 305              		.thumb
 306              		.thumb_func
 307              		.type	EchoTimer_ReadCounter, %function
 308              	EchoTimer_ReadCounter:
 309              	.LFB13:
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 15


 490:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/EchoTimer.c **** }
 492:Generated_Source\PSoC5/EchoTimer.c **** 
 493:Generated_Source\PSoC5/EchoTimer.c **** 
 494:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_ReadCounter
 496:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 497:Generated_Source\PSoC5/EchoTimer.c **** *
 498:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 499:Generated_Source\PSoC5/EchoTimer.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/EchoTimer.c **** *
 501:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 502:Generated_Source\PSoC5/EchoTimer.c **** *  void
 503:Generated_Source\PSoC5/EchoTimer.c **** *
 504:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 505:Generated_Source\PSoC5/EchoTimer.c **** *  Present compare value.
 506:Generated_Source\PSoC5/EchoTimer.c **** *
 507:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/EchoTimer.c **** uint32 EchoTimer_ReadCounter(void) 
 509:Generated_Source\PSoC5/EchoTimer.c **** {
 310              		.loc 1 509 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 510:Generated_Source\PSoC5/EchoTimer.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/EchoTimer.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/EchoTimer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/EchoTimer.c ****     #if(EchoTimer_UsingFixedFunction)
 514:Generated_Source\PSoC5/EchoTimer.c ****         (void)CY_GET_REG16(EchoTimer_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/EchoTimer.c ****     #else
 516:Generated_Source\PSoC5/EchoTimer.c ****         (void)CY_GET_REG8(EchoTimer_COUNTER_LSB_PTR_8BIT);
 315              		.loc 1 516 0
 316 0000 034B     		ldr	r3, .L35
 317 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/EchoTimer.c ****     #endif/* (EchoTimer_UsingFixedFunction) */
 518:Generated_Source\PSoC5/EchoTimer.c **** 
 519:Generated_Source\PSoC5/EchoTimer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/EchoTimer.c ****     #if(EchoTimer_UsingFixedFunction)
 521:Generated_Source\PSoC5/EchoTimer.c ****         return ((uint32)CY_GET_REG16(EchoTimer_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/EchoTimer.c ****     #else
 523:Generated_Source\PSoC5/EchoTimer.c ****         return (CY_GET_REG24(EchoTimer_CAPTURE_LSB_PTR));
 318              		.loc 1 523 0
 319 0004 034B     		ldr	r3, .L35+4
 320 0006 1868     		ldr	r0, [r3]
 524:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* (EchoTimer_UsingFixedFunction) */
 525:Generated_Source\PSoC5/EchoTimer.c **** }
 321              		.loc 1 525 0
 322 0008 20F07F40 		bic	r0, r0, #-16777216
 323 000c 7047     		bx	lr
 324              	.L36:
 325 000e 00BF     		.align	2
 326              	.L35:
 327 0010 0C640040 		.word	1073767436
 328 0014 4C640040 		.word	1073767500
 329              		.cfi_endproc
 330              	.LFE13:
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 16


 331              		.size	EchoTimer_ReadCounter, .-EchoTimer_ReadCounter
 332              		.section	.text.EchoTimer_ClearFIFO,"ax",%progbits
 333              		.align	1
 334              		.global	EchoTimer_ClearFIFO
 335              		.thumb
 336              		.thumb_func
 337              		.type	EchoTimer_ClearFIFO, %function
 338              	EchoTimer_ClearFIFO:
 339              	.LFB14:
 526:Generated_Source\PSoC5/EchoTimer.c **** 
 527:Generated_Source\PSoC5/EchoTimer.c **** 
 528:Generated_Source\PSoC5/EchoTimer.c **** #if(!EchoTimer_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/EchoTimer.c **** 
 530:Generated_Source\PSoC5/EchoTimer.c ****     
 531:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/EchoTimer.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/EchoTimer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/EchoTimer.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/EchoTimer.c **** 
 536:Generated_Source\PSoC5/EchoTimer.c **** 
 537:Generated_Source\PSoC5/EchoTimer.c **** #if (EchoTimer_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/EchoTimer.c **** 
 539:Generated_Source\PSoC5/EchoTimer.c **** 
 540:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_SetCaptureMode
 542:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 543:Generated_Source\PSoC5/EchoTimer.c **** *
 544:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 545:Generated_Source\PSoC5/EchoTimer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/EchoTimer.c **** *
 547:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 548:Generated_Source\PSoC5/EchoTimer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/EchoTimer.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/EchoTimer.c **** *  #define EchoTimer__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/EchoTimer.c **** #define EchoTimer__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/EchoTimer.c **** #define EchoTimer__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/EchoTimer.c **** #define EchoTimer__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/EchoTimer.c **** #define EchoTimer__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/EchoTimer.c ****  identifiers
 556:Generated_Source\PSoC5/EchoTimer.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/EchoTimer.c **** *  EchoTimer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/EchoTimer.c **** *  EchoTimer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/EchoTimer.c **** *  EchoTimer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/EchoTimer.c **** *  EchoTimer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/EchoTimer.c **** *
 562:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 563:Generated_Source\PSoC5/EchoTimer.c **** *  void
 564:Generated_Source\PSoC5/EchoTimer.c **** *
 565:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/EchoTimer.c **** {
 568:Generated_Source\PSoC5/EchoTimer.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/EchoTimer.c ****     captureMode = ((uint8)((uint8)captureMode << EchoTimer_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/EchoTimer.c ****     captureMode &= (EchoTimer_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/EchoTimer.c **** 
 572:Generated_Source\PSoC5/EchoTimer.c ****     #if (!EchoTimer_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/EchoTimer.c ****         /* Clear the Current Setting */
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 17


 574:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CONTROL &= ((uint8)(~EchoTimer_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/EchoTimer.c **** 
 576:Generated_Source\PSoC5/EchoTimer.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* (!EchoTimer_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/EchoTimer.c **** }
 580:Generated_Source\PSoC5/EchoTimer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/EchoTimer.c **** 
 582:Generated_Source\PSoC5/EchoTimer.c **** 
 583:Generated_Source\PSoC5/EchoTimer.c **** #if (EchoTimer_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/EchoTimer.c **** 
 585:Generated_Source\PSoC5/EchoTimer.c **** 
 586:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_SetTriggerMode
 588:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 589:Generated_Source\PSoC5/EchoTimer.c **** *
 590:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 591:Generated_Source\PSoC5/EchoTimer.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/EchoTimer.c **** *
 593:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 594:Generated_Source\PSoC5/EchoTimer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/EchoTimer.c ****     #define EchoTimer__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/EchoTimer.c ****     #define EchoTimer__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/EchoTimer.c ****     #define EchoTimer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/EchoTimer.c ****     #define EchoTimer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/EchoTimer.c ****     #define EchoTimer__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/EchoTimer.c **** *
 601:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 602:Generated_Source\PSoC5/EchoTimer.c **** *  void
 603:Generated_Source\PSoC5/EchoTimer.c **** *
 604:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/EchoTimer.c **** {
 607:Generated_Source\PSoC5/EchoTimer.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/EchoTimer.c ****     triggerMode &= EchoTimer_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/EchoTimer.c **** 
 610:Generated_Source\PSoC5/EchoTimer.c ****     #if (!EchoTimer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed 
 611:Generated_Source\PSoC5/EchoTimer.c ****     
 612:Generated_Source\PSoC5/EchoTimer.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CONTROL &= ((uint8)(~EchoTimer_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/EchoTimer.c **** 
 615:Generated_Source\PSoC5/EchoTimer.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CONTROL |= (triggerMode | EchoTimer__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/EchoTimer.c **** }
 619:Generated_Source\PSoC5/EchoTimer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/EchoTimer.c **** 
 621:Generated_Source\PSoC5/EchoTimer.c **** #if (EchoTimer_EnableTriggerMode)
 622:Generated_Source\PSoC5/EchoTimer.c **** 
 623:Generated_Source\PSoC5/EchoTimer.c **** 
 624:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_EnableTrigger
 626:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 627:Generated_Source\PSoC5/EchoTimer.c **** *
 628:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 629:Generated_Source\PSoC5/EchoTimer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/EchoTimer.c **** *
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 18


 631:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 632:Generated_Source\PSoC5/EchoTimer.c **** *  void
 633:Generated_Source\PSoC5/EchoTimer.c **** *
 634:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 635:Generated_Source\PSoC5/EchoTimer.c **** *  void
 636:Generated_Source\PSoC5/EchoTimer.c **** *
 637:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_EnableTrigger(void) 
 639:Generated_Source\PSoC5/EchoTimer.c **** {
 640:Generated_Source\PSoC5/EchoTimer.c ****     #if (!EchoTimer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed 
 641:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CONTROL |= EchoTimer_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/EchoTimer.c **** }
 644:Generated_Source\PSoC5/EchoTimer.c **** 
 645:Generated_Source\PSoC5/EchoTimer.c **** 
 646:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_DisableTrigger
 648:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 649:Generated_Source\PSoC5/EchoTimer.c **** *
 650:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 651:Generated_Source\PSoC5/EchoTimer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/EchoTimer.c **** *
 653:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 654:Generated_Source\PSoC5/EchoTimer.c **** *  void
 655:Generated_Source\PSoC5/EchoTimer.c **** *
 656:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 657:Generated_Source\PSoC5/EchoTimer.c **** *  void
 658:Generated_Source\PSoC5/EchoTimer.c **** *
 659:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_DisableTrigger(void) 
 661:Generated_Source\PSoC5/EchoTimer.c **** {
 662:Generated_Source\PSoC5/EchoTimer.c ****     #if (!EchoTimer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed
 663:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CONTROL &= ((uint8)(~EchoTimer_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/EchoTimer.c **** }
 666:Generated_Source\PSoC5/EchoTimer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/EchoTimer.c **** 
 668:Generated_Source\PSoC5/EchoTimer.c **** #if(EchoTimer_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/EchoTimer.c **** 
 670:Generated_Source\PSoC5/EchoTimer.c **** 
 671:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_SetInterruptCount
 673:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 674:Generated_Source\PSoC5/EchoTimer.c **** *
 675:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 676:Generated_Source\PSoC5/EchoTimer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/EchoTimer.c **** *
 678:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 679:Generated_Source\PSoC5/EchoTimer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/EchoTimer.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/EchoTimer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/EchoTimer.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/EchoTimer.c **** *
 684:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 685:Generated_Source\PSoC5/EchoTimer.c **** *  void
 686:Generated_Source\PSoC5/EchoTimer.c **** *
 687:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 19


 688:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/EchoTimer.c **** {
 690:Generated_Source\PSoC5/EchoTimer.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/EchoTimer.c ****     interruptCount &= EchoTimer_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/EchoTimer.c **** 
 693:Generated_Source\PSoC5/EchoTimer.c ****     #if (!EchoTimer_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/EchoTimer.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CONTROL &= ((uint8)(~EchoTimer_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/EchoTimer.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/EchoTimer.c ****         EchoTimer_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* (!EchoTimer_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/EchoTimer.c **** }
 700:Generated_Source\PSoC5/EchoTimer.c **** #endif /* EchoTimer_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/EchoTimer.c **** 
 702:Generated_Source\PSoC5/EchoTimer.c **** 
 703:Generated_Source\PSoC5/EchoTimer.c **** #if (EchoTimer_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/EchoTimer.c **** 
 705:Generated_Source\PSoC5/EchoTimer.c **** 
 706:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_SetCaptureCount
 708:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 709:Generated_Source\PSoC5/EchoTimer.c **** *
 710:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 711:Generated_Source\PSoC5/EchoTimer.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/EchoTimer.c **** *
 713:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 714:Generated_Source\PSoC5/EchoTimer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/EchoTimer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/EchoTimer.c **** *                captures.
 717:Generated_Source\PSoC5/EchoTimer.c **** *
 718:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 719:Generated_Source\PSoC5/EchoTimer.c **** *  void
 720:Generated_Source\PSoC5/EchoTimer.c **** *
 721:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/EchoTimer.c **** {
 724:Generated_Source\PSoC5/EchoTimer.c ****     EchoTimer_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/EchoTimer.c **** }
 726:Generated_Source\PSoC5/EchoTimer.c **** 
 727:Generated_Source\PSoC5/EchoTimer.c **** 
 728:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_ReadCaptureCount
 730:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 731:Generated_Source\PSoC5/EchoTimer.c **** *
 732:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 733:Generated_Source\PSoC5/EchoTimer.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/EchoTimer.c **** *
 735:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 736:Generated_Source\PSoC5/EchoTimer.c **** *  void
 737:Generated_Source\PSoC5/EchoTimer.c **** *
 738:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 739:Generated_Source\PSoC5/EchoTimer.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/EchoTimer.c **** *
 741:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/EchoTimer.c **** uint8 EchoTimer_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/EchoTimer.c **** {
 744:Generated_Source\PSoC5/EchoTimer.c ****     return ((uint8)EchoTimer_CAP_COUNT);
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 20


 745:Generated_Source\PSoC5/EchoTimer.c **** }
 746:Generated_Source\PSoC5/EchoTimer.c **** #endif /* EchoTimer_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/EchoTimer.c **** 
 748:Generated_Source\PSoC5/EchoTimer.c **** 
 749:Generated_Source\PSoC5/EchoTimer.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/EchoTimer.c **** * Function Name: EchoTimer_ClearFIFO
 751:Generated_Source\PSoC5/EchoTimer.c **** ********************************************************************************
 752:Generated_Source\PSoC5/EchoTimer.c **** *
 753:Generated_Source\PSoC5/EchoTimer.c **** * Summary:
 754:Generated_Source\PSoC5/EchoTimer.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/EchoTimer.c **** *
 756:Generated_Source\PSoC5/EchoTimer.c **** * Parameters:
 757:Generated_Source\PSoC5/EchoTimer.c **** *  void
 758:Generated_Source\PSoC5/EchoTimer.c **** *
 759:Generated_Source\PSoC5/EchoTimer.c **** * Return:
 760:Generated_Source\PSoC5/EchoTimer.c **** *  void
 761:Generated_Source\PSoC5/EchoTimer.c **** *
 762:Generated_Source\PSoC5/EchoTimer.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/EchoTimer.c **** void EchoTimer_ClearFIFO(void) 
 764:Generated_Source\PSoC5/EchoTimer.c **** {
 340              		.loc 1 764 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344 0000 08B5     		push	{r3, lr}
 345              		.cfi_def_cfa_offset 8
 346              		.cfi_offset 3, -8
 347              		.cfi_offset 14, -4
 348              	.LBB6:
 349              	.LBB7:
 335:Generated_Source\PSoC5/EchoTimer.c **** }
 350              		.loc 1 335 0
 351 0002 044A     		ldr	r2, .L42
 352              	.L38:
 353 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 354              	.LBE7:
 355              	.LBE6:
 765:Generated_Source\PSoC5/EchoTimer.c ****     while(0u != (EchoTimer_ReadStatusRegister() & EchoTimer_STATUS_FIFONEMP))
 356              		.loc 1 765 0
 357 0006 1B07     		lsls	r3, r3, #28
 358 0008 02D5     		bpl	.L41
 766:Generated_Source\PSoC5/EchoTimer.c ****     {
 767:Generated_Source\PSoC5/EchoTimer.c ****         (void)EchoTimer_ReadCapture();
 359              		.loc 1 767 0
 360 000a FFF7FEFF 		bl	EchoTimer_ReadCapture
 361              	.LVL8:
 362 000e F9E7     		b	.L38
 363              	.L41:
 768:Generated_Source\PSoC5/EchoTimer.c ****     }
 769:Generated_Source\PSoC5/EchoTimer.c **** }
 364              		.loc 1 769 0
 365 0010 08BD     		pop	{r3, pc}
 366              	.L43:
 367 0012 00BF     		.align	2
 368              	.L42:
 369 0014 6E640040 		.word	1073767534
 370              		.cfi_endproc
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 21


 371              	.LFE14:
 372              		.size	EchoTimer_ClearFIFO, .-EchoTimer_ClearFIFO
 373              		.section	.text.EchoTimer_Init,"ax",%progbits
 374              		.align	1
 375              		.global	EchoTimer_Init
 376              		.thumb
 377              		.thumb_func
 378              		.type	EchoTimer_Init, %function
 379              	EchoTimer_Init:
 380              	.LFB0:
  44:Generated_Source\PSoC5/EchoTimer.c ****     #if(!EchoTimer_UsingFixedFunction)
 381              		.loc 1 44 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385 0000 10B5     		push	{r4, lr}
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 4, -8
 388              		.cfi_offset 14, -4
 118:Generated_Source\PSoC5/EchoTimer.c ****     EchoTimer_WriteCounter(EchoTimer_INIT_PERIOD);
 389              		.loc 1 118 0
 390 0002 0B4C     		ldr	r4, .L45
 391 0004 2046     		mov	r0, r4
 392 0006 FFF7FEFF 		bl	EchoTimer_WritePeriod
 393              	.LVL9:
 119:Generated_Source\PSoC5/EchoTimer.c **** 
 394              		.loc 1 119 0
 395 000a 2046     		mov	r0, r4
 396 000c FFF7FEFF 		bl	EchoTimer_WriteCounter
 397              	.LVL10:
 142:Generated_Source\PSoC5/EchoTimer.c **** 
 398              		.loc 1 142 0
 399 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 400              	.LVL11:
 145:Generated_Source\PSoC5/EchoTimer.c **** 
 401              		.loc 1 145 0
 402 0014 074A     		ldr	r2, .L45+4
 403 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 404 0018 43F01003 		orr	r3, r3, #16
 405 001c 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/EchoTimer.c **** 
 406              		.loc 1 148 0
 407 001e FFF7FEFF 		bl	CyExitCriticalSection
 408              	.LVL12:
 159:Generated_Source\PSoC5/EchoTimer.c ****     #endif /* Configure additional features of UDB implementation */
 409              		.loc 1 159 0
 410 0022 FFF7FEFF 		bl	EchoTimer_ClearFIFO
 411              	.LVL13:
 412              	.LBB8:
 413              	.LBB9:
 281:Generated_Source\PSoC5/EchoTimer.c **** }
 414              		.loc 1 281 0
 415 0026 044B     		ldr	r3, .L45+8
 416 0028 0022     		movs	r2, #0
 417 002a 1A70     		strb	r2, [r3]
 418              	.LVL14:
 419 002c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 22


 420              	.L46:
 421 002e 00BF     		.align	2
 422              	.L45:
 423 0030 9F860100 		.word	99999
 424 0034 9E640040 		.word	1073767582
 425 0038 8E640040 		.word	1073767566
 426              	.LBE9:
 427              	.LBE8:
 428              		.cfi_endproc
 429              	.LFE0:
 430              		.size	EchoTimer_Init, .-EchoTimer_Init
 431              		.section	.text.EchoTimer_Start,"ax",%progbits
 432              		.align	1
 433              		.global	EchoTimer_Start
 434              		.thumb
 435              		.thumb_func
 436              		.type	EchoTimer_Start, %function
 437              	EchoTimer_Start:
 438              	.LFB2:
 216:Generated_Source\PSoC5/EchoTimer.c ****     if(EchoTimer_initVar == 0u)
 439              		.loc 1 216 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 0
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 443 0000 10B5     		push	{r4, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 4, -8
 446              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/EchoTimer.c ****     {
 447              		.loc 1 217 0
 448 0002 054C     		ldr	r4, .L49
 449 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 450 0006 1BB9     		cbnz	r3, .L48
 219:Generated_Source\PSoC5/EchoTimer.c **** 
 451              		.loc 1 219 0
 452 0008 FFF7FEFF 		bl	EchoTimer_Init
 453              	.LVL15:
 221:Generated_Source\PSoC5/EchoTimer.c ****     }
 454              		.loc 1 221 0
 455 000c 0123     		movs	r3, #1
 456 000e 2370     		strb	r3, [r4]
 457              	.L48:
 226:Generated_Source\PSoC5/EchoTimer.c **** 
 458              		.loc 1 226 0
 459 0010 BDE81040 		pop	{r4, lr}
 460              		.cfi_restore 14
 461              		.cfi_restore 4
 462              		.cfi_def_cfa_offset 0
 225:Generated_Source\PSoC5/EchoTimer.c **** }
 463              		.loc 1 225 0
 464 0014 FFF7FEBF 		b	EchoTimer_Enable
 465              	.LVL16:
 466              	.L50:
 467              		.align	2
 468              	.L49:
 469 0018 00000000 		.word	.LANCHOR0
 470              		.cfi_endproc
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 23


 471              	.LFE2:
 472              		.size	EchoTimer_Start, .-EchoTimer_Start
 473              		.global	EchoTimer_initVar
 474              		.bss
 475              		.set	.LANCHOR0,. + 0
 476              		.type	EchoTimer_initVar, %object
 477              		.size	EchoTimer_initVar, 1
 478              	EchoTimer_initVar:
 479 0000 00       		.space	1
 480              		.text
 481              	.Letext0:
 482              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 483              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 484              		.section	.debug_info,"",%progbits
 485              	.Ldebug_info0:
 486 0000 59030000 		.4byte	0x359
 487 0004 0400     		.2byte	0x4
 488 0006 00000000 		.4byte	.Ldebug_abbrev0
 489 000a 04       		.byte	0x4
 490 000b 01       		.uleb128 0x1
 491 000c D8000000 		.4byte	.LASF37
 492 0010 0C       		.byte	0xc
 493 0011 9A020000 		.4byte	.LASF38
 494 0015 CB020000 		.4byte	.LASF39
 495 0019 00000000 		.4byte	.Ldebug_ranges0+0
 496 001d 00000000 		.4byte	0
 497 0021 00000000 		.4byte	.Ldebug_line0
 498 0025 02       		.uleb128 0x2
 499 0026 01       		.byte	0x1
 500 0027 06       		.byte	0x6
 501 0028 32030000 		.4byte	.LASF0
 502 002c 02       		.uleb128 0x2
 503 002d 01       		.byte	0x1
 504 002e 08       		.byte	0x8
 505 002f C5000000 		.4byte	.LASF1
 506 0033 02       		.uleb128 0x2
 507 0034 02       		.byte	0x2
 508 0035 05       		.byte	0x5
 509 0036 FF020000 		.4byte	.LASF2
 510 003a 02       		.uleb128 0x2
 511 003b 02       		.byte	0x2
 512 003c 07       		.byte	0x7
 513 003d 52030000 		.4byte	.LASF3
 514 0041 02       		.uleb128 0x2
 515 0042 04       		.byte	0x4
 516 0043 05       		.byte	0x5
 517 0044 18030000 		.4byte	.LASF4
 518 0048 02       		.uleb128 0x2
 519 0049 04       		.byte	0x4
 520 004a 07       		.byte	0x7
 521 004b 57020000 		.4byte	.LASF5
 522 004f 02       		.uleb128 0x2
 523 0050 08       		.byte	0x8
 524 0051 05       		.byte	0x5
 525 0052 8C020000 		.4byte	.LASF6
 526 0056 02       		.uleb128 0x2
 527 0057 08       		.byte	0x8
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 24


 528 0058 07       		.byte	0x7
 529 0059 AE000000 		.4byte	.LASF7
 530 005d 03       		.uleb128 0x3
 531 005e 04       		.byte	0x4
 532 005f 05       		.byte	0x5
 533 0060 696E7400 		.ascii	"int\000"
 534 0064 02       		.uleb128 0x2
 535 0065 04       		.byte	0x4
 536 0066 07       		.byte	0x7
 537 0067 EA010000 		.4byte	.LASF8
 538 006b 04       		.uleb128 0x4
 539 006c 66010000 		.4byte	.LASF9
 540 0070 02       		.byte	0x2
 541 0071 E401     		.2byte	0x1e4
 542 0073 2C000000 		.4byte	0x2c
 543 0077 04       		.uleb128 0x4
 544 0078 BB010000 		.4byte	.LASF10
 545 007c 02       		.byte	0x2
 546 007d E601     		.2byte	0x1e6
 547 007f 48000000 		.4byte	0x48
 548 0083 02       		.uleb128 0x2
 549 0084 04       		.byte	0x4
 550 0085 04       		.byte	0x4
 551 0086 A0000000 		.4byte	.LASF11
 552 008a 02       		.uleb128 0x2
 553 008b 08       		.byte	0x8
 554 008c 04       		.byte	0x4
 555 008d B4010000 		.4byte	.LASF12
 556 0091 02       		.uleb128 0x2
 557 0092 01       		.byte	0x1
 558 0093 08       		.byte	0x8
 559 0094 21030000 		.4byte	.LASF13
 560 0098 04       		.uleb128 0x4
 561 0099 D3000000 		.4byte	.LASF14
 562 009d 02       		.byte	0x2
 563 009e 8E02     		.2byte	0x28e
 564 00a0 A4000000 		.4byte	0xa4
 565 00a4 05       		.uleb128 0x5
 566 00a5 6B000000 		.4byte	0x6b
 567 00a9 04       		.uleb128 0x4
 568 00aa 00000000 		.4byte	.LASF15
 569 00ae 02       		.byte	0x2
 570 00af 9002     		.2byte	0x290
 571 00b1 B5000000 		.4byte	0xb5
 572 00b5 05       		.uleb128 0x5
 573 00b6 77000000 		.4byte	0x77
 574 00ba 02       		.uleb128 0x2
 575 00bb 08       		.byte	0x8
 576 00bc 04       		.byte	0x4
 577 00bd 26030000 		.4byte	.LASF16
 578 00c1 02       		.uleb128 0x2
 579 00c2 04       		.byte	0x4
 580 00c3 07       		.byte	0x7
 581 00c4 83020000 		.4byte	.LASF17
 582 00c8 06       		.uleb128 0x6
 583 00c9 24020000 		.4byte	.LASF40
 584 00cd 01       		.byte	0x1
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 25


 585 00ce 4D01     		.2byte	0x14d
 586 00d0 6B000000 		.4byte	0x6b
 587 00d4 01       		.byte	0x1
 588 00d5 07       		.uleb128 0x7
 589 00d6 74010000 		.4byte	.LASF41
 590 00da 01       		.byte	0x1
 591 00db 1701     		.2byte	0x117
 592 00dd 01       		.byte	0x1
 593 00de EF000000 		.4byte	0xef
 594 00e2 08       		.uleb128 0x8
 595 00e3 BD020000 		.4byte	.LASF42
 596 00e7 01       		.byte	0x1
 597 00e8 1701     		.2byte	0x117
 598 00ea 6B000000 		.4byte	0x6b
 599 00ee 00       		.byte	0
 600 00ef 09       		.uleb128 0x9
 601 00f0 D9010000 		.4byte	.LASF18
 602 00f4 01       		.byte	0x1
 603 00f5 B4       		.byte	0xb4
 604 00f6 00000000 		.4byte	.LFB1
 605 00fa 10000000 		.4byte	.LFE1-.LFB1
 606 00fe 01       		.uleb128 0x1
 607 00ff 9C       		.byte	0x9c
 608 0100 09       		.uleb128 0x9
 609 0101 09030000 		.4byte	.LASF19
 610 0105 01       		.byte	0x1
 611 0106 F7       		.byte	0xf7
 612 0107 00000000 		.4byte	.LFB3
 613 010b 10000000 		.4byte	.LFE3-.LFB3
 614 010f 01       		.uleb128 0x1
 615 0110 9C       		.byte	0x9c
 616 0111 0A       		.uleb128 0xa
 617 0112 D5000000 		.4byte	0xd5
 618 0116 00000000 		.4byte	.LFB4
 619 011a 0C000000 		.4byte	.LFE4-.LFB4
 620 011e 01       		.uleb128 0x1
 621 011f 9C       		.byte	0x9c
 622 0120 2C010000 		.4byte	0x12c
 623 0124 0B       		.uleb128 0xb
 624 0125 E2000000 		.4byte	0xe2
 625 0129 01       		.uleb128 0x1
 626 012a 50       		.byte	0x50
 627 012b 00       		.byte	0
 628 012c 0C       		.uleb128 0xc
 629 012d 69020000 		.4byte	.LASF20
 630 0131 01       		.byte	0x1
 631 0132 2E01     		.2byte	0x12e
 632 0134 00000000 		.4byte	.LFB5
 633 0138 0C000000 		.4byte	.LFE5-.LFB5
 634 013c 01       		.uleb128 0x1
 635 013d 9C       		.byte	0x9c
 636 013e 0D       		.uleb128 0xd
 637 013f C8000000 		.4byte	0xc8
 638 0143 00000000 		.4byte	.LFB6
 639 0147 0C000000 		.4byte	.LFE6-.LFB6
 640 014b 01       		.uleb128 0x1
 641 014c 9C       		.byte	0x9c
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 26


 642 014d 0E       		.uleb128 0xe
 643 014e 82000000 		.4byte	.LASF21
 644 0152 01       		.byte	0x1
 645 0153 6401     		.2byte	0x164
 646 0155 6B000000 		.4byte	0x6b
 647 0159 00000000 		.4byte	.LFB7
 648 015d 0C000000 		.4byte	.LFE7-.LFB7
 649 0161 01       		.uleb128 0x1
 650 0162 9C       		.byte	0x9c
 651 0163 0F       		.uleb128 0xf
 652 0164 51000000 		.4byte	.LASF23
 653 0168 01       		.byte	0x1
 654 0169 7B01     		.2byte	0x17b
 655 016b 00000000 		.4byte	.LFB8
 656 016f 0C000000 		.4byte	.LFE8-.LFB8
 657 0173 01       		.uleb128 0x1
 658 0174 9C       		.byte	0x9c
 659 0175 88010000 		.4byte	0x188
 660 0179 10       		.uleb128 0x10
 661 017a 6C010000 		.4byte	.LASF25
 662 017e 01       		.byte	0x1
 663 017f 7B01     		.2byte	0x17b
 664 0181 6B000000 		.4byte	0x6b
 665 0185 01       		.uleb128 0x1
 666 0186 50       		.byte	0x50
 667 0187 00       		.byte	0
 668 0188 0E       		.uleb128 0xe
 669 0189 1F000000 		.4byte	.LASF22
 670 018d 01       		.byte	0x1
 671 018e 9501     		.2byte	0x195
 672 0190 77000000 		.4byte	0x77
 673 0194 00000000 		.4byte	.LFB9
 674 0198 10000000 		.4byte	.LFE9-.LFB9
 675 019c 01       		.uleb128 0x1
 676 019d 9C       		.byte	0x9c
 677 019e 0F       		.uleb128 0xf
 678 019f 41020000 		.4byte	.LASF24
 679 01a3 01       		.byte	0x1
 680 01a4 AF01     		.2byte	0x1af
 681 01a6 00000000 		.4byte	.LFB10
 682 01aa 0C000000 		.4byte	.LFE10-.LFB10
 683 01ae 01       		.uleb128 0x1
 684 01af 9C       		.byte	0x9c
 685 01b0 DF010000 		.4byte	0x1df
 686 01b4 11       		.uleb128 0x11
 687 01b5 34000000 		.4byte	.LASF26
 688 01b9 01       		.byte	0x1
 689 01ba AF01     		.2byte	0x1af
 690 01bc 77000000 		.4byte	0x77
 691 01c0 00000000 		.4byte	.LLST0
 692 01c4 12       		.uleb128 0x12
 693 01c5 08000000 		.4byte	.LVL4
 694 01c9 3A030000 		.4byte	0x33a
 695 01cd 13       		.uleb128 0x13
 696 01ce 01       		.uleb128 0x1
 697 01cf 50       		.byte	0x50
 698 01d0 05       		.uleb128 0x5
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 27


 699 01d1 0C       		.byte	0xc
 700 01d2 2C640040 		.4byte	0x4000642c
 701 01d6 13       		.uleb128 0x13
 702 01d7 01       		.uleb128 0x1
 703 01d8 51       		.byte	0x51
 704 01d9 03       		.uleb128 0x3
 705 01da F3       		.byte	0xf3
 706 01db 01       		.uleb128 0x1
 707 01dc 50       		.byte	0x50
 708 01dd 00       		.byte	0
 709 01de 00       		.byte	0
 710 01df 0E       		.uleb128 0xe
 711 01e0 3B000000 		.4byte	.LASF27
 712 01e4 01       		.byte	0x1
 713 01e5 C801     		.2byte	0x1c8
 714 01e7 77000000 		.4byte	0x77
 715 01eb 00000000 		.4byte	.LFB11
 716 01ef 10000000 		.4byte	.LFE11-.LFB11
 717 01f3 01       		.uleb128 0x1
 718 01f4 9C       		.byte	0x9c
 719 01f5 0F       		.uleb128 0xf
 720 01f6 F7010000 		.4byte	.LASF28
 721 01fa 01       		.byte	0x1
 722 01fb E001     		.2byte	0x1e0
 723 01fd 00000000 		.4byte	.LFB12
 724 0201 0C000000 		.4byte	.LFE12-.LFB12
 725 0205 01       		.uleb128 0x1
 726 0206 9C       		.byte	0x9c
 727 0207 36020000 		.4byte	0x236
 728 020b 11       		.uleb128 0x11
 729 020c A6000000 		.4byte	.LASF29
 730 0210 01       		.byte	0x1
 731 0211 E001     		.2byte	0x1e0
 732 0213 77000000 		.4byte	0x77
 733 0217 2C000000 		.4byte	.LLST1
 734 021b 12       		.uleb128 0x12
 735 021c 08000000 		.4byte	.LVL7
 736 0220 3A030000 		.4byte	0x33a
 737 0224 13       		.uleb128 0x13
 738 0225 01       		.uleb128 0x1
 739 0226 50       		.byte	0x50
 740 0227 05       		.uleb128 0x5
 741 0228 0C       		.byte	0xc
 742 0229 0C640040 		.4byte	0x4000640c
 743 022d 13       		.uleb128 0x13
 744 022e 01       		.uleb128 0x1
 745 022f 51       		.byte	0x51
 746 0230 03       		.uleb128 0x3
 747 0231 F3       		.byte	0xf3
 748 0232 01       		.uleb128 0x1
 749 0233 50       		.byte	0x50
 750 0234 00       		.byte	0
 751 0235 00       		.byte	0
 752 0236 0E       		.uleb128 0xe
 753 0237 9E010000 		.4byte	.LASF30
 754 023b 01       		.byte	0x1
 755 023c FC01     		.2byte	0x1fc
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 28


 756 023e 77000000 		.4byte	0x77
 757 0242 00000000 		.4byte	.LFB13
 758 0246 18000000 		.4byte	.LFE13-.LFB13
 759 024a 01       		.uleb128 0x1
 760 024b 9C       		.byte	0x9c
 761 024c 0F       		.uleb128 0xf
 762 024d 3E030000 		.4byte	.LASF31
 763 0251 01       		.byte	0x1
 764 0252 FB02     		.2byte	0x2fb
 765 0254 00000000 		.4byte	.LFB14
 766 0258 18000000 		.4byte	.LFE14-.LFB14
 767 025c 01       		.uleb128 0x1
 768 025d 9C       		.byte	0x9c
 769 025e 7C020000 		.4byte	0x27c
 770 0262 14       		.uleb128 0x14
 771 0263 C8000000 		.4byte	0xc8
 772 0267 02000000 		.4byte	.LBB6
 773 026b 04000000 		.4byte	.LBE6-.LBB6
 774 026f 01       		.byte	0x1
 775 0270 FD02     		.2byte	0x2fd
 776 0272 15       		.uleb128 0x15
 777 0273 0E000000 		.4byte	.LVL8
 778 0277 DF010000 		.4byte	0x1df
 779 027b 00       		.byte	0
 780 027c 16       		.uleb128 0x16
 781 027d 8F010000 		.4byte	.LASF32
 782 0281 01       		.byte	0x1
 783 0282 2B       		.byte	0x2b
 784 0283 00000000 		.4byte	.LFB0
 785 0287 3C000000 		.4byte	.LFE0-.LFB0
 786 028b 01       		.uleb128 0x1
 787 028c 9C       		.byte	0x9c
 788 028d 01030000 		.4byte	0x301
 789 0291 17       		.uleb128 0x17
 790 0292 06000000 		.4byte	.LASF43
 791 0296 01       		.byte	0x1
 792 0297 2F       		.byte	0x2f
 793 0298 6B000000 		.4byte	0x6b
 794 029c 58000000 		.4byte	.LLST2
 795 02a0 18       		.uleb128 0x18
 796 02a1 D5000000 		.4byte	0xd5
 797 02a5 26000000 		.4byte	.LBB8
 798 02a9 16000000 		.4byte	.LBE8-.LBB8
 799 02ad 01       		.byte	0x1
 800 02ae A2       		.byte	0xa2
 801 02af BD020000 		.4byte	0x2bd
 802 02b3 19       		.uleb128 0x19
 803 02b4 E2000000 		.4byte	0xe2
 804 02b8 6B000000 		.4byte	.LLST3
 805 02bc 00       		.byte	0
 806 02bd 1A       		.uleb128 0x1a
 807 02be 0A000000 		.4byte	.LVL9
 808 02c2 9E010000 		.4byte	0x19e
 809 02c6 D1020000 		.4byte	0x2d1
 810 02ca 13       		.uleb128 0x13
 811 02cb 01       		.uleb128 0x1
 812 02cc 50       		.byte	0x50
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 29


 813 02cd 02       		.uleb128 0x2
 814 02ce 74       		.byte	0x74
 815 02cf 00       		.sleb128 0
 816 02d0 00       		.byte	0
 817 02d1 1A       		.uleb128 0x1a
 818 02d2 10000000 		.4byte	.LVL10
 819 02d6 F5010000 		.4byte	0x1f5
 820 02da E5020000 		.4byte	0x2e5
 821 02de 13       		.uleb128 0x13
 822 02df 01       		.uleb128 0x1
 823 02e0 50       		.byte	0x50
 824 02e1 02       		.uleb128 0x2
 825 02e2 74       		.byte	0x74
 826 02e3 00       		.sleb128 0
 827 02e4 00       		.byte	0
 828 02e5 15       		.uleb128 0x15
 829 02e6 14000000 		.4byte	.LVL11
 830 02ea 46030000 		.4byte	0x346
 831 02ee 15       		.uleb128 0x15
 832 02ef 22000000 		.4byte	.LVL12
 833 02f3 51030000 		.4byte	0x351
 834 02f7 15       		.uleb128 0x15
 835 02f8 26000000 		.4byte	.LVL13
 836 02fc 4C020000 		.4byte	0x24c
 837 0300 00       		.byte	0
 838 0301 16       		.uleb128 0x16
 839 0302 65030000 		.4byte	.LASF33
 840 0306 01       		.byte	0x1
 841 0307 D7       		.byte	0xd7
 842 0308 00000000 		.4byte	.LFB2
 843 030c 1C000000 		.4byte	.LFE2-.LFB2
 844 0310 01       		.uleb128 0x1
 845 0311 9C       		.byte	0x9c
 846 0312 29030000 		.4byte	0x329
 847 0316 15       		.uleb128 0x15
 848 0317 0C000000 		.4byte	.LVL15
 849 031b 7C020000 		.4byte	0x27c
 850 031f 1B       		.uleb128 0x1b
 851 0320 18000000 		.4byte	.LVL16
 852 0324 EF000000 		.4byte	0xef
 853 0328 00       		.byte	0
 854 0329 1C       		.uleb128 0x1c
 855 032a 70000000 		.4byte	.LASF44
 856 032e 01       		.byte	0x1
 857 032f 1A       		.byte	0x1a
 858 0330 6B000000 		.4byte	0x6b
 859 0334 05       		.uleb128 0x5
 860 0335 03       		.byte	0x3
 861 0336 00000000 		.4byte	EchoTimer_initVar
 862 033a 1D       		.uleb128 0x1d
 863 033b F4020000 		.4byte	.LASF34
 864 033f F4020000 		.4byte	.LASF34
 865 0343 02       		.byte	0x2
 866 0344 2702     		.2byte	0x227
 867 0346 1E       		.uleb128 0x1e
 868 0347 C2010000 		.4byte	.LASF35
 869 034b C2010000 		.4byte	.LASF35
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 30


 870 034f 03       		.byte	0x3
 871 0350 7D       		.byte	0x7d
 872 0351 1E       		.uleb128 0x1e
 873 0352 0E020000 		.4byte	.LASF36
 874 0356 0E020000 		.4byte	.LASF36
 875 035a 03       		.byte	0x3
 876 035b 7E       		.byte	0x7e
 877 035c 00       		.byte	0
 878              		.section	.debug_abbrev,"",%progbits
 879              	.Ldebug_abbrev0:
 880 0000 01       		.uleb128 0x1
 881 0001 11       		.uleb128 0x11
 882 0002 01       		.byte	0x1
 883 0003 25       		.uleb128 0x25
 884 0004 0E       		.uleb128 0xe
 885 0005 13       		.uleb128 0x13
 886 0006 0B       		.uleb128 0xb
 887 0007 03       		.uleb128 0x3
 888 0008 0E       		.uleb128 0xe
 889 0009 1B       		.uleb128 0x1b
 890 000a 0E       		.uleb128 0xe
 891 000b 55       		.uleb128 0x55
 892 000c 17       		.uleb128 0x17
 893 000d 11       		.uleb128 0x11
 894 000e 01       		.uleb128 0x1
 895 000f 10       		.uleb128 0x10
 896 0010 17       		.uleb128 0x17
 897 0011 00       		.byte	0
 898 0012 00       		.byte	0
 899 0013 02       		.uleb128 0x2
 900 0014 24       		.uleb128 0x24
 901 0015 00       		.byte	0
 902 0016 0B       		.uleb128 0xb
 903 0017 0B       		.uleb128 0xb
 904 0018 3E       		.uleb128 0x3e
 905 0019 0B       		.uleb128 0xb
 906 001a 03       		.uleb128 0x3
 907 001b 0E       		.uleb128 0xe
 908 001c 00       		.byte	0
 909 001d 00       		.byte	0
 910 001e 03       		.uleb128 0x3
 911 001f 24       		.uleb128 0x24
 912 0020 00       		.byte	0
 913 0021 0B       		.uleb128 0xb
 914 0022 0B       		.uleb128 0xb
 915 0023 3E       		.uleb128 0x3e
 916 0024 0B       		.uleb128 0xb
 917 0025 03       		.uleb128 0x3
 918 0026 08       		.uleb128 0x8
 919 0027 00       		.byte	0
 920 0028 00       		.byte	0
 921 0029 04       		.uleb128 0x4
 922 002a 16       		.uleb128 0x16
 923 002b 00       		.byte	0
 924 002c 03       		.uleb128 0x3
 925 002d 0E       		.uleb128 0xe
 926 002e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 31


 927 002f 0B       		.uleb128 0xb
 928 0030 3B       		.uleb128 0x3b
 929 0031 05       		.uleb128 0x5
 930 0032 49       		.uleb128 0x49
 931 0033 13       		.uleb128 0x13
 932 0034 00       		.byte	0
 933 0035 00       		.byte	0
 934 0036 05       		.uleb128 0x5
 935 0037 35       		.uleb128 0x35
 936 0038 00       		.byte	0
 937 0039 49       		.uleb128 0x49
 938 003a 13       		.uleb128 0x13
 939 003b 00       		.byte	0
 940 003c 00       		.byte	0
 941 003d 06       		.uleb128 0x6
 942 003e 2E       		.uleb128 0x2e
 943 003f 00       		.byte	0
 944 0040 3F       		.uleb128 0x3f
 945 0041 19       		.uleb128 0x19
 946 0042 03       		.uleb128 0x3
 947 0043 0E       		.uleb128 0xe
 948 0044 3A       		.uleb128 0x3a
 949 0045 0B       		.uleb128 0xb
 950 0046 3B       		.uleb128 0x3b
 951 0047 05       		.uleb128 0x5
 952 0048 27       		.uleb128 0x27
 953 0049 19       		.uleb128 0x19
 954 004a 49       		.uleb128 0x49
 955 004b 13       		.uleb128 0x13
 956 004c 20       		.uleb128 0x20
 957 004d 0B       		.uleb128 0xb
 958 004e 00       		.byte	0
 959 004f 00       		.byte	0
 960 0050 07       		.uleb128 0x7
 961 0051 2E       		.uleb128 0x2e
 962 0052 01       		.byte	0x1
 963 0053 3F       		.uleb128 0x3f
 964 0054 19       		.uleb128 0x19
 965 0055 03       		.uleb128 0x3
 966 0056 0E       		.uleb128 0xe
 967 0057 3A       		.uleb128 0x3a
 968 0058 0B       		.uleb128 0xb
 969 0059 3B       		.uleb128 0x3b
 970 005a 05       		.uleb128 0x5
 971 005b 27       		.uleb128 0x27
 972 005c 19       		.uleb128 0x19
 973 005d 20       		.uleb128 0x20
 974 005e 0B       		.uleb128 0xb
 975 005f 01       		.uleb128 0x1
 976 0060 13       		.uleb128 0x13
 977 0061 00       		.byte	0
 978 0062 00       		.byte	0
 979 0063 08       		.uleb128 0x8
 980 0064 05       		.uleb128 0x5
 981 0065 00       		.byte	0
 982 0066 03       		.uleb128 0x3
 983 0067 0E       		.uleb128 0xe
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 32


 984 0068 3A       		.uleb128 0x3a
 985 0069 0B       		.uleb128 0xb
 986 006a 3B       		.uleb128 0x3b
 987 006b 05       		.uleb128 0x5
 988 006c 49       		.uleb128 0x49
 989 006d 13       		.uleb128 0x13
 990 006e 00       		.byte	0
 991 006f 00       		.byte	0
 992 0070 09       		.uleb128 0x9
 993 0071 2E       		.uleb128 0x2e
 994 0072 00       		.byte	0
 995 0073 3F       		.uleb128 0x3f
 996 0074 19       		.uleb128 0x19
 997 0075 03       		.uleb128 0x3
 998 0076 0E       		.uleb128 0xe
 999 0077 3A       		.uleb128 0x3a
 1000 0078 0B       		.uleb128 0xb
 1001 0079 3B       		.uleb128 0x3b
 1002 007a 0B       		.uleb128 0xb
 1003 007b 27       		.uleb128 0x27
 1004 007c 19       		.uleb128 0x19
 1005 007d 11       		.uleb128 0x11
 1006 007e 01       		.uleb128 0x1
 1007 007f 12       		.uleb128 0x12
 1008 0080 06       		.uleb128 0x6
 1009 0081 40       		.uleb128 0x40
 1010 0082 18       		.uleb128 0x18
 1011 0083 9742     		.uleb128 0x2117
 1012 0085 19       		.uleb128 0x19
 1013 0086 00       		.byte	0
 1014 0087 00       		.byte	0
 1015 0088 0A       		.uleb128 0xa
 1016 0089 2E       		.uleb128 0x2e
 1017 008a 01       		.byte	0x1
 1018 008b 31       		.uleb128 0x31
 1019 008c 13       		.uleb128 0x13
 1020 008d 11       		.uleb128 0x11
 1021 008e 01       		.uleb128 0x1
 1022 008f 12       		.uleb128 0x12
 1023 0090 06       		.uleb128 0x6
 1024 0091 40       		.uleb128 0x40
 1025 0092 18       		.uleb128 0x18
 1026 0093 9742     		.uleb128 0x2117
 1027 0095 19       		.uleb128 0x19
 1028 0096 01       		.uleb128 0x1
 1029 0097 13       		.uleb128 0x13
 1030 0098 00       		.byte	0
 1031 0099 00       		.byte	0
 1032 009a 0B       		.uleb128 0xb
 1033 009b 05       		.uleb128 0x5
 1034 009c 00       		.byte	0
 1035 009d 31       		.uleb128 0x31
 1036 009e 13       		.uleb128 0x13
 1037 009f 02       		.uleb128 0x2
 1038 00a0 18       		.uleb128 0x18
 1039 00a1 00       		.byte	0
 1040 00a2 00       		.byte	0
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 33


 1041 00a3 0C       		.uleb128 0xc
 1042 00a4 2E       		.uleb128 0x2e
 1043 00a5 00       		.byte	0
 1044 00a6 3F       		.uleb128 0x3f
 1045 00a7 19       		.uleb128 0x19
 1046 00a8 03       		.uleb128 0x3
 1047 00a9 0E       		.uleb128 0xe
 1048 00aa 3A       		.uleb128 0x3a
 1049 00ab 0B       		.uleb128 0xb
 1050 00ac 3B       		.uleb128 0x3b
 1051 00ad 05       		.uleb128 0x5
 1052 00ae 27       		.uleb128 0x27
 1053 00af 19       		.uleb128 0x19
 1054 00b0 11       		.uleb128 0x11
 1055 00b1 01       		.uleb128 0x1
 1056 00b2 12       		.uleb128 0x12
 1057 00b3 06       		.uleb128 0x6
 1058 00b4 40       		.uleb128 0x40
 1059 00b5 18       		.uleb128 0x18
 1060 00b6 9742     		.uleb128 0x2117
 1061 00b8 19       		.uleb128 0x19
 1062 00b9 00       		.byte	0
 1063 00ba 00       		.byte	0
 1064 00bb 0D       		.uleb128 0xd
 1065 00bc 2E       		.uleb128 0x2e
 1066 00bd 00       		.byte	0
 1067 00be 31       		.uleb128 0x31
 1068 00bf 13       		.uleb128 0x13
 1069 00c0 11       		.uleb128 0x11
 1070 00c1 01       		.uleb128 0x1
 1071 00c2 12       		.uleb128 0x12
 1072 00c3 06       		.uleb128 0x6
 1073 00c4 40       		.uleb128 0x40
 1074 00c5 18       		.uleb128 0x18
 1075 00c6 9742     		.uleb128 0x2117
 1076 00c8 19       		.uleb128 0x19
 1077 00c9 00       		.byte	0
 1078 00ca 00       		.byte	0
 1079 00cb 0E       		.uleb128 0xe
 1080 00cc 2E       		.uleb128 0x2e
 1081 00cd 00       		.byte	0
 1082 00ce 3F       		.uleb128 0x3f
 1083 00cf 19       		.uleb128 0x19
 1084 00d0 03       		.uleb128 0x3
 1085 00d1 0E       		.uleb128 0xe
 1086 00d2 3A       		.uleb128 0x3a
 1087 00d3 0B       		.uleb128 0xb
 1088 00d4 3B       		.uleb128 0x3b
 1089 00d5 05       		.uleb128 0x5
 1090 00d6 27       		.uleb128 0x27
 1091 00d7 19       		.uleb128 0x19
 1092 00d8 49       		.uleb128 0x49
 1093 00d9 13       		.uleb128 0x13
 1094 00da 11       		.uleb128 0x11
 1095 00db 01       		.uleb128 0x1
 1096 00dc 12       		.uleb128 0x12
 1097 00dd 06       		.uleb128 0x6
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 34


 1098 00de 40       		.uleb128 0x40
 1099 00df 18       		.uleb128 0x18
 1100 00e0 9742     		.uleb128 0x2117
 1101 00e2 19       		.uleb128 0x19
 1102 00e3 00       		.byte	0
 1103 00e4 00       		.byte	0
 1104 00e5 0F       		.uleb128 0xf
 1105 00e6 2E       		.uleb128 0x2e
 1106 00e7 01       		.byte	0x1
 1107 00e8 3F       		.uleb128 0x3f
 1108 00e9 19       		.uleb128 0x19
 1109 00ea 03       		.uleb128 0x3
 1110 00eb 0E       		.uleb128 0xe
 1111 00ec 3A       		.uleb128 0x3a
 1112 00ed 0B       		.uleb128 0xb
 1113 00ee 3B       		.uleb128 0x3b
 1114 00ef 05       		.uleb128 0x5
 1115 00f0 27       		.uleb128 0x27
 1116 00f1 19       		.uleb128 0x19
 1117 00f2 11       		.uleb128 0x11
 1118 00f3 01       		.uleb128 0x1
 1119 00f4 12       		.uleb128 0x12
 1120 00f5 06       		.uleb128 0x6
 1121 00f6 40       		.uleb128 0x40
 1122 00f7 18       		.uleb128 0x18
 1123 00f8 9742     		.uleb128 0x2117
 1124 00fa 19       		.uleb128 0x19
 1125 00fb 01       		.uleb128 0x1
 1126 00fc 13       		.uleb128 0x13
 1127 00fd 00       		.byte	0
 1128 00fe 00       		.byte	0
 1129 00ff 10       		.uleb128 0x10
 1130 0100 05       		.uleb128 0x5
 1131 0101 00       		.byte	0
 1132 0102 03       		.uleb128 0x3
 1133 0103 0E       		.uleb128 0xe
 1134 0104 3A       		.uleb128 0x3a
 1135 0105 0B       		.uleb128 0xb
 1136 0106 3B       		.uleb128 0x3b
 1137 0107 05       		.uleb128 0x5
 1138 0108 49       		.uleb128 0x49
 1139 0109 13       		.uleb128 0x13
 1140 010a 02       		.uleb128 0x2
 1141 010b 18       		.uleb128 0x18
 1142 010c 00       		.byte	0
 1143 010d 00       		.byte	0
 1144 010e 11       		.uleb128 0x11
 1145 010f 05       		.uleb128 0x5
 1146 0110 00       		.byte	0
 1147 0111 03       		.uleb128 0x3
 1148 0112 0E       		.uleb128 0xe
 1149 0113 3A       		.uleb128 0x3a
 1150 0114 0B       		.uleb128 0xb
 1151 0115 3B       		.uleb128 0x3b
 1152 0116 05       		.uleb128 0x5
 1153 0117 49       		.uleb128 0x49
 1154 0118 13       		.uleb128 0x13
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 35


 1155 0119 02       		.uleb128 0x2
 1156 011a 17       		.uleb128 0x17
 1157 011b 00       		.byte	0
 1158 011c 00       		.byte	0
 1159 011d 12       		.uleb128 0x12
 1160 011e 898201   		.uleb128 0x4109
 1161 0121 01       		.byte	0x1
 1162 0122 11       		.uleb128 0x11
 1163 0123 01       		.uleb128 0x1
 1164 0124 9542     		.uleb128 0x2115
 1165 0126 19       		.uleb128 0x19
 1166 0127 31       		.uleb128 0x31
 1167 0128 13       		.uleb128 0x13
 1168 0129 00       		.byte	0
 1169 012a 00       		.byte	0
 1170 012b 13       		.uleb128 0x13
 1171 012c 8A8201   		.uleb128 0x410a
 1172 012f 00       		.byte	0
 1173 0130 02       		.uleb128 0x2
 1174 0131 18       		.uleb128 0x18
 1175 0132 9142     		.uleb128 0x2111
 1176 0134 18       		.uleb128 0x18
 1177 0135 00       		.byte	0
 1178 0136 00       		.byte	0
 1179 0137 14       		.uleb128 0x14
 1180 0138 1D       		.uleb128 0x1d
 1181 0139 00       		.byte	0
 1182 013a 31       		.uleb128 0x31
 1183 013b 13       		.uleb128 0x13
 1184 013c 11       		.uleb128 0x11
 1185 013d 01       		.uleb128 0x1
 1186 013e 12       		.uleb128 0x12
 1187 013f 06       		.uleb128 0x6
 1188 0140 58       		.uleb128 0x58
 1189 0141 0B       		.uleb128 0xb
 1190 0142 59       		.uleb128 0x59
 1191 0143 05       		.uleb128 0x5
 1192 0144 00       		.byte	0
 1193 0145 00       		.byte	0
 1194 0146 15       		.uleb128 0x15
 1195 0147 898201   		.uleb128 0x4109
 1196 014a 00       		.byte	0
 1197 014b 11       		.uleb128 0x11
 1198 014c 01       		.uleb128 0x1
 1199 014d 31       		.uleb128 0x31
 1200 014e 13       		.uleb128 0x13
 1201 014f 00       		.byte	0
 1202 0150 00       		.byte	0
 1203 0151 16       		.uleb128 0x16
 1204 0152 2E       		.uleb128 0x2e
 1205 0153 01       		.byte	0x1
 1206 0154 3F       		.uleb128 0x3f
 1207 0155 19       		.uleb128 0x19
 1208 0156 03       		.uleb128 0x3
 1209 0157 0E       		.uleb128 0xe
 1210 0158 3A       		.uleb128 0x3a
 1211 0159 0B       		.uleb128 0xb
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 36


 1212 015a 3B       		.uleb128 0x3b
 1213 015b 0B       		.uleb128 0xb
 1214 015c 27       		.uleb128 0x27
 1215 015d 19       		.uleb128 0x19
 1216 015e 11       		.uleb128 0x11
 1217 015f 01       		.uleb128 0x1
 1218 0160 12       		.uleb128 0x12
 1219 0161 06       		.uleb128 0x6
 1220 0162 40       		.uleb128 0x40
 1221 0163 18       		.uleb128 0x18
 1222 0164 9742     		.uleb128 0x2117
 1223 0166 19       		.uleb128 0x19
 1224 0167 01       		.uleb128 0x1
 1225 0168 13       		.uleb128 0x13
 1226 0169 00       		.byte	0
 1227 016a 00       		.byte	0
 1228 016b 17       		.uleb128 0x17
 1229 016c 34       		.uleb128 0x34
 1230 016d 00       		.byte	0
 1231 016e 03       		.uleb128 0x3
 1232 016f 0E       		.uleb128 0xe
 1233 0170 3A       		.uleb128 0x3a
 1234 0171 0B       		.uleb128 0xb
 1235 0172 3B       		.uleb128 0x3b
 1236 0173 0B       		.uleb128 0xb
 1237 0174 49       		.uleb128 0x49
 1238 0175 13       		.uleb128 0x13
 1239 0176 02       		.uleb128 0x2
 1240 0177 17       		.uleb128 0x17
 1241 0178 00       		.byte	0
 1242 0179 00       		.byte	0
 1243 017a 18       		.uleb128 0x18
 1244 017b 1D       		.uleb128 0x1d
 1245 017c 01       		.byte	0x1
 1246 017d 31       		.uleb128 0x31
 1247 017e 13       		.uleb128 0x13
 1248 017f 11       		.uleb128 0x11
 1249 0180 01       		.uleb128 0x1
 1250 0181 12       		.uleb128 0x12
 1251 0182 06       		.uleb128 0x6
 1252 0183 58       		.uleb128 0x58
 1253 0184 0B       		.uleb128 0xb
 1254 0185 59       		.uleb128 0x59
 1255 0186 0B       		.uleb128 0xb
 1256 0187 01       		.uleb128 0x1
 1257 0188 13       		.uleb128 0x13
 1258 0189 00       		.byte	0
 1259 018a 00       		.byte	0
 1260 018b 19       		.uleb128 0x19
 1261 018c 05       		.uleb128 0x5
 1262 018d 00       		.byte	0
 1263 018e 31       		.uleb128 0x31
 1264 018f 13       		.uleb128 0x13
 1265 0190 02       		.uleb128 0x2
 1266 0191 17       		.uleb128 0x17
 1267 0192 00       		.byte	0
 1268 0193 00       		.byte	0
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 37


 1269 0194 1A       		.uleb128 0x1a
 1270 0195 898201   		.uleb128 0x4109
 1271 0198 01       		.byte	0x1
 1272 0199 11       		.uleb128 0x11
 1273 019a 01       		.uleb128 0x1
 1274 019b 31       		.uleb128 0x31
 1275 019c 13       		.uleb128 0x13
 1276 019d 01       		.uleb128 0x1
 1277 019e 13       		.uleb128 0x13
 1278 019f 00       		.byte	0
 1279 01a0 00       		.byte	0
 1280 01a1 1B       		.uleb128 0x1b
 1281 01a2 898201   		.uleb128 0x4109
 1282 01a5 00       		.byte	0
 1283 01a6 11       		.uleb128 0x11
 1284 01a7 01       		.uleb128 0x1
 1285 01a8 9542     		.uleb128 0x2115
 1286 01aa 19       		.uleb128 0x19
 1287 01ab 31       		.uleb128 0x31
 1288 01ac 13       		.uleb128 0x13
 1289 01ad 00       		.byte	0
 1290 01ae 00       		.byte	0
 1291 01af 1C       		.uleb128 0x1c
 1292 01b0 34       		.uleb128 0x34
 1293 01b1 00       		.byte	0
 1294 01b2 03       		.uleb128 0x3
 1295 01b3 0E       		.uleb128 0xe
 1296 01b4 3A       		.uleb128 0x3a
 1297 01b5 0B       		.uleb128 0xb
 1298 01b6 3B       		.uleb128 0x3b
 1299 01b7 0B       		.uleb128 0xb
 1300 01b8 49       		.uleb128 0x49
 1301 01b9 13       		.uleb128 0x13
 1302 01ba 3F       		.uleb128 0x3f
 1303 01bb 19       		.uleb128 0x19
 1304 01bc 02       		.uleb128 0x2
 1305 01bd 18       		.uleb128 0x18
 1306 01be 00       		.byte	0
 1307 01bf 00       		.byte	0
 1308 01c0 1D       		.uleb128 0x1d
 1309 01c1 2E       		.uleb128 0x2e
 1310 01c2 00       		.byte	0
 1311 01c3 3F       		.uleb128 0x3f
 1312 01c4 19       		.uleb128 0x19
 1313 01c5 3C       		.uleb128 0x3c
 1314 01c6 19       		.uleb128 0x19
 1315 01c7 6E       		.uleb128 0x6e
 1316 01c8 0E       		.uleb128 0xe
 1317 01c9 03       		.uleb128 0x3
 1318 01ca 0E       		.uleb128 0xe
 1319 01cb 3A       		.uleb128 0x3a
 1320 01cc 0B       		.uleb128 0xb
 1321 01cd 3B       		.uleb128 0x3b
 1322 01ce 05       		.uleb128 0x5
 1323 01cf 00       		.byte	0
 1324 01d0 00       		.byte	0
 1325 01d1 1E       		.uleb128 0x1e
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 38


 1326 01d2 2E       		.uleb128 0x2e
 1327 01d3 00       		.byte	0
 1328 01d4 3F       		.uleb128 0x3f
 1329 01d5 19       		.uleb128 0x19
 1330 01d6 3C       		.uleb128 0x3c
 1331 01d7 19       		.uleb128 0x19
 1332 01d8 6E       		.uleb128 0x6e
 1333 01d9 0E       		.uleb128 0xe
 1334 01da 03       		.uleb128 0x3
 1335 01db 0E       		.uleb128 0xe
 1336 01dc 3A       		.uleb128 0x3a
 1337 01dd 0B       		.uleb128 0xb
 1338 01de 3B       		.uleb128 0x3b
 1339 01df 0B       		.uleb128 0xb
 1340 01e0 00       		.byte	0
 1341 01e1 00       		.byte	0
 1342 01e2 00       		.byte	0
 1343              		.section	.debug_loc,"",%progbits
 1344              	.Ldebug_loc0:
 1345              	.LLST0:
 1346 0000 00000000 		.4byte	.LVL2
 1347 0004 04000000 		.4byte	.LVL3
 1348 0008 0100     		.2byte	0x1
 1349 000a 50       		.byte	0x50
 1350 000b 04000000 		.4byte	.LVL3
 1351 000f 07000000 		.4byte	.LVL4-1
 1352 0013 0100     		.2byte	0x1
 1353 0015 51       		.byte	0x51
 1354 0016 07000000 		.4byte	.LVL4-1
 1355 001a 0C000000 		.4byte	.LFE10
 1356 001e 0400     		.2byte	0x4
 1357 0020 F3       		.byte	0xf3
 1358 0021 01       		.uleb128 0x1
 1359 0022 50       		.byte	0x50
 1360 0023 9F       		.byte	0x9f
 1361 0024 00000000 		.4byte	0
 1362 0028 00000000 		.4byte	0
 1363              	.LLST1:
 1364 002c 00000000 		.4byte	.LVL5
 1365 0030 04000000 		.4byte	.LVL6
 1366 0034 0100     		.2byte	0x1
 1367 0036 50       		.byte	0x50
 1368 0037 04000000 		.4byte	.LVL6
 1369 003b 07000000 		.4byte	.LVL7-1
 1370 003f 0100     		.2byte	0x1
 1371 0041 51       		.byte	0x51
 1372 0042 07000000 		.4byte	.LVL7-1
 1373 0046 0C000000 		.4byte	.LFE12
 1374 004a 0400     		.2byte	0x4
 1375 004c F3       		.byte	0xf3
 1376 004d 01       		.uleb128 0x1
 1377 004e 50       		.byte	0x50
 1378 004f 9F       		.byte	0x9f
 1379 0050 00000000 		.4byte	0
 1380 0054 00000000 		.4byte	0
 1381              	.LLST2:
 1382 0058 14000000 		.4byte	.LVL11
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 39


 1383 005c 21000000 		.4byte	.LVL12-1
 1384 0060 0100     		.2byte	0x1
 1385 0062 50       		.byte	0x50
 1386 0063 00000000 		.4byte	0
 1387 0067 00000000 		.4byte	0
 1388              	.LLST3:
 1389 006b 26000000 		.4byte	.LVL13
 1390 006f 2C000000 		.4byte	.LVL14
 1391 0073 0200     		.2byte	0x2
 1392 0075 30       		.byte	0x30
 1393 0076 9F       		.byte	0x9f
 1394 0077 00000000 		.4byte	0
 1395 007b 00000000 		.4byte	0
 1396              		.section	.debug_aranges,"",%progbits
 1397 0000 8C000000 		.4byte	0x8c
 1398 0004 0200     		.2byte	0x2
 1399 0006 00000000 		.4byte	.Ldebug_info0
 1400 000a 04       		.byte	0x4
 1401 000b 00       		.byte	0
 1402 000c 0000     		.2byte	0
 1403 000e 0000     		.2byte	0
 1404 0010 00000000 		.4byte	.LFB1
 1405 0014 10000000 		.4byte	.LFE1-.LFB1
 1406 0018 00000000 		.4byte	.LFB3
 1407 001c 10000000 		.4byte	.LFE3-.LFB3
 1408 0020 00000000 		.4byte	.LFB4
 1409 0024 0C000000 		.4byte	.LFE4-.LFB4
 1410 0028 00000000 		.4byte	.LFB5
 1411 002c 0C000000 		.4byte	.LFE5-.LFB5
 1412 0030 00000000 		.4byte	.LFB6
 1413 0034 0C000000 		.4byte	.LFE6-.LFB6
 1414 0038 00000000 		.4byte	.LFB7
 1415 003c 0C000000 		.4byte	.LFE7-.LFB7
 1416 0040 00000000 		.4byte	.LFB8
 1417 0044 0C000000 		.4byte	.LFE8-.LFB8
 1418 0048 00000000 		.4byte	.LFB9
 1419 004c 10000000 		.4byte	.LFE9-.LFB9
 1420 0050 00000000 		.4byte	.LFB10
 1421 0054 0C000000 		.4byte	.LFE10-.LFB10
 1422 0058 00000000 		.4byte	.LFB11
 1423 005c 10000000 		.4byte	.LFE11-.LFB11
 1424 0060 00000000 		.4byte	.LFB12
 1425 0064 0C000000 		.4byte	.LFE12-.LFB12
 1426 0068 00000000 		.4byte	.LFB13
 1427 006c 18000000 		.4byte	.LFE13-.LFB13
 1428 0070 00000000 		.4byte	.LFB14
 1429 0074 18000000 		.4byte	.LFE14-.LFB14
 1430 0078 00000000 		.4byte	.LFB0
 1431 007c 3C000000 		.4byte	.LFE0-.LFB0
 1432 0080 00000000 		.4byte	.LFB2
 1433 0084 1C000000 		.4byte	.LFE2-.LFB2
 1434 0088 00000000 		.4byte	0
 1435 008c 00000000 		.4byte	0
 1436              		.section	.debug_ranges,"",%progbits
 1437              	.Ldebug_ranges0:
 1438 0000 00000000 		.4byte	.LFB1
 1439 0004 10000000 		.4byte	.LFE1
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 40


 1440 0008 00000000 		.4byte	.LFB3
 1441 000c 10000000 		.4byte	.LFE3
 1442 0010 00000000 		.4byte	.LFB4
 1443 0014 0C000000 		.4byte	.LFE4
 1444 0018 00000000 		.4byte	.LFB5
 1445 001c 0C000000 		.4byte	.LFE5
 1446 0020 00000000 		.4byte	.LFB6
 1447 0024 0C000000 		.4byte	.LFE6
 1448 0028 00000000 		.4byte	.LFB7
 1449 002c 0C000000 		.4byte	.LFE7
 1450 0030 00000000 		.4byte	.LFB8
 1451 0034 0C000000 		.4byte	.LFE8
 1452 0038 00000000 		.4byte	.LFB9
 1453 003c 10000000 		.4byte	.LFE9
 1454 0040 00000000 		.4byte	.LFB10
 1455 0044 0C000000 		.4byte	.LFE10
 1456 0048 00000000 		.4byte	.LFB11
 1457 004c 10000000 		.4byte	.LFE11
 1458 0050 00000000 		.4byte	.LFB12
 1459 0054 0C000000 		.4byte	.LFE12
 1460 0058 00000000 		.4byte	.LFB13
 1461 005c 18000000 		.4byte	.LFE13
 1462 0060 00000000 		.4byte	.LFB14
 1463 0064 18000000 		.4byte	.LFE14
 1464 0068 00000000 		.4byte	.LFB0
 1465 006c 3C000000 		.4byte	.LFE0
 1466 0070 00000000 		.4byte	.LFB2
 1467 0074 1C000000 		.4byte	.LFE2
 1468 0078 00000000 		.4byte	0
 1469 007c 00000000 		.4byte	0
 1470              		.section	.debug_line,"",%progbits
 1471              	.Ldebug_line0:
 1472 0000 7A010000 		.section	.debug_str,"MS",%progbits,1
 1472      02005100 
 1472      00000201 
 1472      FB0E0D00 
 1472      01010101 
 1473              	.LASF15:
 1474 0000 72656733 		.ascii	"reg32\000"
 1474      3200
 1475              	.LASF43:
 1476 0006 4563686F 		.ascii	"EchoTimer_interruptState\000"
 1476      54696D65 
 1476      725F696E 
 1476      74657272 
 1476      75707453 
 1477              	.LASF22:
 1478 001f 4563686F 		.ascii	"EchoTimer_ReadPeriod\000"
 1478      54696D65 
 1478      725F5265 
 1478      61645065 
 1478      72696F64 
 1479              	.LASF26:
 1480 0034 70657269 		.ascii	"period\000"
 1480      6F6400
 1481              	.LASF27:
 1482 003b 4563686F 		.ascii	"EchoTimer_ReadCapture\000"
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 41


 1482      54696D65 
 1482      725F5265 
 1482      61644361 
 1482      70747572 
 1483              	.LASF23:
 1484 0051 4563686F 		.ascii	"EchoTimer_WriteControlRegister\000"
 1484      54696D65 
 1484      725F5772 
 1484      69746543 
 1484      6F6E7472 
 1485              	.LASF44:
 1486 0070 4563686F 		.ascii	"EchoTimer_initVar\000"
 1486      54696D65 
 1486      725F696E 
 1486      69745661 
 1486      7200
 1487              	.LASF21:
 1488 0082 4563686F 		.ascii	"EchoTimer_ReadControlRegister\000"
 1488      54696D65 
 1488      725F5265 
 1488      6164436F 
 1488      6E74726F 
 1489              	.LASF11:
 1490 00a0 666C6F61 		.ascii	"float\000"
 1490      7400
 1491              	.LASF29:
 1492 00a6 636F756E 		.ascii	"counter\000"
 1492      74657200 
 1493              	.LASF7:
 1494 00ae 6C6F6E67 		.ascii	"long long unsigned int\000"
 1494      206C6F6E 
 1494      6720756E 
 1494      7369676E 
 1494      65642069 
 1495              	.LASF1:
 1496 00c5 756E7369 		.ascii	"unsigned char\000"
 1496      676E6564 
 1496      20636861 
 1496      7200
 1497              	.LASF14:
 1498 00d3 72656738 		.ascii	"reg8\000"
 1498      00
 1499              	.LASF37:
 1500 00d8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1500      43313120 
 1500      352E342E 
 1500      31203230 
 1500      31363036 
 1501 010b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1501      20726576 
 1501      6973696F 
 1501      6E203233 
 1501      37373135 
 1502 013e 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1502      66756E63 
 1502      74696F6E 
 1502      2D736563 
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 42


 1502      74696F6E 
 1503              	.LASF9:
 1504 0166 75696E74 		.ascii	"uint8\000"
 1504      3800
 1505              	.LASF25:
 1506 016c 636F6E74 		.ascii	"control\000"
 1506      726F6C00 
 1507              	.LASF41:
 1508 0174 4563686F 		.ascii	"EchoTimer_SetInterruptMode\000"
 1508      54696D65 
 1508      725F5365 
 1508      74496E74 
 1508      65727275 
 1509              	.LASF32:
 1510 018f 4563686F 		.ascii	"EchoTimer_Init\000"
 1510      54696D65 
 1510      725F496E 
 1510      697400
 1511              	.LASF30:
 1512 019e 4563686F 		.ascii	"EchoTimer_ReadCounter\000"
 1512      54696D65 
 1512      725F5265 
 1512      6164436F 
 1512      756E7465 
 1513              	.LASF12:
 1514 01b4 646F7562 		.ascii	"double\000"
 1514      6C6500
 1515              	.LASF10:
 1516 01bb 75696E74 		.ascii	"uint32\000"
 1516      333200
 1517              	.LASF35:
 1518 01c2 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1518      74657243 
 1518      72697469 
 1518      63616C53 
 1518      65637469 
 1519              	.LASF18:
 1520 01d9 4563686F 		.ascii	"EchoTimer_Enable\000"
 1520      54696D65 
 1520      725F456E 
 1520      61626C65 
 1520      00
 1521              	.LASF8:
 1522 01ea 756E7369 		.ascii	"unsigned int\000"
 1522      676E6564 
 1522      20696E74 
 1522      00
 1523              	.LASF28:
 1524 01f7 4563686F 		.ascii	"EchoTimer_WriteCounter\000"
 1524      54696D65 
 1524      725F5772 
 1524      69746543 
 1524      6F756E74 
 1525              	.LASF36:
 1526 020e 43794578 		.ascii	"CyExitCriticalSection\000"
 1526      69744372 
 1526      69746963 
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 43


 1526      616C5365 
 1526      6374696F 
 1527              	.LASF40:
 1528 0224 4563686F 		.ascii	"EchoTimer_ReadStatusRegister\000"
 1528      54696D65 
 1528      725F5265 
 1528      61645374 
 1528      61747573 
 1529              	.LASF24:
 1530 0241 4563686F 		.ascii	"EchoTimer_WritePeriod\000"
 1530      54696D65 
 1530      725F5772 
 1530      69746550 
 1530      6572696F 
 1531              	.LASF5:
 1532 0257 6C6F6E67 		.ascii	"long unsigned int\000"
 1532      20756E73 
 1532      69676E65 
 1532      6420696E 
 1532      7400
 1533              	.LASF20:
 1534 0269 4563686F 		.ascii	"EchoTimer_SoftwareCapture\000"
 1534      54696D65 
 1534      725F536F 
 1534      66747761 
 1534      72654361 
 1535              	.LASF17:
 1536 0283 73697A65 		.ascii	"sizetype\000"
 1536      74797065 
 1536      00
 1537              	.LASF6:
 1538 028c 6C6F6E67 		.ascii	"long long int\000"
 1538      206C6F6E 
 1538      6720696E 
 1538      7400
 1539              	.LASF38:
 1540 029a 47656E65 		.ascii	"Generated_Source\\PSoC5\\EchoTimer.c\000"
 1540      72617465 
 1540      645F536F 
 1540      75726365 
 1540      5C50536F 
 1541              	.LASF42:
 1542 02bd 696E7465 		.ascii	"interruptMode\000"
 1542      72727570 
 1542      744D6F64 
 1542      6500
 1543              	.LASF39:
 1544 02cb 453A5C54 		.ascii	"E:\\TRC3500\\WIP4-combo\\BCD\\Design01.cydsn\000"
 1544      52433335 
 1544      30305C57 
 1544      4950342D 
 1544      636F6D62 
 1545              	.LASF34:
 1546 02f4 43795365 		.ascii	"CySetReg24\000"
 1546      74526567 
 1546      323400
 1547              	.LASF2:
ARM GAS  C:\Users\mmoh0006\AppData\Local\Temp\cc0tMKpT.s 			page 44


 1548 02ff 73686F72 		.ascii	"short int\000"
 1548      7420696E 
 1548      7400
 1549              	.LASF19:
 1550 0309 4563686F 		.ascii	"EchoTimer_Stop\000"
 1550      54696D65 
 1550      725F5374 
 1550      6F7000
 1551              	.LASF4:
 1552 0318 6C6F6E67 		.ascii	"long int\000"
 1552      20696E74 
 1552      00
 1553              	.LASF13:
 1554 0321 63686172 		.ascii	"char\000"
 1554      00
 1555              	.LASF16:
 1556 0326 6C6F6E67 		.ascii	"long double\000"
 1556      20646F75 
 1556      626C6500 
 1557              	.LASF0:
 1558 0332 7369676E 		.ascii	"signed char\000"
 1558      65642063 
 1558      68617200 
 1559              	.LASF31:
 1560 033e 4563686F 		.ascii	"EchoTimer_ClearFIFO\000"
 1560      54696D65 
 1560      725F436C 
 1560      65617246 
 1560      49464F00 
 1561              	.LASF3:
 1562 0352 73686F72 		.ascii	"short unsigned int\000"
 1562      7420756E 
 1562      7369676E 
 1562      65642069 
 1562      6E7400
 1563              	.LASF33:
 1564 0365 4563686F 		.ascii	"EchoTimer_Start\000"
 1564      54696D65 
 1564      725F5374 
 1564      61727400 
 1565              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
