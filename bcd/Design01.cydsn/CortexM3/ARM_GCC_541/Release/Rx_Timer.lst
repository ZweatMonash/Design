ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Rx_Timer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Rx_Timer_Enable,"ax",%progbits
  20              		.align	1
  21              		.global	Rx_Timer_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Rx_Timer_Enable, %function
  25              	Rx_Timer_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\Rx_Timer.c"
   1:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Rx_Timer.c **** * File Name: Rx_Timer.c
   3:Generated_Source\PSoC5/Rx_Timer.c **** * Version 2.80
   4:Generated_Source\PSoC5/Rx_Timer.c **** *
   5:Generated_Source\PSoC5/Rx_Timer.c **** * Description:
   6:Generated_Source\PSoC5/Rx_Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/Rx_Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/Rx_Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/Rx_Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/Rx_Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/Rx_Timer.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/Rx_Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/Rx_Timer.c **** *  or a capture event.
  14:Generated_Source\PSoC5/Rx_Timer.c **** *
  15:Generated_Source\PSoC5/Rx_Timer.c **** * Note:
  16:Generated_Source\PSoC5/Rx_Timer.c **** *
  17:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
  18:Generated_Source\PSoC5/Rx_Timer.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Rx_Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Rx_Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Rx_Timer.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Rx_Timer.c **** 
  24:Generated_Source\PSoC5/Rx_Timer.c **** #include "Rx_Timer.h"
  25:Generated_Source\PSoC5/Rx_Timer.c **** 
  26:Generated_Source\PSoC5/Rx_Timer.c **** uint8 Rx_Timer_initVar = 0u;
  27:Generated_Source\PSoC5/Rx_Timer.c **** 
  28:Generated_Source\PSoC5/Rx_Timer.c **** 
  29:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_Init
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 2


  31:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
  32:Generated_Source\PSoC5/Rx_Timer.c **** *
  33:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
  34:Generated_Source\PSoC5/Rx_Timer.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/Rx_Timer.c **** *
  36:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
  37:Generated_Source\PSoC5/Rx_Timer.c **** *  void
  38:Generated_Source\PSoC5/Rx_Timer.c **** *
  39:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
  40:Generated_Source\PSoC5/Rx_Timer.c **** *  void
  41:Generated_Source\PSoC5/Rx_Timer.c **** *
  42:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_Init(void) 
  44:Generated_Source\PSoC5/Rx_Timer.c **** {
  45:Generated_Source\PSoC5/Rx_Timer.c ****     #if(!Rx_Timer_UsingFixedFunction)
  46:Generated_Source\PSoC5/Rx_Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/Rx_Timer.c ****             uint8 Rx_Timer_interruptState;
  48:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/Rx_Timer.c **** 
  50:Generated_Source\PSoC5/Rx_Timer.c ****     #if (Rx_Timer_UsingFixedFunction)
  51:Generated_Source\PSoC5/Rx_Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CONTROL &= Rx_Timer_CTRL_ENABLE;
  53:Generated_Source\PSoC5/Rx_Timer.c **** 
  54:Generated_Source\PSoC5/Rx_Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/Rx_Timer.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/Rx_Timer.c ****             Rx_Timer_CONTROL2 &= ((uint8)(~Rx_Timer_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/Rx_Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/Rx_Timer.c **** 
  59:Generated_Source\PSoC5/Rx_Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/Rx_Timer.c ****             Rx_Timer_CONTROL3 &= ((uint8)(~Rx_Timer_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/Rx_Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/Rx_Timer.c **** 
  63:Generated_Source\PSoC5/Rx_Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/Rx_Timer.c ****         #if (Rx_Timer_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/Rx_Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/Rx_Timer.c ****             Rx_Timer_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/Rx_Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/Rx_Timer.c **** 
  69:Generated_Source\PSoC5/Rx_Timer.c ****         #if (Rx_Timer_RunModeUsed == 2)
  70:Generated_Source\PSoC5/Rx_Timer.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/Rx_Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/Rx_Timer.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/Rx_Timer.c ****                 Rx_Timer_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/Rx_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/Rx_Timer.c **** 
  76:Generated_Source\PSoC5/Rx_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/Rx_Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/Rx_Timer.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/Rx_Timer.c ****                 Rx_Timer_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/Rx_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/Rx_Timer.c **** 
  82:Generated_Source\PSoC5/Rx_Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/Rx_Timer.c **** 
  84:Generated_Source\PSoC5/Rx_Timer.c ****         #if (Rx_Timer_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/Rx_Timer.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/Rx_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/Rx_Timer.c ****                 Rx_Timer_CONTROL2 |= Rx_Timer_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 3


  88:Generated_Source\PSoC5/Rx_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/Rx_Timer.c **** 
  90:Generated_Source\PSoC5/Rx_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/Rx_Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/Rx_Timer.c ****                 Rx_Timer_CONTROL3 &= ((uint8)(~Rx_Timer_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/Rx_Timer.c ****                 Rx_Timer_CONTROL3 |= Rx_Timer_CTRL_RCOD;
  94:Generated_Source\PSoC5/Rx_Timer.c **** 
  95:Generated_Source\PSoC5/Rx_Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/Rx_Timer.c ****                 Rx_Timer_CONTROL3 &= ((uint8)(~Rx_Timer_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/Rx_Timer.c ****                 Rx_Timer_CONTROL3 |= Rx_Timer_CTRL_ENBL;
  98:Generated_Source\PSoC5/Rx_Timer.c **** 
  99:Generated_Source\PSoC5/Rx_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/Rx_Timer.c ****                 Rx_Timer_CONTROL3 |= Rx_Timer_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/Rx_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/Rx_Timer.c **** 
 103:Generated_Source\PSoC5/Rx_Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/Rx_Timer.c **** 
 105:Generated_Source\PSoC5/Rx_Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_RT1 &= ((uint8)(~Rx_Timer_RT1_MASK));
 107:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_RT1 |= Rx_Timer_SYNC;
 108:Generated_Source\PSoC5/Rx_Timer.c **** 
 109:Generated_Source\PSoC5/Rx_Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_RT1 &= ((uint8)(~Rx_Timer_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_RT1 |= Rx_Timer_SYNCDSI_EN;
 112:Generated_Source\PSoC5/Rx_Timer.c **** 
 113:Generated_Source\PSoC5/Rx_Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CONTROL2 |= Rx_Timer_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/Rx_Timer.c **** 
 117:Generated_Source\PSoC5/Rx_Timer.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/Rx_Timer.c ****     Rx_Timer_WritePeriod(Rx_Timer_INIT_PERIOD);
 119:Generated_Source\PSoC5/Rx_Timer.c ****     Rx_Timer_WriteCounter(Rx_Timer_INIT_PERIOD);
 120:Generated_Source\PSoC5/Rx_Timer.c **** 
 121:Generated_Source\PSoC5/Rx_Timer.c ****     #if (Rx_Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CAPTURE_COUNT_CTRL |= Rx_Timer_CNTR_ENABLE;
 123:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_SetCaptureCount(Rx_Timer_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/Rx_Timer.c **** 
 126:Generated_Source\PSoC5/Rx_Timer.c ****     #if (!Rx_Timer_UsingFixedFunction)
 127:Generated_Source\PSoC5/Rx_Timer.c ****         #if (Rx_Timer_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/Rx_Timer.c ****             Rx_Timer_SetCaptureMode(Rx_Timer_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/Rx_Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/Rx_Timer.c **** 
 131:Generated_Source\PSoC5/Rx_Timer.c ****         #if (Rx_Timer_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/Rx_Timer.c ****             #if (!Rx_Timer_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/Rx_Timer.c ****                 if (0u == (Rx_Timer_CONTROL & Rx_Timer__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/Rx_Timer.c ****                 {
 135:Generated_Source\PSoC5/Rx_Timer.c ****                     Rx_Timer_SetTriggerMode(Rx_Timer_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/Rx_Timer.c ****                 }
 137:Generated_Source\PSoC5/Rx_Timer.c ****             #endif /* (!Rx_Timer_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/Rx_Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/Rx_Timer.c **** 
 140:Generated_Source\PSoC5/Rx_Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/Rx_Timer.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/Rx_Timer.c **** 
 144:Generated_Source\PSoC5/Rx_Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 4


 145:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_STATUS_AUX_CTRL |= Rx_Timer_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/Rx_Timer.c **** 
 147:Generated_Source\PSoC5/Rx_Timer.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/Rx_Timer.c ****         CyExitCriticalSection(Rx_Timer_interruptState);
 149:Generated_Source\PSoC5/Rx_Timer.c **** 
 150:Generated_Source\PSoC5/Rx_Timer.c ****         #if (Rx_Timer_EnableTriggerMode)
 151:Generated_Source\PSoC5/Rx_Timer.c ****             Rx_Timer_EnableTrigger();
 152:Generated_Source\PSoC5/Rx_Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/Rx_Timer.c **** 		
 154:Generated_Source\PSoC5/Rx_Timer.c **** 		
 155:Generated_Source\PSoC5/Rx_Timer.c ****         #if (Rx_Timer_InterruptOnCaptureCount && !Rx_Timer_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/Rx_Timer.c ****             Rx_Timer_SetInterruptCount(Rx_Timer_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/Rx_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/Rx_Timer.c **** 
 159:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_ClearFIFO();
 160:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/Rx_Timer.c **** 
 162:Generated_Source\PSoC5/Rx_Timer.c ****     Rx_Timer_SetInterruptMode(Rx_Timer_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/Rx_Timer.c **** }
 164:Generated_Source\PSoC5/Rx_Timer.c **** 
 165:Generated_Source\PSoC5/Rx_Timer.c **** 
 166:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_Enable
 168:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 169:Generated_Source\PSoC5/Rx_Timer.c **** *
 170:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 171:Generated_Source\PSoC5/Rx_Timer.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/Rx_Timer.c **** *
 173:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 174:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 175:Generated_Source\PSoC5/Rx_Timer.c **** *
 176:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 177:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 178:Generated_Source\PSoC5/Rx_Timer.c **** *
 179:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_Enable(void) 
 181:Generated_Source\PSoC5/Rx_Timer.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:Generated_Source\PSoC5/Rx_Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/Rx_Timer.c ****     #if (Rx_Timer_UsingFixedFunction)
 184:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_GLOBAL_ENABLE |= Rx_Timer_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_GLOBAL_STBY_ENABLE |= Rx_Timer_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/Rx_Timer.c **** 
 188:Generated_Source\PSoC5/Rx_Timer.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/Rx_Timer.c ****     #if (!Rx_Timer_UDB_CONTROL_REG_REMOVED || Rx_Timer_UsingFixedFunction)
 190:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CONTROL |= Rx_Timer_CTRL_ENABLE;
  33              		.loc 1 190 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 5


  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 78650040 		.word	1073767800
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	Rx_Timer_Enable, .-Rx_Timer_Enable
  46              		.section	.text.Rx_Timer_Stop,"ax",%progbits
  47              		.align	1
  48              		.global	Rx_Timer_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	Rx_Timer_Stop, %function
  52              	Rx_Timer_Stop:
  53              	.LFB3:
 191:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/Rx_Timer.c **** }
 193:Generated_Source\PSoC5/Rx_Timer.c **** 
 194:Generated_Source\PSoC5/Rx_Timer.c **** 
 195:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_Start
 197:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 198:Generated_Source\PSoC5/Rx_Timer.c **** *
 199:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 200:Generated_Source\PSoC5/Rx_Timer.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/Rx_Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/Rx_Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/Rx_Timer.c **** *
 204:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 205:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 206:Generated_Source\PSoC5/Rx_Timer.c **** *
 207:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 208:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 209:Generated_Source\PSoC5/Rx_Timer.c **** *
 210:Generated_Source\PSoC5/Rx_Timer.c **** * Global variables:
 211:Generated_Source\PSoC5/Rx_Timer.c **** *  Rx_Timer_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/Rx_Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/Rx_Timer.c **** *
 214:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_Start(void) 
 216:Generated_Source\PSoC5/Rx_Timer.c **** {
 217:Generated_Source\PSoC5/Rx_Timer.c ****     if(Rx_Timer_initVar == 0u)
 218:Generated_Source\PSoC5/Rx_Timer.c ****     {
 219:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_Init();
 220:Generated_Source\PSoC5/Rx_Timer.c **** 
 221:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/Rx_Timer.c ****     }
 223:Generated_Source\PSoC5/Rx_Timer.c **** 
 224:Generated_Source\PSoC5/Rx_Timer.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/Rx_Timer.c ****     Rx_Timer_Enable();
 226:Generated_Source\PSoC5/Rx_Timer.c **** }
 227:Generated_Source\PSoC5/Rx_Timer.c **** 
 228:Generated_Source\PSoC5/Rx_Timer.c **** 
 229:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_Stop
 231:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 232:Generated_Source\PSoC5/Rx_Timer.c **** *
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 6


 233:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 234:Generated_Source\PSoC5/Rx_Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/Rx_Timer.c **** *  interrupts.
 236:Generated_Source\PSoC5/Rx_Timer.c **** *
 237:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 238:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 239:Generated_Source\PSoC5/Rx_Timer.c **** *
 240:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 241:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 242:Generated_Source\PSoC5/Rx_Timer.c **** *
 243:Generated_Source\PSoC5/Rx_Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/Rx_Timer.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/Rx_Timer.c **** *
 246:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_Stop(void) 
 248:Generated_Source\PSoC5/Rx_Timer.c **** {
  54              		.loc 1 248 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 249:Generated_Source\PSoC5/Rx_Timer.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/Rx_Timer.c ****     #if(!Rx_Timer_UDB_CONTROL_REG_REMOVED || Rx_Timer_UsingFixedFunction)
 251:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CONTROL &= ((uint8)(~Rx_Timer_CTRL_ENABLE));
  59              		.loc 1 251 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 78650040 		.word	1073767800
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	Rx_Timer_Stop, .-Rx_Timer_Stop
  72              		.section	.text.Rx_Timer_SetInterruptMode,"ax",%progbits
  73              		.align	1
  74              		.global	Rx_Timer_SetInterruptMode
  75              		.thumb
  76              		.thumb_func
  77              		.type	Rx_Timer_SetInterruptMode, %function
  78              	Rx_Timer_SetInterruptMode:
  79              	.LFB4:
 252:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/Rx_Timer.c **** 
 254:Generated_Source\PSoC5/Rx_Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/Rx_Timer.c ****     #if (Rx_Timer_UsingFixedFunction)
 256:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_GLOBAL_ENABLE &= ((uint8)(~Rx_Timer_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~Rx_Timer_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/Rx_Timer.c **** }
 260:Generated_Source\PSoC5/Rx_Timer.c **** 
 261:Generated_Source\PSoC5/Rx_Timer.c **** 
 262:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_SetInterruptMode
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 7


 264:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 265:Generated_Source\PSoC5/Rx_Timer.c **** *
 266:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 267:Generated_Source\PSoC5/Rx_Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/Rx_Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/Rx_Timer.c **** *  be selected.
 270:Generated_Source\PSoC5/Rx_Timer.c **** *
 271:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 272:Generated_Source\PSoC5/Rx_Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/Rx_Timer.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/Rx_Timer.c **** *
 275:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 276:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 277:Generated_Source\PSoC5/Rx_Timer.c **** *
 278:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/Rx_Timer.c **** {
  80              		.loc 1 280 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 281:Generated_Source\PSoC5/Rx_Timer.c ****     Rx_Timer_STATUS_MASK = interruptMode;
  86              		.loc 1 281 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 8B640040 		.word	1073767563
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	Rx_Timer_SetInterruptMode, .-Rx_Timer_SetInterruptMode
  97              		.section	.text.Rx_Timer_SoftwareCapture,"ax",%progbits
  98              		.align	1
  99              		.global	Rx_Timer_SoftwareCapture
 100              		.thumb
 101              		.thumb_func
 102              		.type	Rx_Timer_SoftwareCapture, %function
 103              	Rx_Timer_SoftwareCapture:
 104              	.LFB5:
 282:Generated_Source\PSoC5/Rx_Timer.c **** }
 283:Generated_Source\PSoC5/Rx_Timer.c **** 
 284:Generated_Source\PSoC5/Rx_Timer.c **** 
 285:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_SoftwareCapture
 287:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 288:Generated_Source\PSoC5/Rx_Timer.c **** *
 289:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 290:Generated_Source\PSoC5/Rx_Timer.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/Rx_Timer.c **** *
 292:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 293:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 294:Generated_Source\PSoC5/Rx_Timer.c **** *
 295:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 8


 296:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 297:Generated_Source\PSoC5/Rx_Timer.c **** *
 298:Generated_Source\PSoC5/Rx_Timer.c **** * Side Effects:
 299:Generated_Source\PSoC5/Rx_Timer.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/Rx_Timer.c **** *
 301:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/Rx_Timer.c **** {
 105              		.loc 1 303 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 304:Generated_Source\PSoC5/Rx_Timer.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/Rx_Timer.c ****     #if(Rx_Timer_UsingFixedFunction)
 306:Generated_Source\PSoC5/Rx_Timer.c ****         (void)CY_GET_REG16(Rx_Timer_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/Rx_Timer.c ****     #else
 308:Generated_Source\PSoC5/Rx_Timer.c ****         (void)CY_GET_REG8(Rx_Timer_COUNTER_LSB_PTR_8BIT);
 110              		.loc 1 308 0
 111 0000 014B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 0004 7047     		bx	lr
 114              	.L12:
 115 0006 00BF     		.align	2
 116              	.L11:
 117 0008 08650040 		.word	1073767688
 118              		.cfi_endproc
 119              	.LFE5:
 120              		.size	Rx_Timer_SoftwareCapture, .-Rx_Timer_SoftwareCapture
 121              		.section	.text.Rx_Timer_ReadStatusRegister,"ax",%progbits
 122              		.align	1
 123              		.global	Rx_Timer_ReadStatusRegister
 124              		.thumb
 125              		.thumb_func
 126              		.type	Rx_Timer_ReadStatusRegister, %function
 127              	Rx_Timer_ReadStatusRegister:
 128              	.LFB6:
 309:Generated_Source\PSoC5/Rx_Timer.c ****     #endif/* (Rx_Timer_UsingFixedFunction) */
 310:Generated_Source\PSoC5/Rx_Timer.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/Rx_Timer.c **** }
 312:Generated_Source\PSoC5/Rx_Timer.c **** 
 313:Generated_Source\PSoC5/Rx_Timer.c **** 
 314:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_ReadStatusRegister
 316:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 317:Generated_Source\PSoC5/Rx_Timer.c **** *
 318:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 319:Generated_Source\PSoC5/Rx_Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/Rx_Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/Rx_Timer.c **** *  be permuteable.
 322:Generated_Source\PSoC5/Rx_Timer.c **** *
 323:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 324:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 325:Generated_Source\PSoC5/Rx_Timer.c **** *
 326:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 327:Generated_Source\PSoC5/Rx_Timer.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/Rx_Timer.c **** *
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 9


 329:Generated_Source\PSoC5/Rx_Timer.c **** * Side Effects:
 330:Generated_Source\PSoC5/Rx_Timer.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/Rx_Timer.c **** *
 332:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/Rx_Timer.c **** uint8   Rx_Timer_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/Rx_Timer.c **** {
 129              		.loc 1 334 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 335:Generated_Source\PSoC5/Rx_Timer.c ****     return (Rx_Timer_STATUS);
 134              		.loc 1 335 0
 135 0000 014B     		ldr	r3, .L14
 136 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/Rx_Timer.c **** }
 137              		.loc 1 336 0
 138 0004 7047     		bx	lr
 139              	.L15:
 140 0006 00BF     		.align	2
 141              	.L14:
 142 0008 6B640040 		.word	1073767531
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	Rx_Timer_ReadStatusRegister, .-Rx_Timer_ReadStatusRegister
 146              		.section	.text.Rx_Timer_ReadControlRegister,"ax",%progbits
 147              		.align	1
 148              		.global	Rx_Timer_ReadControlRegister
 149              		.thumb
 150              		.thumb_func
 151              		.type	Rx_Timer_ReadControlRegister, %function
 152              	Rx_Timer_ReadControlRegister:
 153              	.LFB7:
 337:Generated_Source\PSoC5/Rx_Timer.c **** 
 338:Generated_Source\PSoC5/Rx_Timer.c **** 
 339:Generated_Source\PSoC5/Rx_Timer.c **** #if (!Rx_Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/Rx_Timer.c **** 
 341:Generated_Source\PSoC5/Rx_Timer.c **** 
 342:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_ReadControlRegister
 344:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 345:Generated_Source\PSoC5/Rx_Timer.c **** *
 346:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 347:Generated_Source\PSoC5/Rx_Timer.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/Rx_Timer.c **** *
 349:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 350:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 351:Generated_Source\PSoC5/Rx_Timer.c **** *
 352:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 353:Generated_Source\PSoC5/Rx_Timer.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/Rx_Timer.c **** *
 355:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/Rx_Timer.c **** uint8 Rx_Timer_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/Rx_Timer.c **** {
 154              		.loc 1 357 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 10


 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 358:Generated_Source\PSoC5/Rx_Timer.c ****     #if (!Rx_Timer_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/Rx_Timer.c ****         return ((uint8)Rx_Timer_CONTROL);
 159              		.loc 1 359 0
 160 0000 014B     		ldr	r3, .L17
 161 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:Generated_Source\PSoC5/Rx_Timer.c ****     #else
 361:Generated_Source\PSoC5/Rx_Timer.c ****         return (0);
 362:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* (!Rx_Timer_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/Rx_Timer.c **** }
 162              		.loc 1 363 0
 163 0004 7047     		bx	lr
 164              	.L18:
 165 0006 00BF     		.align	2
 166              	.L17:
 167 0008 78650040 		.word	1073767800
 168              		.cfi_endproc
 169              	.LFE7:
 170              		.size	Rx_Timer_ReadControlRegister, .-Rx_Timer_ReadControlRegister
 171              		.section	.text.Rx_Timer_WriteControlRegister,"ax",%progbits
 172              		.align	1
 173              		.global	Rx_Timer_WriteControlRegister
 174              		.thumb
 175              		.thumb_func
 176              		.type	Rx_Timer_WriteControlRegister, %function
 177              	Rx_Timer_WriteControlRegister:
 178              	.LFB8:
 364:Generated_Source\PSoC5/Rx_Timer.c **** 
 365:Generated_Source\PSoC5/Rx_Timer.c **** 
 366:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_WriteControlRegister
 368:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 369:Generated_Source\PSoC5/Rx_Timer.c **** *
 370:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 371:Generated_Source\PSoC5/Rx_Timer.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/Rx_Timer.c **** *
 373:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 374:Generated_Source\PSoC5/Rx_Timer.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/Rx_Timer.c **** *
 376:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 377:Generated_Source\PSoC5/Rx_Timer.c **** *
 378:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/Rx_Timer.c **** {
 179              		.loc 1 380 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL1:
 381:Generated_Source\PSoC5/Rx_Timer.c ****     #if (!Rx_Timer_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CONTROL = control;
 185              		.loc 1 382 0
 186 0000 014B     		ldr	r3, .L20
 187 0002 1870     		strb	r0, [r3]
 188 0004 7047     		bx	lr
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 11


 189              	.L21:
 190 0006 00BF     		.align	2
 191              	.L20:
 192 0008 78650040 		.word	1073767800
 193              		.cfi_endproc
 194              	.LFE8:
 195              		.size	Rx_Timer_WriteControlRegister, .-Rx_Timer_WriteControlRegister
 196              		.section	.text.Rx_Timer_ReadPeriod,"ax",%progbits
 197              		.align	1
 198              		.global	Rx_Timer_ReadPeriod
 199              		.thumb
 200              		.thumb_func
 201              		.type	Rx_Timer_ReadPeriod, %function
 202              	Rx_Timer_ReadPeriod:
 203              	.LFB9:
 383:Generated_Source\PSoC5/Rx_Timer.c ****     #else
 384:Generated_Source\PSoC5/Rx_Timer.c ****         control = 0u;
 385:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* (!Rx_Timer_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/Rx_Timer.c **** }
 387:Generated_Source\PSoC5/Rx_Timer.c **** 
 388:Generated_Source\PSoC5/Rx_Timer.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/Rx_Timer.c **** 
 390:Generated_Source\PSoC5/Rx_Timer.c **** 
 391:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_ReadPeriod
 393:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 394:Generated_Source\PSoC5/Rx_Timer.c **** *
 395:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 396:Generated_Source\PSoC5/Rx_Timer.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/Rx_Timer.c **** *
 398:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 399:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 400:Generated_Source\PSoC5/Rx_Timer.c **** *
 401:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 402:Generated_Source\PSoC5/Rx_Timer.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/Rx_Timer.c **** *
 404:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/Rx_Timer.c **** uint16 Rx_Timer_ReadPeriod(void) 
 406:Generated_Source\PSoC5/Rx_Timer.c **** {
 204              		.loc 1 406 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 407:Generated_Source\PSoC5/Rx_Timer.c ****    #if(Rx_Timer_UsingFixedFunction)
 408:Generated_Source\PSoC5/Rx_Timer.c ****        return ((uint16)CY_GET_REG16(Rx_Timer_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/Rx_Timer.c ****    #else
 410:Generated_Source\PSoC5/Rx_Timer.c ****        return (CY_GET_REG16(Rx_Timer_PERIOD_LSB_PTR));
 209              		.loc 1 410 0
 210 0000 014B     		ldr	r3, .L23
 211 0002 1888     		ldrh	r0, [r3]
 411:Generated_Source\PSoC5/Rx_Timer.c ****    #endif /* (Rx_Timer_UsingFixedFunction) */
 412:Generated_Source\PSoC5/Rx_Timer.c **** }
 212              		.loc 1 412 0
 213 0004 80B2     		uxth	r0, r0
 214 0006 7047     		bx	lr
 215              	.L24:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 12


 216              		.align	2
 217              	.L23:
 218 0008 506A0040 		.word	1073769040
 219              		.cfi_endproc
 220              	.LFE9:
 221              		.size	Rx_Timer_ReadPeriod, .-Rx_Timer_ReadPeriod
 222              		.section	.text.Rx_Timer_WritePeriod,"ax",%progbits
 223              		.align	1
 224              		.global	Rx_Timer_WritePeriod
 225              		.thumb
 226              		.thumb_func
 227              		.type	Rx_Timer_WritePeriod, %function
 228              	Rx_Timer_WritePeriod:
 229              	.LFB10:
 413:Generated_Source\PSoC5/Rx_Timer.c **** 
 414:Generated_Source\PSoC5/Rx_Timer.c **** 
 415:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_WritePeriod
 417:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Rx_Timer.c **** *
 419:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 420:Generated_Source\PSoC5/Rx_Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/Rx_Timer.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/Rx_Timer.c **** *
 423:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 424:Generated_Source\PSoC5/Rx_Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/Rx_Timer.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/Rx_Timer.c **** *
 427:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 428:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 429:Generated_Source\PSoC5/Rx_Timer.c **** *
 430:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_WritePeriod(uint16 period) 
 432:Generated_Source\PSoC5/Rx_Timer.c **** {
 230              		.loc 1 432 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 235              	.LVL2:
 433:Generated_Source\PSoC5/Rx_Timer.c ****     #if(Rx_Timer_UsingFixedFunction)
 434:Generated_Source\PSoC5/Rx_Timer.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/Rx_Timer.c ****         CY_SET_REG16(Rx_Timer_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/Rx_Timer.c ****     #else
 437:Generated_Source\PSoC5/Rx_Timer.c ****         CY_SET_REG16(Rx_Timer_PERIOD_LSB_PTR, period);
 236              		.loc 1 437 0
 237 0000 014B     		ldr	r3, .L26
 238 0002 1880     		strh	r0, [r3]	@ movhi
 239 0004 7047     		bx	lr
 240              	.L27:
 241 0006 00BF     		.align	2
 242              	.L26:
 243 0008 506A0040 		.word	1073769040
 244              		.cfi_endproc
 245              	.LFE10:
 246              		.size	Rx_Timer_WritePeriod, .-Rx_Timer_WritePeriod
 247              		.section	.text.Rx_Timer_ReadCapture,"ax",%progbits
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 13


 248              		.align	1
 249              		.global	Rx_Timer_ReadCapture
 250              		.thumb
 251              		.thumb_func
 252              		.type	Rx_Timer_ReadCapture, %function
 253              	Rx_Timer_ReadCapture:
 254              	.LFB11:
 438:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/Rx_Timer.c **** }
 440:Generated_Source\PSoC5/Rx_Timer.c **** 
 441:Generated_Source\PSoC5/Rx_Timer.c **** 
 442:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_ReadCapture
 444:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 445:Generated_Source\PSoC5/Rx_Timer.c **** *
 446:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 447:Generated_Source\PSoC5/Rx_Timer.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/Rx_Timer.c **** *
 449:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 450:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 451:Generated_Source\PSoC5/Rx_Timer.c **** *
 452:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 453:Generated_Source\PSoC5/Rx_Timer.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/Rx_Timer.c **** *
 455:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/Rx_Timer.c **** uint16 Rx_Timer_ReadCapture(void) 
 457:Generated_Source\PSoC5/Rx_Timer.c **** {
 255              		.loc 1 457 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 458:Generated_Source\PSoC5/Rx_Timer.c ****    #if(Rx_Timer_UsingFixedFunction)
 459:Generated_Source\PSoC5/Rx_Timer.c ****        return ((uint16)CY_GET_REG16(Rx_Timer_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/Rx_Timer.c ****    #else
 461:Generated_Source\PSoC5/Rx_Timer.c ****        return (CY_GET_REG16(Rx_Timer_CAPTURE_LSB_PTR));
 260              		.loc 1 461 0
 261 0000 014B     		ldr	r3, .L29
 262 0002 1888     		ldrh	r0, [r3]
 462:Generated_Source\PSoC5/Rx_Timer.c ****    #endif /* (Rx_Timer_UsingFixedFunction) */
 463:Generated_Source\PSoC5/Rx_Timer.c **** }
 263              		.loc 1 463 0
 264 0004 80B2     		uxth	r0, r0
 265 0006 7047     		bx	lr
 266              	.L30:
 267              		.align	2
 268              	.L29:
 269 0008 906A0040 		.word	1073769104
 270              		.cfi_endproc
 271              	.LFE11:
 272              		.size	Rx_Timer_ReadCapture, .-Rx_Timer_ReadCapture
 273              		.section	.text.Rx_Timer_WriteCounter,"ax",%progbits
 274              		.align	1
 275              		.global	Rx_Timer_WriteCounter
 276              		.thumb
 277              		.thumb_func
 278              		.type	Rx_Timer_WriteCounter, %function
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 14


 279              	Rx_Timer_WriteCounter:
 280              	.LFB12:
 464:Generated_Source\PSoC5/Rx_Timer.c **** 
 465:Generated_Source\PSoC5/Rx_Timer.c **** 
 466:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_WriteCounter
 468:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Rx_Timer.c **** *
 470:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 471:Generated_Source\PSoC5/Rx_Timer.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/Rx_Timer.c **** *
 473:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 474:Generated_Source\PSoC5/Rx_Timer.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/Rx_Timer.c **** *
 476:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 477:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 478:Generated_Source\PSoC5/Rx_Timer.c **** *
 479:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_WriteCounter(uint16 counter) 
 481:Generated_Source\PSoC5/Rx_Timer.c **** {
 281              		.loc 1 481 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL3:
 482:Generated_Source\PSoC5/Rx_Timer.c ****    #if(Rx_Timer_UsingFixedFunction)
 483:Generated_Source\PSoC5/Rx_Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/Rx_Timer.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/Rx_Timer.c ****          */
 486:Generated_Source\PSoC5/Rx_Timer.c ****         CY_SET_REG16(Rx_Timer_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/Rx_Timer.c ****         
 488:Generated_Source\PSoC5/Rx_Timer.c ****     #else
 489:Generated_Source\PSoC5/Rx_Timer.c ****         CY_SET_REG16(Rx_Timer_COUNTER_LSB_PTR, counter);
 287              		.loc 1 489 0
 288 0000 014B     		ldr	r3, .L32
 289 0002 1880     		strh	r0, [r3]	@ movhi
 290 0004 7047     		bx	lr
 291              	.L33:
 292 0006 00BF     		.align	2
 293              	.L32:
 294 0008 106A0040 		.word	1073768976
 295              		.cfi_endproc
 296              	.LFE12:
 297              		.size	Rx_Timer_WriteCounter, .-Rx_Timer_WriteCounter
 298              		.section	.text.Rx_Timer_ReadCounter,"ax",%progbits
 299              		.align	1
 300              		.global	Rx_Timer_ReadCounter
 301              		.thumb
 302              		.thumb_func
 303              		.type	Rx_Timer_ReadCounter, %function
 304              	Rx_Timer_ReadCounter:
 305              	.LFB13:
 490:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/Rx_Timer.c **** }
 492:Generated_Source\PSoC5/Rx_Timer.c **** 
 493:Generated_Source\PSoC5/Rx_Timer.c **** 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 15


 494:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_ReadCounter
 496:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 497:Generated_Source\PSoC5/Rx_Timer.c **** *
 498:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 499:Generated_Source\PSoC5/Rx_Timer.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/Rx_Timer.c **** *
 501:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 502:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 503:Generated_Source\PSoC5/Rx_Timer.c **** *
 504:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 505:Generated_Source\PSoC5/Rx_Timer.c **** *  Present compare value.
 506:Generated_Source\PSoC5/Rx_Timer.c **** *
 507:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/Rx_Timer.c **** uint16 Rx_Timer_ReadCounter(void) 
 509:Generated_Source\PSoC5/Rx_Timer.c **** {
 306              		.loc 1 509 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 510:Generated_Source\PSoC5/Rx_Timer.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/Rx_Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/Rx_Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/Rx_Timer.c ****     #if(Rx_Timer_UsingFixedFunction)
 514:Generated_Source\PSoC5/Rx_Timer.c ****         (void)CY_GET_REG16(Rx_Timer_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/Rx_Timer.c ****     #else
 516:Generated_Source\PSoC5/Rx_Timer.c ****         (void)CY_GET_REG8(Rx_Timer_COUNTER_LSB_PTR_8BIT);
 311              		.loc 1 516 0
 312 0000 024B     		ldr	r3, .L35
 313 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/Rx_Timer.c ****     #endif/* (Rx_Timer_UsingFixedFunction) */
 518:Generated_Source\PSoC5/Rx_Timer.c **** 
 519:Generated_Source\PSoC5/Rx_Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/Rx_Timer.c ****     #if(Rx_Timer_UsingFixedFunction)
 521:Generated_Source\PSoC5/Rx_Timer.c ****         return ((uint16)CY_GET_REG16(Rx_Timer_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/Rx_Timer.c ****     #else
 523:Generated_Source\PSoC5/Rx_Timer.c ****         return (CY_GET_REG16(Rx_Timer_CAPTURE_LSB_PTR));
 314              		.loc 1 523 0
 315 0004 024B     		ldr	r3, .L35+4
 316 0006 1888     		ldrh	r0, [r3]
 524:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* (Rx_Timer_UsingFixedFunction) */
 525:Generated_Source\PSoC5/Rx_Timer.c **** }
 317              		.loc 1 525 0
 318 0008 80B2     		uxth	r0, r0
 319 000a 7047     		bx	lr
 320              	.L36:
 321              		.align	2
 322              	.L35:
 323 000c 08650040 		.word	1073767688
 324 0010 906A0040 		.word	1073769104
 325              		.cfi_endproc
 326              	.LFE13:
 327              		.size	Rx_Timer_ReadCounter, .-Rx_Timer_ReadCounter
 328              		.section	.text.Rx_Timer_SetInterruptCount,"ax",%progbits
 329              		.align	1
 330              		.global	Rx_Timer_SetInterruptCount
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 16


 331              		.thumb
 332              		.thumb_func
 333              		.type	Rx_Timer_SetInterruptCount, %function
 334              	Rx_Timer_SetInterruptCount:
 335              	.LFB14:
 526:Generated_Source\PSoC5/Rx_Timer.c **** 
 527:Generated_Source\PSoC5/Rx_Timer.c **** 
 528:Generated_Source\PSoC5/Rx_Timer.c **** #if(!Rx_Timer_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/Rx_Timer.c **** 
 530:Generated_Source\PSoC5/Rx_Timer.c ****     
 531:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/Rx_Timer.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/Rx_Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/Rx_Timer.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/Rx_Timer.c **** 
 536:Generated_Source\PSoC5/Rx_Timer.c **** 
 537:Generated_Source\PSoC5/Rx_Timer.c **** #if (Rx_Timer_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/Rx_Timer.c **** 
 539:Generated_Source\PSoC5/Rx_Timer.c **** 
 540:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_SetCaptureMode
 542:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 543:Generated_Source\PSoC5/Rx_Timer.c **** *
 544:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 545:Generated_Source\PSoC5/Rx_Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/Rx_Timer.c **** *
 547:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 548:Generated_Source\PSoC5/Rx_Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/Rx_Timer.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/Rx_Timer.c **** *  #define Rx_Timer__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/Rx_Timer.c **** #define Rx_Timer__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/Rx_Timer.c **** #define Rx_Timer__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/Rx_Timer.c **** #define Rx_Timer__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/Rx_Timer.c **** #define Rx_Timer__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/Rx_Timer.c ****  identifiers
 556:Generated_Source\PSoC5/Rx_Timer.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/Rx_Timer.c **** *  Rx_Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/Rx_Timer.c **** *  Rx_Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/Rx_Timer.c **** *  Rx_Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/Rx_Timer.c **** *  Rx_Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/Rx_Timer.c **** *
 562:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 563:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 564:Generated_Source\PSoC5/Rx_Timer.c **** *
 565:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/Rx_Timer.c **** {
 568:Generated_Source\PSoC5/Rx_Timer.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/Rx_Timer.c ****     captureMode = ((uint8)((uint8)captureMode << Rx_Timer_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/Rx_Timer.c ****     captureMode &= (Rx_Timer_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/Rx_Timer.c **** 
 572:Generated_Source\PSoC5/Rx_Timer.c ****     #if (!Rx_Timer_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/Rx_Timer.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CONTROL &= ((uint8)(~Rx_Timer_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/Rx_Timer.c **** 
 576:Generated_Source\PSoC5/Rx_Timer.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CONTROL |= captureMode;
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 17


 578:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* (!Rx_Timer_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/Rx_Timer.c **** }
 580:Generated_Source\PSoC5/Rx_Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/Rx_Timer.c **** 
 582:Generated_Source\PSoC5/Rx_Timer.c **** 
 583:Generated_Source\PSoC5/Rx_Timer.c **** #if (Rx_Timer_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/Rx_Timer.c **** 
 585:Generated_Source\PSoC5/Rx_Timer.c **** 
 586:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_SetTriggerMode
 588:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 589:Generated_Source\PSoC5/Rx_Timer.c **** *
 590:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 591:Generated_Source\PSoC5/Rx_Timer.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/Rx_Timer.c **** *
 593:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 594:Generated_Source\PSoC5/Rx_Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/Rx_Timer.c ****     #define Rx_Timer__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/Rx_Timer.c ****     #define Rx_Timer__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/Rx_Timer.c ****     #define Rx_Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/Rx_Timer.c ****     #define Rx_Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/Rx_Timer.c ****     #define Rx_Timer__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/Rx_Timer.c **** *
 601:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 602:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 603:Generated_Source\PSoC5/Rx_Timer.c **** *
 604:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/Rx_Timer.c **** {
 607:Generated_Source\PSoC5/Rx_Timer.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/Rx_Timer.c ****     triggerMode &= Rx_Timer_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/Rx_Timer.c **** 
 610:Generated_Source\PSoC5/Rx_Timer.c ****     #if (!Rx_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed *
 611:Generated_Source\PSoC5/Rx_Timer.c ****     
 612:Generated_Source\PSoC5/Rx_Timer.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CONTROL &= ((uint8)(~Rx_Timer_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/Rx_Timer.c **** 
 615:Generated_Source\PSoC5/Rx_Timer.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CONTROL |= (triggerMode | Rx_Timer__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/Rx_Timer.c **** }
 619:Generated_Source\PSoC5/Rx_Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/Rx_Timer.c **** 
 621:Generated_Source\PSoC5/Rx_Timer.c **** #if (Rx_Timer_EnableTriggerMode)
 622:Generated_Source\PSoC5/Rx_Timer.c **** 
 623:Generated_Source\PSoC5/Rx_Timer.c **** 
 624:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_EnableTrigger
 626:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 627:Generated_Source\PSoC5/Rx_Timer.c **** *
 628:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 629:Generated_Source\PSoC5/Rx_Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/Rx_Timer.c **** *
 631:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 632:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 633:Generated_Source\PSoC5/Rx_Timer.c **** *
 634:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 18


 635:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 636:Generated_Source\PSoC5/Rx_Timer.c **** *
 637:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_EnableTrigger(void) 
 639:Generated_Source\PSoC5/Rx_Timer.c **** {
 640:Generated_Source\PSoC5/Rx_Timer.c ****     #if (!Rx_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed *
 641:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CONTROL |= Rx_Timer_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/Rx_Timer.c **** }
 644:Generated_Source\PSoC5/Rx_Timer.c **** 
 645:Generated_Source\PSoC5/Rx_Timer.c **** 
 646:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_DisableTrigger
 648:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 649:Generated_Source\PSoC5/Rx_Timer.c **** *
 650:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 651:Generated_Source\PSoC5/Rx_Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/Rx_Timer.c **** *
 653:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 654:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 655:Generated_Source\PSoC5/Rx_Timer.c **** *
 656:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 657:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 658:Generated_Source\PSoC5/Rx_Timer.c **** *
 659:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_DisableTrigger(void) 
 661:Generated_Source\PSoC5/Rx_Timer.c **** {
 662:Generated_Source\PSoC5/Rx_Timer.c ****     #if (!Rx_Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed 
 663:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CONTROL &= ((uint8)(~Rx_Timer_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/Rx_Timer.c **** }
 666:Generated_Source\PSoC5/Rx_Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/Rx_Timer.c **** 
 668:Generated_Source\PSoC5/Rx_Timer.c **** #if(Rx_Timer_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/Rx_Timer.c **** 
 670:Generated_Source\PSoC5/Rx_Timer.c **** 
 671:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_SetInterruptCount
 673:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Rx_Timer.c **** *
 675:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 676:Generated_Source\PSoC5/Rx_Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/Rx_Timer.c **** *
 678:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 679:Generated_Source\PSoC5/Rx_Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/Rx_Timer.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/Rx_Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/Rx_Timer.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/Rx_Timer.c **** *
 684:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 685:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 686:Generated_Source\PSoC5/Rx_Timer.c **** *
 687:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/Rx_Timer.c **** {
 336              		.loc 1 689 0
 337              		.cfi_startproc
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 19


 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341              	.LVL4:
 690:Generated_Source\PSoC5/Rx_Timer.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/Rx_Timer.c ****     interruptCount &= Rx_Timer_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/Rx_Timer.c **** 
 693:Generated_Source\PSoC5/Rx_Timer.c ****     #if (!Rx_Timer_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/Rx_Timer.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CONTROL &= ((uint8)(~Rx_Timer_CTRL_INTCNT_MASK));
 342              		.loc 1 695 0
 343 0000 054B     		ldr	r3, .L38
 696:Generated_Source\PSoC5/Rx_Timer.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_CONTROL |= interruptCount;
 344              		.loc 1 697 0
 345 0002 00F00300 		and	r0, r0, #3
 346              	.LVL5:
 695:Generated_Source\PSoC5/Rx_Timer.c ****         /* Write The New Setting */
 347              		.loc 1 695 0
 348 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 349 0008 02F0FC02 		and	r2, r2, #252
 350 000c 1A70     		strb	r2, [r3]
 351              		.loc 1 697 0
 352 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 353 0010 1043     		orrs	r0, r0, r2
 354 0012 1870     		strb	r0, [r3]
 355 0014 7047     		bx	lr
 356              	.L39:
 357 0016 00BF     		.align	2
 358              	.L38:
 359 0018 78650040 		.word	1073767800
 360              		.cfi_endproc
 361              	.LFE14:
 362              		.size	Rx_Timer_SetInterruptCount, .-Rx_Timer_SetInterruptCount
 363              		.section	.text.Rx_Timer_SetCaptureCount,"ax",%progbits
 364              		.align	1
 365              		.global	Rx_Timer_SetCaptureCount
 366              		.thumb
 367              		.thumb_func
 368              		.type	Rx_Timer_SetCaptureCount, %function
 369              	Rx_Timer_SetCaptureCount:
 370              	.LFB15:
 698:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* (!Rx_Timer_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/Rx_Timer.c **** }
 700:Generated_Source\PSoC5/Rx_Timer.c **** #endif /* Rx_Timer_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/Rx_Timer.c **** 
 702:Generated_Source\PSoC5/Rx_Timer.c **** 
 703:Generated_Source\PSoC5/Rx_Timer.c **** #if (Rx_Timer_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/Rx_Timer.c **** 
 705:Generated_Source\PSoC5/Rx_Timer.c **** 
 706:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_SetCaptureCount
 708:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 709:Generated_Source\PSoC5/Rx_Timer.c **** *
 710:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 711:Generated_Source\PSoC5/Rx_Timer.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/Rx_Timer.c **** *
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 20


 713:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 714:Generated_Source\PSoC5/Rx_Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/Rx_Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/Rx_Timer.c **** *                captures.
 717:Generated_Source\PSoC5/Rx_Timer.c **** *
 718:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 719:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 720:Generated_Source\PSoC5/Rx_Timer.c **** *
 721:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/Rx_Timer.c **** {
 371              		.loc 1 723 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376              	.LVL6:
 724:Generated_Source\PSoC5/Rx_Timer.c ****     Rx_Timer_CAP_COUNT = captureCount;
 377              		.loc 1 724 0
 378 0000 014B     		ldr	r3, .L41
 379 0002 1870     		strb	r0, [r3]
 380 0004 7047     		bx	lr
 381              	.L42:
 382 0006 00BF     		.align	2
 383              	.L41:
 384 0008 8A640040 		.word	1073767562
 385              		.cfi_endproc
 386              	.LFE15:
 387              		.size	Rx_Timer_SetCaptureCount, .-Rx_Timer_SetCaptureCount
 388              		.section	.text.Rx_Timer_ReadCaptureCount,"ax",%progbits
 389              		.align	1
 390              		.global	Rx_Timer_ReadCaptureCount
 391              		.thumb
 392              		.thumb_func
 393              		.type	Rx_Timer_ReadCaptureCount, %function
 394              	Rx_Timer_ReadCaptureCount:
 395              	.LFB16:
 725:Generated_Source\PSoC5/Rx_Timer.c **** }
 726:Generated_Source\PSoC5/Rx_Timer.c **** 
 727:Generated_Source\PSoC5/Rx_Timer.c **** 
 728:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_ReadCaptureCount
 730:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 731:Generated_Source\PSoC5/Rx_Timer.c **** *
 732:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 733:Generated_Source\PSoC5/Rx_Timer.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/Rx_Timer.c **** *
 735:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 736:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 737:Generated_Source\PSoC5/Rx_Timer.c **** *
 738:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 739:Generated_Source\PSoC5/Rx_Timer.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/Rx_Timer.c **** *
 741:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/Rx_Timer.c **** uint8 Rx_Timer_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/Rx_Timer.c **** {
 396              		.loc 1 743 0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 21


 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 744:Generated_Source\PSoC5/Rx_Timer.c ****     return ((uint8)Rx_Timer_CAP_COUNT);
 401              		.loc 1 744 0
 402 0000 014B     		ldr	r3, .L44
 403 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 745:Generated_Source\PSoC5/Rx_Timer.c **** }
 404              		.loc 1 745 0
 405 0004 7047     		bx	lr
 406              	.L45:
 407 0006 00BF     		.align	2
 408              	.L44:
 409 0008 8A640040 		.word	1073767562
 410              		.cfi_endproc
 411              	.LFE16:
 412              		.size	Rx_Timer_ReadCaptureCount, .-Rx_Timer_ReadCaptureCount
 413              		.section	.text.Rx_Timer_ClearFIFO,"ax",%progbits
 414              		.align	1
 415              		.global	Rx_Timer_ClearFIFO
 416              		.thumb
 417              		.thumb_func
 418              		.type	Rx_Timer_ClearFIFO, %function
 419              	Rx_Timer_ClearFIFO:
 420              	.LFB17:
 746:Generated_Source\PSoC5/Rx_Timer.c **** #endif /* Rx_Timer_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/Rx_Timer.c **** 
 748:Generated_Source\PSoC5/Rx_Timer.c **** 
 749:Generated_Source\PSoC5/Rx_Timer.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/Rx_Timer.c **** * Function Name: Rx_Timer_ClearFIFO
 751:Generated_Source\PSoC5/Rx_Timer.c **** ********************************************************************************
 752:Generated_Source\PSoC5/Rx_Timer.c **** *
 753:Generated_Source\PSoC5/Rx_Timer.c **** * Summary:
 754:Generated_Source\PSoC5/Rx_Timer.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/Rx_Timer.c **** *
 756:Generated_Source\PSoC5/Rx_Timer.c **** * Parameters:
 757:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 758:Generated_Source\PSoC5/Rx_Timer.c **** *
 759:Generated_Source\PSoC5/Rx_Timer.c **** * Return:
 760:Generated_Source\PSoC5/Rx_Timer.c **** *  void
 761:Generated_Source\PSoC5/Rx_Timer.c **** *
 762:Generated_Source\PSoC5/Rx_Timer.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/Rx_Timer.c **** void Rx_Timer_ClearFIFO(void) 
 764:Generated_Source\PSoC5/Rx_Timer.c **** {
 421              		.loc 1 764 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 426              	.LBB14:
 427              	.LBB15:
 335:Generated_Source\PSoC5/Rx_Timer.c **** }
 428              		.loc 1 335 0
 429 0000 034A     		ldr	r2, .L51
 430              	.LBE15:
 431              	.LBE14:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 22


 432              	.LBB17:
 433              	.LBB18:
 461:Generated_Source\PSoC5/Rx_Timer.c ****    #endif /* (Rx_Timer_UsingFixedFunction) */
 434              		.loc 1 461 0
 435 0002 0449     		ldr	r1, .L51+4
 436              	.L47:
 437              	.LBE18:
 438              	.LBE17:
 439              	.LBB20:
 440              	.LBB16:
 335:Generated_Source\PSoC5/Rx_Timer.c **** }
 441              		.loc 1 335 0
 442 0004 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 443              	.LBE16:
 444              	.LBE20:
 765:Generated_Source\PSoC5/Rx_Timer.c ****     while(0u != (Rx_Timer_ReadStatusRegister() & Rx_Timer_STATUS_FIFONEMP))
 445              		.loc 1 765 0
 446 0006 1B07     		lsls	r3, r3, #28
 447 0008 01D5     		bpl	.L50
 448              	.LBB21:
 449              	.LBB19:
 461:Generated_Source\PSoC5/Rx_Timer.c ****    #endif /* (Rx_Timer_UsingFixedFunction) */
 450              		.loc 1 461 0
 451 000a 0B88     		ldrh	r3, [r1]
 452 000c FAE7     		b	.L47
 453              	.L50:
 454              	.LBE19:
 455              	.LBE21:
 766:Generated_Source\PSoC5/Rx_Timer.c ****     {
 767:Generated_Source\PSoC5/Rx_Timer.c ****         (void)Rx_Timer_ReadCapture();
 768:Generated_Source\PSoC5/Rx_Timer.c ****     }
 769:Generated_Source\PSoC5/Rx_Timer.c **** }
 456              		.loc 1 769 0
 457 000e 7047     		bx	lr
 458              	.L52:
 459              		.align	2
 460              	.L51:
 461 0010 6B640040 		.word	1073767531
 462 0014 906A0040 		.word	1073769104
 463              		.cfi_endproc
 464              	.LFE17:
 465              		.size	Rx_Timer_ClearFIFO, .-Rx_Timer_ClearFIFO
 466              		.section	.text.Rx_Timer_Init,"ax",%progbits
 467              		.align	1
 468              		.global	Rx_Timer_Init
 469              		.thumb
 470              		.thumb_func
 471              		.type	Rx_Timer_Init, %function
 472              	Rx_Timer_Init:
 473              	.LFB0:
  44:Generated_Source\PSoC5/Rx_Timer.c ****     #if(!Rx_Timer_UsingFixedFunction)
 474              		.loc 1 44 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              	.LVL7:
 479 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 23


 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 3, -8
 482              		.cfi_offset 14, -4
 483              	.LBB22:
 484              	.LBB23:
 437:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 485              		.loc 1 437 0
 486 0002 4FF6FF73 		movw	r3, #65535
 487 0006 0F4A     		ldr	r2, .L54
 488 0008 1380     		strh	r3, [r2]	@ movhi
 489              	.LVL8:
 490              	.LBE23:
 491              	.LBE22:
 492              	.LBB24:
 493              	.LBB25:
 489:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 494              		.loc 1 489 0
 495 000a 22F8403C 		strh	r3, [r2, #-64]	@ movhi
 496              	.LVL9:
 497              	.LBE25:
 498              	.LBE24:
 122:Generated_Source\PSoC5/Rx_Timer.c ****         Rx_Timer_SetCaptureCount(Rx_Timer_INIT_CAPTURE_COUNT);
 499              		.loc 1 122 0
 500 000e A2F2B652 		subw	r2, r2, #1462
 501 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 502 0014 43F02003 		orr	r3, r3, #32
 503 0018 1370     		strb	r3, [r2]
 504              	.LVL10:
 505              	.LBB26:
 506              	.LBB27:
 724:Generated_Source\PSoC5/Rx_Timer.c **** }
 507              		.loc 1 724 0
 508 001a 0B4B     		ldr	r3, .L54+4
 509 001c 0A22     		movs	r2, #10
 510 001e 1A70     		strb	r2, [r3]
 511              	.LVL11:
 512              	.LBE27:
 513              	.LBE26:
 142:Generated_Source\PSoC5/Rx_Timer.c **** 
 514              		.loc 1 142 0
 515 0020 FFF7FEFF 		bl	CyEnterCriticalSection
 516              	.LVL12:
 145:Generated_Source\PSoC5/Rx_Timer.c **** 
 517              		.loc 1 145 0
 518 0024 094A     		ldr	r2, .L54+8
 519 0026 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 520 0028 43F01003 		orr	r3, r3, #16
 521 002c 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/Rx_Timer.c **** 
 522              		.loc 1 148 0
 523 002e FFF7FEFF 		bl	CyExitCriticalSection
 524              	.LVL13:
 156:Generated_Source\PSoC5/Rx_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 525              		.loc 1 156 0
 526 0032 0020     		movs	r0, #0
 527 0034 FFF7FEFF 		bl	Rx_Timer_SetInterruptCount
 528              	.LVL14:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 24


 159:Generated_Source\PSoC5/Rx_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 529              		.loc 1 159 0
 530 0038 FFF7FEFF 		bl	Rx_Timer_ClearFIFO
 531              	.LVL15:
 532              	.LBB28:
 533              	.LBB29:
 281:Generated_Source\PSoC5/Rx_Timer.c **** }
 534              		.loc 1 281 0
 535 003c 044B     		ldr	r3, .L54+12
 536 003e 0222     		movs	r2, #2
 537 0040 1A70     		strb	r2, [r3]
 538              	.LVL16:
 539 0042 08BD     		pop	{r3, pc}
 540              	.L55:
 541              		.align	2
 542              	.L54:
 543 0044 506A0040 		.word	1073769040
 544 0048 8A640040 		.word	1073767562
 545 004c 9B640040 		.word	1073767579
 546 0050 8B640040 		.word	1073767563
 547              	.LBE29:
 548              	.LBE28:
 549              		.cfi_endproc
 550              	.LFE0:
 551              		.size	Rx_Timer_Init, .-Rx_Timer_Init
 552              		.section	.text.Rx_Timer_Start,"ax",%progbits
 553              		.align	1
 554              		.global	Rx_Timer_Start
 555              		.thumb
 556              		.thumb_func
 557              		.type	Rx_Timer_Start, %function
 558              	Rx_Timer_Start:
 559              	.LFB2:
 216:Generated_Source\PSoC5/Rx_Timer.c ****     if(Rx_Timer_initVar == 0u)
 560              		.loc 1 216 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564 0000 10B5     		push	{r4, lr}
 565              		.cfi_def_cfa_offset 8
 566              		.cfi_offset 4, -8
 567              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/Rx_Timer.c ****     {
 568              		.loc 1 217 0
 569 0002 054C     		ldr	r4, .L58
 570 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 571 0006 1BB9     		cbnz	r3, .L57
 219:Generated_Source\PSoC5/Rx_Timer.c **** 
 572              		.loc 1 219 0
 573 0008 FFF7FEFF 		bl	Rx_Timer_Init
 574              	.LVL17:
 221:Generated_Source\PSoC5/Rx_Timer.c ****     }
 575              		.loc 1 221 0
 576 000c 0123     		movs	r3, #1
 577 000e 2370     		strb	r3, [r4]
 578              	.L57:
 226:Generated_Source\PSoC5/Rx_Timer.c **** 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 25


 579              		.loc 1 226 0
 580 0010 BDE81040 		pop	{r4, lr}
 581              		.cfi_restore 14
 582              		.cfi_restore 4
 583              		.cfi_def_cfa_offset 0
 225:Generated_Source\PSoC5/Rx_Timer.c **** }
 584              		.loc 1 225 0
 585 0014 FFF7FEBF 		b	Rx_Timer_Enable
 586              	.LVL18:
 587              	.L59:
 588              		.align	2
 589              	.L58:
 590 0018 00000000 		.word	.LANCHOR0
 591              		.cfi_endproc
 592              	.LFE2:
 593              		.size	Rx_Timer_Start, .-Rx_Timer_Start
 594              		.global	Rx_Timer_initVar
 595              		.bss
 596              		.set	.LANCHOR0,. + 0
 597              		.type	Rx_Timer_initVar, %object
 598              		.size	Rx_Timer_initVar, 1
 599              	Rx_Timer_initVar:
 600 0000 00       		.space	1
 601              		.text
 602              	.Letext0:
 603              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 604              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 605              		.section	.debug_info,"",%progbits
 606              	.Ldebug_info0:
 607 0000 F6030000 		.4byte	0x3f6
 608 0004 0400     		.2byte	0x4
 609 0006 00000000 		.4byte	.Ldebug_abbrev0
 610 000a 04       		.byte	0x4
 611 000b 01       		.uleb128 0x1
 612 000c 31010000 		.4byte	.LASF44
 613 0010 0C       		.byte	0xc
 614 0011 FF000000 		.4byte	.LASF45
 615 0015 DB010000 		.4byte	.LASF46
 616 0019 30000000 		.4byte	.Ldebug_ranges0+0x30
 617 001d 00000000 		.4byte	0
 618 0021 00000000 		.4byte	.Ldebug_line0
 619 0025 02       		.uleb128 0x2
 620 0026 01       		.byte	0x1
 621 0027 06       		.byte	0x6
 622 0028 98030000 		.4byte	.LASF0
 623 002c 02       		.uleb128 0x2
 624 002d 01       		.byte	0x1
 625 002e 08       		.byte	0x8
 626 002f BE000000 		.4byte	.LASF1
 627 0033 02       		.uleb128 0x2
 628 0034 02       		.byte	0x2
 629 0035 05       		.byte	0x5
 630 0036 40030000 		.4byte	.LASF2
 631 003a 02       		.uleb128 0x2
 632 003b 02       		.byte	0x2
 633 003c 07       		.byte	0x7
 634 003d 5B000000 		.4byte	.LASF3
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 26


 635 0041 02       		.uleb128 0x2
 636 0042 04       		.byte	0x4
 637 0043 05       		.byte	0x5
 638 0044 5D030000 		.4byte	.LASF4
 639 0048 02       		.uleb128 0x2
 640 0049 04       		.byte	0x4
 641 004a 07       		.byte	0x7
 642 004b 5D020000 		.4byte	.LASF5
 643 004f 02       		.uleb128 0x2
 644 0050 08       		.byte	0x8
 645 0051 05       		.byte	0x5
 646 0052 EB020000 		.4byte	.LASF6
 647 0056 02       		.uleb128 0x2
 648 0057 08       		.byte	0x8
 649 0058 07       		.byte	0x7
 650 0059 A7000000 		.4byte	.LASF7
 651 005d 03       		.uleb128 0x3
 652 005e 04       		.byte	0x4
 653 005f 05       		.byte	0x5
 654 0060 696E7400 		.ascii	"int\000"
 655 0064 02       		.uleb128 0x2
 656 0065 04       		.byte	0x4
 657 0066 07       		.byte	0x7
 658 0067 6F020000 		.4byte	.LASF8
 659 006b 04       		.uleb128 0x4
 660 006c BF010000 		.4byte	.LASF9
 661 0070 02       		.byte	0x2
 662 0071 E401     		.2byte	0x1e4
 663 0073 2C000000 		.4byte	0x2c
 664 0077 04       		.uleb128 0x4
 665 0078 2A020000 		.4byte	.LASF10
 666 007c 02       		.byte	0x2
 667 007d E501     		.2byte	0x1e5
 668 007f 3A000000 		.4byte	0x3a
 669 0083 02       		.uleb128 0x2
 670 0084 04       		.byte	0x4
 671 0085 04       		.byte	0x4
 672 0086 99000000 		.4byte	.LASF11
 673 008a 02       		.uleb128 0x2
 674 008b 08       		.byte	0x8
 675 008c 04       		.byte	0x4
 676 008d 83000000 		.4byte	.LASF12
 677 0091 02       		.uleb128 0x2
 678 0092 01       		.byte	0x1
 679 0093 08       		.byte	0x8
 680 0094 16000000 		.4byte	.LASF13
 681 0098 04       		.uleb128 0x4
 682 0099 FA000000 		.4byte	.LASF14
 683 009d 02       		.byte	0x2
 684 009e 8E02     		.2byte	0x28e
 685 00a0 A4000000 		.4byte	0xa4
 686 00a4 05       		.uleb128 0x5
 687 00a5 6B000000 		.4byte	0x6b
 688 00a9 04       		.uleb128 0x4
 689 00aa 4A030000 		.4byte	.LASF15
 690 00ae 02       		.byte	0x2
 691 00af 8F02     		.2byte	0x28f
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 27


 692 00b1 B5000000 		.4byte	0xb5
 693 00b5 05       		.uleb128 0x5
 694 00b6 77000000 		.4byte	0x77
 695 00ba 02       		.uleb128 0x2
 696 00bb 08       		.byte	0x8
 697 00bc 04       		.byte	0x4
 698 00bd 8C030000 		.4byte	.LASF16
 699 00c1 02       		.uleb128 0x2
 700 00c2 04       		.byte	0x4
 701 00c3 07       		.byte	0x7
 702 00c4 E2020000 		.4byte	.LASF17
 703 00c8 06       		.uleb128 0x6
 704 00c9 6E000000 		.4byte	.LASF18
 705 00cd 01       		.byte	0x1
 706 00ce C801     		.2byte	0x1c8
 707 00d0 77000000 		.4byte	0x77
 708 00d4 01       		.byte	0x1
 709 00d5 06       		.uleb128 0x6
 710 00d6 16030000 		.4byte	.LASF19
 711 00da 01       		.byte	0x1
 712 00db 4D01     		.2byte	0x14d
 713 00dd 6B000000 		.4byte	0x6b
 714 00e1 01       		.byte	0x1
 715 00e2 07       		.uleb128 0x7
 716 00e3 CC000000 		.4byte	.LASF20
 717 00e7 01       		.byte	0x1
 718 00e8 1701     		.2byte	0x117
 719 00ea 01       		.byte	0x1
 720 00eb FC000000 		.4byte	0xfc
 721 00ef 08       		.uleb128 0x8
 722 00f0 08030000 		.4byte	.LASF22
 723 00f4 01       		.byte	0x1
 724 00f5 1701     		.2byte	0x117
 725 00f7 6B000000 		.4byte	0x6b
 726 00fb 00       		.byte	0
 727 00fc 07       		.uleb128 0x7
 728 00fd AF020000 		.4byte	.LASF21
 729 0101 01       		.byte	0x1
 730 0102 D202     		.2byte	0x2d2
 731 0104 01       		.byte	0x1
 732 0105 16010000 		.4byte	0x116
 733 0109 08       		.uleb128 0x8
 734 010a 50030000 		.4byte	.LASF23
 735 010e 01       		.byte	0x1
 736 010f D202     		.2byte	0x2d2
 737 0111 6B000000 		.4byte	0x6b
 738 0115 00       		.byte	0
 739 0116 07       		.uleb128 0x7
 740 0117 00000000 		.4byte	.LASF24
 741 011b 01       		.byte	0x1
 742 011c E001     		.2byte	0x1e0
 743 011e 01       		.byte	0x1
 744 011f 30010000 		.4byte	0x130
 745 0123 08       		.uleb128 0x8
 746 0124 9F000000 		.4byte	.LASF25
 747 0128 01       		.byte	0x1
 748 0129 E001     		.2byte	0x1e0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 28


 749 012b 77000000 		.4byte	0x77
 750 012f 00       		.byte	0
 751 0130 07       		.uleb128 0x7
 752 0131 31020000 		.4byte	.LASF26
 753 0135 01       		.byte	0x1
 754 0136 AF01     		.2byte	0x1af
 755 0138 01       		.byte	0x1
 756 0139 4A010000 		.4byte	0x14a
 757 013d 08       		.uleb128 0x8
 758 013e 54000000 		.4byte	.LASF27
 759 0142 01       		.byte	0x1
 760 0143 AF01     		.2byte	0x1af
 761 0145 77000000 		.4byte	0x77
 762 0149 00       		.byte	0
 763 014a 09       		.uleb128 0x9
 764 014b 21010000 		.4byte	.LASF28
 765 014f 01       		.byte	0x1
 766 0150 B4       		.byte	0xb4
 767 0151 00000000 		.4byte	.LFB1
 768 0155 10000000 		.4byte	.LFE1-.LFB1
 769 0159 01       		.uleb128 0x1
 770 015a 9C       		.byte	0x9c
 771 015b 09       		.uleb128 0x9
 772 015c 32030000 		.4byte	.LASF29
 773 0160 01       		.byte	0x1
 774 0161 F7       		.byte	0xf7
 775 0162 00000000 		.4byte	.LFB3
 776 0166 10000000 		.4byte	.LFE3-.LFB3
 777 016a 01       		.uleb128 0x1
 778 016b 9C       		.byte	0x9c
 779 016c 0A       		.uleb128 0xa
 780 016d E2000000 		.4byte	0xe2
 781 0171 00000000 		.4byte	.LFB4
 782 0175 0C000000 		.4byte	.LFE4-.LFB4
 783 0179 01       		.uleb128 0x1
 784 017a 9C       		.byte	0x9c
 785 017b 87010000 		.4byte	0x187
 786 017f 0B       		.uleb128 0xb
 787 0180 EF000000 		.4byte	0xef
 788 0184 01       		.uleb128 0x1
 789 0185 50       		.byte	0x50
 790 0186 00       		.byte	0
 791 0187 0C       		.uleb128 0xc
 792 0188 11020000 		.4byte	.LASF30
 793 018c 01       		.byte	0x1
 794 018d 2E01     		.2byte	0x12e
 795 018f 00000000 		.4byte	.LFB5
 796 0193 0C000000 		.4byte	.LFE5-.LFB5
 797 0197 01       		.uleb128 0x1
 798 0198 9C       		.byte	0x9c
 799 0199 0D       		.uleb128 0xd
 800 019a D5000000 		.4byte	0xd5
 801 019e 00000000 		.4byte	.LFB6
 802 01a2 0C000000 		.4byte	.LFE6-.LFB6
 803 01a6 01       		.uleb128 0x1
 804 01a7 9C       		.byte	0x9c
 805 01a8 0E       		.uleb128 0xe
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 29


 806 01a9 7C020000 		.4byte	.LASF31
 807 01ad 01       		.byte	0x1
 808 01ae 6401     		.2byte	0x164
 809 01b0 6B000000 		.4byte	0x6b
 810 01b4 00000000 		.4byte	.LFB7
 811 01b8 0C000000 		.4byte	.LFE7-.LFB7
 812 01bc 01       		.uleb128 0x1
 813 01bd 9C       		.byte	0x9c
 814 01be 0F       		.uleb128 0xf
 815 01bf 36000000 		.4byte	.LASF34
 816 01c3 01       		.byte	0x1
 817 01c4 7B01     		.2byte	0x17b
 818 01c6 00000000 		.4byte	.LFB8
 819 01ca 0C000000 		.4byte	.LFE8-.LFB8
 820 01ce 01       		.uleb128 0x1
 821 01cf 9C       		.byte	0x9c
 822 01d0 E3010000 		.4byte	0x1e3
 823 01d4 10       		.uleb128 0x10
 824 01d5 C5010000 		.4byte	.LASF36
 825 01d9 01       		.byte	0x1
 826 01da 7B01     		.2byte	0x17b
 827 01dc 6B000000 		.4byte	0x6b
 828 01e0 01       		.uleb128 0x1
 829 01e1 50       		.byte	0x50
 830 01e2 00       		.byte	0
 831 01e3 0E       		.uleb128 0xe
 832 01e4 E6000000 		.4byte	.LASF32
 833 01e8 01       		.byte	0x1
 834 01e9 9501     		.2byte	0x195
 835 01eb 77000000 		.4byte	0x77
 836 01ef 00000000 		.4byte	.LFB9
 837 01f3 0C000000 		.4byte	.LFE9-.LFB9
 838 01f7 01       		.uleb128 0x1
 839 01f8 9C       		.byte	0x9c
 840 01f9 0A       		.uleb128 0xa
 841 01fa 30010000 		.4byte	0x130
 842 01fe 00000000 		.4byte	.LFB10
 843 0202 0C000000 		.4byte	.LFE10-.LFB10
 844 0206 01       		.uleb128 0x1
 845 0207 9C       		.byte	0x9c
 846 0208 14020000 		.4byte	0x214
 847 020c 0B       		.uleb128 0xb
 848 020d 3D010000 		.4byte	0x13d
 849 0211 01       		.uleb128 0x1
 850 0212 50       		.byte	0x50
 851 0213 00       		.byte	0
 852 0214 0D       		.uleb128 0xd
 853 0215 C8000000 		.4byte	0xc8
 854 0219 00000000 		.4byte	.LFB11
 855 021d 0C000000 		.4byte	.LFE11-.LFB11
 856 0221 01       		.uleb128 0x1
 857 0222 9C       		.byte	0x9c
 858 0223 0A       		.uleb128 0xa
 859 0224 16010000 		.4byte	0x116
 860 0228 00000000 		.4byte	.LFB12
 861 022c 0C000000 		.4byte	.LFE12-.LFB12
 862 0230 01       		.uleb128 0x1
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 30


 863 0231 9C       		.byte	0x9c
 864 0232 3E020000 		.4byte	0x23e
 865 0236 0B       		.uleb128 0xb
 866 0237 23010000 		.4byte	0x123
 867 023b 01       		.uleb128 0x1
 868 023c 50       		.byte	0x50
 869 023d 00       		.byte	0
 870 023e 0E       		.uleb128 0xe
 871 023f 66030000 		.4byte	.LASF33
 872 0243 01       		.byte	0x1
 873 0244 FC01     		.2byte	0x1fc
 874 0246 77000000 		.4byte	0x77
 875 024a 00000000 		.4byte	.LFB13
 876 024e 14000000 		.4byte	.LFE13-.LFB13
 877 0252 01       		.uleb128 0x1
 878 0253 9C       		.byte	0x9c
 879 0254 0F       		.uleb128 0xf
 880 0255 1B000000 		.4byte	.LASF35
 881 0259 01       		.byte	0x1
 882 025a B002     		.2byte	0x2b0
 883 025c 00000000 		.4byte	.LFB14
 884 0260 1C000000 		.4byte	.LFE14-.LFB14
 885 0264 01       		.uleb128 0x1
 886 0265 9C       		.byte	0x9c
 887 0266 7B020000 		.4byte	0x27b
 888 026a 11       		.uleb128 0x11
 889 026b 8A000000 		.4byte	.LASF37
 890 026f 01       		.byte	0x1
 891 0270 B002     		.2byte	0x2b0
 892 0272 6B000000 		.4byte	0x6b
 893 0276 00000000 		.4byte	.LLST0
 894 027a 00       		.byte	0
 895 027b 0A       		.uleb128 0xa
 896 027c FC000000 		.4byte	0xfc
 897 0280 00000000 		.4byte	.LFB15
 898 0284 0C000000 		.4byte	.LFE15-.LFB15
 899 0288 01       		.uleb128 0x1
 900 0289 9C       		.byte	0x9c
 901 028a 96020000 		.4byte	0x296
 902 028e 0B       		.uleb128 0xb
 903 028f 09010000 		.4byte	0x109
 904 0293 01       		.uleb128 0x1
 905 0294 50       		.byte	0x50
 906 0295 00       		.byte	0
 907 0296 0E       		.uleb128 0xe
 908 0297 C8020000 		.4byte	.LASF38
 909 029b 01       		.byte	0x1
 910 029c E602     		.2byte	0x2e6
 911 029e 6B000000 		.4byte	0x6b
 912 02a2 00000000 		.4byte	.LFB16
 913 02a6 0C000000 		.4byte	.LFE16-.LFB16
 914 02aa 01       		.uleb128 0x1
 915 02ab 9C       		.byte	0x9c
 916 02ac 0F       		.uleb128 0xf
 917 02ad FE010000 		.4byte	.LASF39
 918 02b1 01       		.byte	0x1
 919 02b2 FB02     		.2byte	0x2fb
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 31


 920 02b4 00000000 		.4byte	.LFB17
 921 02b8 18000000 		.4byte	.LFE17-.LFB17
 922 02bc 01       		.uleb128 0x1
 923 02bd 9C       		.byte	0x9c
 924 02be E3020000 		.4byte	0x2e3
 925 02c2 12       		.uleb128 0x12
 926 02c3 D5000000 		.4byte	0xd5
 927 02c7 00000000 		.4byte	.LBB14
 928 02cb 00000000 		.4byte	.Ldebug_ranges0+0
 929 02cf 01       		.byte	0x1
 930 02d0 FD02     		.2byte	0x2fd
 931 02d2 12       		.uleb128 0x12
 932 02d3 C8000000 		.4byte	0xc8
 933 02d7 02000000 		.4byte	.LBB17
 934 02db 18000000 		.4byte	.Ldebug_ranges0+0x18
 935 02df 01       		.byte	0x1
 936 02e0 FF02     		.2byte	0x2ff
 937 02e2 00       		.byte	0
 938 02e3 13       		.uleb128 0x13
 939 02e4 CD010000 		.4byte	.LASF40
 940 02e8 01       		.byte	0x1
 941 02e9 2B       		.byte	0x2b
 942 02ea 00000000 		.4byte	.LFB0
 943 02ee 54000000 		.4byte	.LFE0-.LFB0
 944 02f2 01       		.uleb128 0x1
 945 02f3 9C       		.byte	0x9c
 946 02f4 AA030000 		.4byte	0x3aa
 947 02f8 14       		.uleb128 0x14
 948 02f9 A4030000 		.4byte	.LASF47
 949 02fd 01       		.byte	0x1
 950 02fe 2F       		.byte	0x2f
 951 02ff 6B000000 		.4byte	0x6b
 952 0303 32000000 		.4byte	.LLST1
 953 0307 15       		.uleb128 0x15
 954 0308 30010000 		.4byte	0x130
 955 030c 02000000 		.4byte	.LBB22
 956 0310 08000000 		.4byte	.LBE22-.LBB22
 957 0314 01       		.byte	0x1
 958 0315 76       		.byte	0x76
 959 0316 24030000 		.4byte	0x324
 960 031a 16       		.uleb128 0x16
 961 031b 3D010000 		.4byte	0x13d
 962 031f 45000000 		.4byte	.LLST2
 963 0323 00       		.byte	0
 964 0324 15       		.uleb128 0x15
 965 0325 16010000 		.4byte	0x116
 966 0329 0A000000 		.4byte	.LBB24
 967 032d 04000000 		.4byte	.LBE24-.LBB24
 968 0331 01       		.byte	0x1
 969 0332 77       		.byte	0x77
 970 0333 41030000 		.4byte	0x341
 971 0337 16       		.uleb128 0x16
 972 0338 23010000 		.4byte	0x123
 973 033c 5A000000 		.4byte	.LLST3
 974 0340 00       		.byte	0
 975 0341 15       		.uleb128 0x15
 976 0342 FC000000 		.4byte	0xfc
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 32


 977 0346 1A000000 		.4byte	.LBB26
 978 034a 06000000 		.4byte	.LBE26-.LBB26
 979 034e 01       		.byte	0x1
 980 034f 7B       		.byte	0x7b
 981 0350 5E030000 		.4byte	0x35e
 982 0354 16       		.uleb128 0x16
 983 0355 09010000 		.4byte	0x109
 984 0359 6F000000 		.4byte	.LLST4
 985 035d 00       		.byte	0
 986 035e 15       		.uleb128 0x15
 987 035f E2000000 		.4byte	0xe2
 988 0363 3C000000 		.4byte	.LBB28
 989 0367 18000000 		.4byte	.LBE28-.LBB28
 990 036b 01       		.byte	0x1
 991 036c A2       		.byte	0xa2
 992 036d 7B030000 		.4byte	0x37b
 993 0371 16       		.uleb128 0x16
 994 0372 EF000000 		.4byte	0xef
 995 0376 83000000 		.4byte	.LLST5
 996 037a 00       		.byte	0
 997 037b 17       		.uleb128 0x17
 998 037c 24000000 		.4byte	.LVL12
 999 0380 E3030000 		.4byte	0x3e3
 1000 0384 17       		.uleb128 0x17
 1001 0385 32000000 		.4byte	.LVL13
 1002 0389 EE030000 		.4byte	0x3ee
 1003 038d 18       		.uleb128 0x18
 1004 038e 38000000 		.4byte	.LVL14
 1005 0392 54020000 		.4byte	0x254
 1006 0396 A0030000 		.4byte	0x3a0
 1007 039a 19       		.uleb128 0x19
 1008 039b 01       		.uleb128 0x1
 1009 039c 50       		.byte	0x50
 1010 039d 01       		.uleb128 0x1
 1011 039e 30       		.byte	0x30
 1012 039f 00       		.byte	0
 1013 03a0 17       		.uleb128 0x17
 1014 03a1 3C000000 		.4byte	.LVL15
 1015 03a5 AC020000 		.4byte	0x2ac
 1016 03a9 00       		.byte	0
 1017 03aa 13       		.uleb128 0x13
 1018 03ab F9020000 		.4byte	.LASF41
 1019 03af 01       		.byte	0x1
 1020 03b0 D7       		.byte	0xd7
 1021 03b1 00000000 		.4byte	.LFB2
 1022 03b5 1C000000 		.4byte	.LFE2-.LFB2
 1023 03b9 01       		.uleb128 0x1
 1024 03ba 9C       		.byte	0x9c
 1025 03bb D2030000 		.4byte	0x3d2
 1026 03bf 17       		.uleb128 0x17
 1027 03c0 0C000000 		.4byte	.LVL17
 1028 03c4 E3020000 		.4byte	0x2e3
 1029 03c8 1A       		.uleb128 0x1a
 1030 03c9 18000000 		.4byte	.LVL18
 1031 03cd 4A010000 		.4byte	0x14a
 1032 03d1 00       		.byte	0
 1033 03d2 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 33


 1034 03d3 7B030000 		.4byte	.LASF48
 1035 03d7 01       		.byte	0x1
 1036 03d8 1A       		.byte	0x1a
 1037 03d9 6B000000 		.4byte	0x6b
 1038 03dd 05       		.uleb128 0x5
 1039 03de 03       		.byte	0x3
 1040 03df 00000000 		.4byte	Rx_Timer_initVar
 1041 03e3 1C       		.uleb128 0x1c
 1042 03e4 46020000 		.4byte	.LASF42
 1043 03e8 46020000 		.4byte	.LASF42
 1044 03ec 03       		.byte	0x3
 1045 03ed 7D       		.byte	0x7d
 1046 03ee 1C       		.uleb128 0x1c
 1047 03ef 99020000 		.4byte	.LASF43
 1048 03f3 99020000 		.4byte	.LASF43
 1049 03f7 03       		.byte	0x3
 1050 03f8 7E       		.byte	0x7e
 1051 03f9 00       		.byte	0
 1052              		.section	.debug_abbrev,"",%progbits
 1053              	.Ldebug_abbrev0:
 1054 0000 01       		.uleb128 0x1
 1055 0001 11       		.uleb128 0x11
 1056 0002 01       		.byte	0x1
 1057 0003 25       		.uleb128 0x25
 1058 0004 0E       		.uleb128 0xe
 1059 0005 13       		.uleb128 0x13
 1060 0006 0B       		.uleb128 0xb
 1061 0007 03       		.uleb128 0x3
 1062 0008 0E       		.uleb128 0xe
 1063 0009 1B       		.uleb128 0x1b
 1064 000a 0E       		.uleb128 0xe
 1065 000b 55       		.uleb128 0x55
 1066 000c 17       		.uleb128 0x17
 1067 000d 11       		.uleb128 0x11
 1068 000e 01       		.uleb128 0x1
 1069 000f 10       		.uleb128 0x10
 1070 0010 17       		.uleb128 0x17
 1071 0011 00       		.byte	0
 1072 0012 00       		.byte	0
 1073 0013 02       		.uleb128 0x2
 1074 0014 24       		.uleb128 0x24
 1075 0015 00       		.byte	0
 1076 0016 0B       		.uleb128 0xb
 1077 0017 0B       		.uleb128 0xb
 1078 0018 3E       		.uleb128 0x3e
 1079 0019 0B       		.uleb128 0xb
 1080 001a 03       		.uleb128 0x3
 1081 001b 0E       		.uleb128 0xe
 1082 001c 00       		.byte	0
 1083 001d 00       		.byte	0
 1084 001e 03       		.uleb128 0x3
 1085 001f 24       		.uleb128 0x24
 1086 0020 00       		.byte	0
 1087 0021 0B       		.uleb128 0xb
 1088 0022 0B       		.uleb128 0xb
 1089 0023 3E       		.uleb128 0x3e
 1090 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 34


 1091 0025 03       		.uleb128 0x3
 1092 0026 08       		.uleb128 0x8
 1093 0027 00       		.byte	0
 1094 0028 00       		.byte	0
 1095 0029 04       		.uleb128 0x4
 1096 002a 16       		.uleb128 0x16
 1097 002b 00       		.byte	0
 1098 002c 03       		.uleb128 0x3
 1099 002d 0E       		.uleb128 0xe
 1100 002e 3A       		.uleb128 0x3a
 1101 002f 0B       		.uleb128 0xb
 1102 0030 3B       		.uleb128 0x3b
 1103 0031 05       		.uleb128 0x5
 1104 0032 49       		.uleb128 0x49
 1105 0033 13       		.uleb128 0x13
 1106 0034 00       		.byte	0
 1107 0035 00       		.byte	0
 1108 0036 05       		.uleb128 0x5
 1109 0037 35       		.uleb128 0x35
 1110 0038 00       		.byte	0
 1111 0039 49       		.uleb128 0x49
 1112 003a 13       		.uleb128 0x13
 1113 003b 00       		.byte	0
 1114 003c 00       		.byte	0
 1115 003d 06       		.uleb128 0x6
 1116 003e 2E       		.uleb128 0x2e
 1117 003f 00       		.byte	0
 1118 0040 3F       		.uleb128 0x3f
 1119 0041 19       		.uleb128 0x19
 1120 0042 03       		.uleb128 0x3
 1121 0043 0E       		.uleb128 0xe
 1122 0044 3A       		.uleb128 0x3a
 1123 0045 0B       		.uleb128 0xb
 1124 0046 3B       		.uleb128 0x3b
 1125 0047 05       		.uleb128 0x5
 1126 0048 27       		.uleb128 0x27
 1127 0049 19       		.uleb128 0x19
 1128 004a 49       		.uleb128 0x49
 1129 004b 13       		.uleb128 0x13
 1130 004c 20       		.uleb128 0x20
 1131 004d 0B       		.uleb128 0xb
 1132 004e 00       		.byte	0
 1133 004f 00       		.byte	0
 1134 0050 07       		.uleb128 0x7
 1135 0051 2E       		.uleb128 0x2e
 1136 0052 01       		.byte	0x1
 1137 0053 3F       		.uleb128 0x3f
 1138 0054 19       		.uleb128 0x19
 1139 0055 03       		.uleb128 0x3
 1140 0056 0E       		.uleb128 0xe
 1141 0057 3A       		.uleb128 0x3a
 1142 0058 0B       		.uleb128 0xb
 1143 0059 3B       		.uleb128 0x3b
 1144 005a 05       		.uleb128 0x5
 1145 005b 27       		.uleb128 0x27
 1146 005c 19       		.uleb128 0x19
 1147 005d 20       		.uleb128 0x20
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 35


 1148 005e 0B       		.uleb128 0xb
 1149 005f 01       		.uleb128 0x1
 1150 0060 13       		.uleb128 0x13
 1151 0061 00       		.byte	0
 1152 0062 00       		.byte	0
 1153 0063 08       		.uleb128 0x8
 1154 0064 05       		.uleb128 0x5
 1155 0065 00       		.byte	0
 1156 0066 03       		.uleb128 0x3
 1157 0067 0E       		.uleb128 0xe
 1158 0068 3A       		.uleb128 0x3a
 1159 0069 0B       		.uleb128 0xb
 1160 006a 3B       		.uleb128 0x3b
 1161 006b 05       		.uleb128 0x5
 1162 006c 49       		.uleb128 0x49
 1163 006d 13       		.uleb128 0x13
 1164 006e 00       		.byte	0
 1165 006f 00       		.byte	0
 1166 0070 09       		.uleb128 0x9
 1167 0071 2E       		.uleb128 0x2e
 1168 0072 00       		.byte	0
 1169 0073 3F       		.uleb128 0x3f
 1170 0074 19       		.uleb128 0x19
 1171 0075 03       		.uleb128 0x3
 1172 0076 0E       		.uleb128 0xe
 1173 0077 3A       		.uleb128 0x3a
 1174 0078 0B       		.uleb128 0xb
 1175 0079 3B       		.uleb128 0x3b
 1176 007a 0B       		.uleb128 0xb
 1177 007b 27       		.uleb128 0x27
 1178 007c 19       		.uleb128 0x19
 1179 007d 11       		.uleb128 0x11
 1180 007e 01       		.uleb128 0x1
 1181 007f 12       		.uleb128 0x12
 1182 0080 06       		.uleb128 0x6
 1183 0081 40       		.uleb128 0x40
 1184 0082 18       		.uleb128 0x18
 1185 0083 9742     		.uleb128 0x2117
 1186 0085 19       		.uleb128 0x19
 1187 0086 00       		.byte	0
 1188 0087 00       		.byte	0
 1189 0088 0A       		.uleb128 0xa
 1190 0089 2E       		.uleb128 0x2e
 1191 008a 01       		.byte	0x1
 1192 008b 31       		.uleb128 0x31
 1193 008c 13       		.uleb128 0x13
 1194 008d 11       		.uleb128 0x11
 1195 008e 01       		.uleb128 0x1
 1196 008f 12       		.uleb128 0x12
 1197 0090 06       		.uleb128 0x6
 1198 0091 40       		.uleb128 0x40
 1199 0092 18       		.uleb128 0x18
 1200 0093 9742     		.uleb128 0x2117
 1201 0095 19       		.uleb128 0x19
 1202 0096 01       		.uleb128 0x1
 1203 0097 13       		.uleb128 0x13
 1204 0098 00       		.byte	0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 36


 1205 0099 00       		.byte	0
 1206 009a 0B       		.uleb128 0xb
 1207 009b 05       		.uleb128 0x5
 1208 009c 00       		.byte	0
 1209 009d 31       		.uleb128 0x31
 1210 009e 13       		.uleb128 0x13
 1211 009f 02       		.uleb128 0x2
 1212 00a0 18       		.uleb128 0x18
 1213 00a1 00       		.byte	0
 1214 00a2 00       		.byte	0
 1215 00a3 0C       		.uleb128 0xc
 1216 00a4 2E       		.uleb128 0x2e
 1217 00a5 00       		.byte	0
 1218 00a6 3F       		.uleb128 0x3f
 1219 00a7 19       		.uleb128 0x19
 1220 00a8 03       		.uleb128 0x3
 1221 00a9 0E       		.uleb128 0xe
 1222 00aa 3A       		.uleb128 0x3a
 1223 00ab 0B       		.uleb128 0xb
 1224 00ac 3B       		.uleb128 0x3b
 1225 00ad 05       		.uleb128 0x5
 1226 00ae 27       		.uleb128 0x27
 1227 00af 19       		.uleb128 0x19
 1228 00b0 11       		.uleb128 0x11
 1229 00b1 01       		.uleb128 0x1
 1230 00b2 12       		.uleb128 0x12
 1231 00b3 06       		.uleb128 0x6
 1232 00b4 40       		.uleb128 0x40
 1233 00b5 18       		.uleb128 0x18
 1234 00b6 9742     		.uleb128 0x2117
 1235 00b8 19       		.uleb128 0x19
 1236 00b9 00       		.byte	0
 1237 00ba 00       		.byte	0
 1238 00bb 0D       		.uleb128 0xd
 1239 00bc 2E       		.uleb128 0x2e
 1240 00bd 00       		.byte	0
 1241 00be 31       		.uleb128 0x31
 1242 00bf 13       		.uleb128 0x13
 1243 00c0 11       		.uleb128 0x11
 1244 00c1 01       		.uleb128 0x1
 1245 00c2 12       		.uleb128 0x12
 1246 00c3 06       		.uleb128 0x6
 1247 00c4 40       		.uleb128 0x40
 1248 00c5 18       		.uleb128 0x18
 1249 00c6 9742     		.uleb128 0x2117
 1250 00c8 19       		.uleb128 0x19
 1251 00c9 00       		.byte	0
 1252 00ca 00       		.byte	0
 1253 00cb 0E       		.uleb128 0xe
 1254 00cc 2E       		.uleb128 0x2e
 1255 00cd 00       		.byte	0
 1256 00ce 3F       		.uleb128 0x3f
 1257 00cf 19       		.uleb128 0x19
 1258 00d0 03       		.uleb128 0x3
 1259 00d1 0E       		.uleb128 0xe
 1260 00d2 3A       		.uleb128 0x3a
 1261 00d3 0B       		.uleb128 0xb
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 37


 1262 00d4 3B       		.uleb128 0x3b
 1263 00d5 05       		.uleb128 0x5
 1264 00d6 27       		.uleb128 0x27
 1265 00d7 19       		.uleb128 0x19
 1266 00d8 49       		.uleb128 0x49
 1267 00d9 13       		.uleb128 0x13
 1268 00da 11       		.uleb128 0x11
 1269 00db 01       		.uleb128 0x1
 1270 00dc 12       		.uleb128 0x12
 1271 00dd 06       		.uleb128 0x6
 1272 00de 40       		.uleb128 0x40
 1273 00df 18       		.uleb128 0x18
 1274 00e0 9742     		.uleb128 0x2117
 1275 00e2 19       		.uleb128 0x19
 1276 00e3 00       		.byte	0
 1277 00e4 00       		.byte	0
 1278 00e5 0F       		.uleb128 0xf
 1279 00e6 2E       		.uleb128 0x2e
 1280 00e7 01       		.byte	0x1
 1281 00e8 3F       		.uleb128 0x3f
 1282 00e9 19       		.uleb128 0x19
 1283 00ea 03       		.uleb128 0x3
 1284 00eb 0E       		.uleb128 0xe
 1285 00ec 3A       		.uleb128 0x3a
 1286 00ed 0B       		.uleb128 0xb
 1287 00ee 3B       		.uleb128 0x3b
 1288 00ef 05       		.uleb128 0x5
 1289 00f0 27       		.uleb128 0x27
 1290 00f1 19       		.uleb128 0x19
 1291 00f2 11       		.uleb128 0x11
 1292 00f3 01       		.uleb128 0x1
 1293 00f4 12       		.uleb128 0x12
 1294 00f5 06       		.uleb128 0x6
 1295 00f6 40       		.uleb128 0x40
 1296 00f7 18       		.uleb128 0x18
 1297 00f8 9742     		.uleb128 0x2117
 1298 00fa 19       		.uleb128 0x19
 1299 00fb 01       		.uleb128 0x1
 1300 00fc 13       		.uleb128 0x13
 1301 00fd 00       		.byte	0
 1302 00fe 00       		.byte	0
 1303 00ff 10       		.uleb128 0x10
 1304 0100 05       		.uleb128 0x5
 1305 0101 00       		.byte	0
 1306 0102 03       		.uleb128 0x3
 1307 0103 0E       		.uleb128 0xe
 1308 0104 3A       		.uleb128 0x3a
 1309 0105 0B       		.uleb128 0xb
 1310 0106 3B       		.uleb128 0x3b
 1311 0107 05       		.uleb128 0x5
 1312 0108 49       		.uleb128 0x49
 1313 0109 13       		.uleb128 0x13
 1314 010a 02       		.uleb128 0x2
 1315 010b 18       		.uleb128 0x18
 1316 010c 00       		.byte	0
 1317 010d 00       		.byte	0
 1318 010e 11       		.uleb128 0x11
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 38


 1319 010f 05       		.uleb128 0x5
 1320 0110 00       		.byte	0
 1321 0111 03       		.uleb128 0x3
 1322 0112 0E       		.uleb128 0xe
 1323 0113 3A       		.uleb128 0x3a
 1324 0114 0B       		.uleb128 0xb
 1325 0115 3B       		.uleb128 0x3b
 1326 0116 05       		.uleb128 0x5
 1327 0117 49       		.uleb128 0x49
 1328 0118 13       		.uleb128 0x13
 1329 0119 02       		.uleb128 0x2
 1330 011a 17       		.uleb128 0x17
 1331 011b 00       		.byte	0
 1332 011c 00       		.byte	0
 1333 011d 12       		.uleb128 0x12
 1334 011e 1D       		.uleb128 0x1d
 1335 011f 00       		.byte	0
 1336 0120 31       		.uleb128 0x31
 1337 0121 13       		.uleb128 0x13
 1338 0122 52       		.uleb128 0x52
 1339 0123 01       		.uleb128 0x1
 1340 0124 55       		.uleb128 0x55
 1341 0125 17       		.uleb128 0x17
 1342 0126 58       		.uleb128 0x58
 1343 0127 0B       		.uleb128 0xb
 1344 0128 59       		.uleb128 0x59
 1345 0129 05       		.uleb128 0x5
 1346 012a 00       		.byte	0
 1347 012b 00       		.byte	0
 1348 012c 13       		.uleb128 0x13
 1349 012d 2E       		.uleb128 0x2e
 1350 012e 01       		.byte	0x1
 1351 012f 3F       		.uleb128 0x3f
 1352 0130 19       		.uleb128 0x19
 1353 0131 03       		.uleb128 0x3
 1354 0132 0E       		.uleb128 0xe
 1355 0133 3A       		.uleb128 0x3a
 1356 0134 0B       		.uleb128 0xb
 1357 0135 3B       		.uleb128 0x3b
 1358 0136 0B       		.uleb128 0xb
 1359 0137 27       		.uleb128 0x27
 1360 0138 19       		.uleb128 0x19
 1361 0139 11       		.uleb128 0x11
 1362 013a 01       		.uleb128 0x1
 1363 013b 12       		.uleb128 0x12
 1364 013c 06       		.uleb128 0x6
 1365 013d 40       		.uleb128 0x40
 1366 013e 18       		.uleb128 0x18
 1367 013f 9742     		.uleb128 0x2117
 1368 0141 19       		.uleb128 0x19
 1369 0142 01       		.uleb128 0x1
 1370 0143 13       		.uleb128 0x13
 1371 0144 00       		.byte	0
 1372 0145 00       		.byte	0
 1373 0146 14       		.uleb128 0x14
 1374 0147 34       		.uleb128 0x34
 1375 0148 00       		.byte	0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 39


 1376 0149 03       		.uleb128 0x3
 1377 014a 0E       		.uleb128 0xe
 1378 014b 3A       		.uleb128 0x3a
 1379 014c 0B       		.uleb128 0xb
 1380 014d 3B       		.uleb128 0x3b
 1381 014e 0B       		.uleb128 0xb
 1382 014f 49       		.uleb128 0x49
 1383 0150 13       		.uleb128 0x13
 1384 0151 02       		.uleb128 0x2
 1385 0152 17       		.uleb128 0x17
 1386 0153 00       		.byte	0
 1387 0154 00       		.byte	0
 1388 0155 15       		.uleb128 0x15
 1389 0156 1D       		.uleb128 0x1d
 1390 0157 01       		.byte	0x1
 1391 0158 31       		.uleb128 0x31
 1392 0159 13       		.uleb128 0x13
 1393 015a 11       		.uleb128 0x11
 1394 015b 01       		.uleb128 0x1
 1395 015c 12       		.uleb128 0x12
 1396 015d 06       		.uleb128 0x6
 1397 015e 58       		.uleb128 0x58
 1398 015f 0B       		.uleb128 0xb
 1399 0160 59       		.uleb128 0x59
 1400 0161 0B       		.uleb128 0xb
 1401 0162 01       		.uleb128 0x1
 1402 0163 13       		.uleb128 0x13
 1403 0164 00       		.byte	0
 1404 0165 00       		.byte	0
 1405 0166 16       		.uleb128 0x16
 1406 0167 05       		.uleb128 0x5
 1407 0168 00       		.byte	0
 1408 0169 31       		.uleb128 0x31
 1409 016a 13       		.uleb128 0x13
 1410 016b 02       		.uleb128 0x2
 1411 016c 17       		.uleb128 0x17
 1412 016d 00       		.byte	0
 1413 016e 00       		.byte	0
 1414 016f 17       		.uleb128 0x17
 1415 0170 898201   		.uleb128 0x4109
 1416 0173 00       		.byte	0
 1417 0174 11       		.uleb128 0x11
 1418 0175 01       		.uleb128 0x1
 1419 0176 31       		.uleb128 0x31
 1420 0177 13       		.uleb128 0x13
 1421 0178 00       		.byte	0
 1422 0179 00       		.byte	0
 1423 017a 18       		.uleb128 0x18
 1424 017b 898201   		.uleb128 0x4109
 1425 017e 01       		.byte	0x1
 1426 017f 11       		.uleb128 0x11
 1427 0180 01       		.uleb128 0x1
 1428 0181 31       		.uleb128 0x31
 1429 0182 13       		.uleb128 0x13
 1430 0183 01       		.uleb128 0x1
 1431 0184 13       		.uleb128 0x13
 1432 0185 00       		.byte	0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 40


 1433 0186 00       		.byte	0
 1434 0187 19       		.uleb128 0x19
 1435 0188 8A8201   		.uleb128 0x410a
 1436 018b 00       		.byte	0
 1437 018c 02       		.uleb128 0x2
 1438 018d 18       		.uleb128 0x18
 1439 018e 9142     		.uleb128 0x2111
 1440 0190 18       		.uleb128 0x18
 1441 0191 00       		.byte	0
 1442 0192 00       		.byte	0
 1443 0193 1A       		.uleb128 0x1a
 1444 0194 898201   		.uleb128 0x4109
 1445 0197 00       		.byte	0
 1446 0198 11       		.uleb128 0x11
 1447 0199 01       		.uleb128 0x1
 1448 019a 9542     		.uleb128 0x2115
 1449 019c 19       		.uleb128 0x19
 1450 019d 31       		.uleb128 0x31
 1451 019e 13       		.uleb128 0x13
 1452 019f 00       		.byte	0
 1453 01a0 00       		.byte	0
 1454 01a1 1B       		.uleb128 0x1b
 1455 01a2 34       		.uleb128 0x34
 1456 01a3 00       		.byte	0
 1457 01a4 03       		.uleb128 0x3
 1458 01a5 0E       		.uleb128 0xe
 1459 01a6 3A       		.uleb128 0x3a
 1460 01a7 0B       		.uleb128 0xb
 1461 01a8 3B       		.uleb128 0x3b
 1462 01a9 0B       		.uleb128 0xb
 1463 01aa 49       		.uleb128 0x49
 1464 01ab 13       		.uleb128 0x13
 1465 01ac 3F       		.uleb128 0x3f
 1466 01ad 19       		.uleb128 0x19
 1467 01ae 02       		.uleb128 0x2
 1468 01af 18       		.uleb128 0x18
 1469 01b0 00       		.byte	0
 1470 01b1 00       		.byte	0
 1471 01b2 1C       		.uleb128 0x1c
 1472 01b3 2E       		.uleb128 0x2e
 1473 01b4 00       		.byte	0
 1474 01b5 3F       		.uleb128 0x3f
 1475 01b6 19       		.uleb128 0x19
 1476 01b7 3C       		.uleb128 0x3c
 1477 01b8 19       		.uleb128 0x19
 1478 01b9 6E       		.uleb128 0x6e
 1479 01ba 0E       		.uleb128 0xe
 1480 01bb 03       		.uleb128 0x3
 1481 01bc 0E       		.uleb128 0xe
 1482 01bd 3A       		.uleb128 0x3a
 1483 01be 0B       		.uleb128 0xb
 1484 01bf 3B       		.uleb128 0x3b
 1485 01c0 0B       		.uleb128 0xb
 1486 01c1 00       		.byte	0
 1487 01c2 00       		.byte	0
 1488 01c3 00       		.byte	0
 1489              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 41


 1490              	.Ldebug_loc0:
 1491              	.LLST0:
 1492 0000 00000000 		.4byte	.LVL4
 1493 0004 00000000 		.4byte	.LVL4
 1494 0008 0100     		.2byte	0x1
 1495 000a 50       		.byte	0x50
 1496 000b 00000000 		.4byte	.LVL4
 1497 000f 06000000 		.4byte	.LVL5
 1498 0013 0500     		.2byte	0x5
 1499 0015 70       		.byte	0x70
 1500 0016 00       		.sleb128 0
 1501 0017 33       		.byte	0x33
 1502 0018 1A       		.byte	0x1a
 1503 0019 9F       		.byte	0x9f
 1504 001a 06000000 		.4byte	.LVL5
 1505 001e 1C000000 		.4byte	.LFE14
 1506 0022 0600     		.2byte	0x6
 1507 0024 F3       		.byte	0xf3
 1508 0025 01       		.uleb128 0x1
 1509 0026 50       		.byte	0x50
 1510 0027 33       		.byte	0x33
 1511 0028 1A       		.byte	0x1a
 1512 0029 9F       		.byte	0x9f
 1513 002a 00000000 		.4byte	0
 1514 002e 00000000 		.4byte	0
 1515              	.LLST1:
 1516 0032 24000000 		.4byte	.LVL12
 1517 0036 31000000 		.4byte	.LVL13-1
 1518 003a 0100     		.2byte	0x1
 1519 003c 50       		.byte	0x50
 1520 003d 00000000 		.4byte	0
 1521 0041 00000000 		.4byte	0
 1522              	.LLST2:
 1523 0045 00000000 		.4byte	.LVL7
 1524 0049 0A000000 		.4byte	.LVL8
 1525 004d 0300     		.2byte	0x3
 1526 004f 09       		.byte	0x9
 1527 0050 FF       		.byte	0xff
 1528 0051 9F       		.byte	0x9f
 1529 0052 00000000 		.4byte	0
 1530 0056 00000000 		.4byte	0
 1531              	.LLST3:
 1532 005a 0A000000 		.4byte	.LVL8
 1533 005e 0E000000 		.4byte	.LVL9
 1534 0062 0300     		.2byte	0x3
 1535 0064 09       		.byte	0x9
 1536 0065 FF       		.byte	0xff
 1537 0066 9F       		.byte	0x9f
 1538 0067 00000000 		.4byte	0
 1539 006b 00000000 		.4byte	0
 1540              	.LLST4:
 1541 006f 1A000000 		.4byte	.LVL10
 1542 0073 20000000 		.4byte	.LVL11
 1543 0077 0200     		.2byte	0x2
 1544 0079 3A       		.byte	0x3a
 1545 007a 9F       		.byte	0x9f
 1546 007b 00000000 		.4byte	0
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 42


 1547 007f 00000000 		.4byte	0
 1548              	.LLST5:
 1549 0083 3C000000 		.4byte	.LVL15
 1550 0087 42000000 		.4byte	.LVL16
 1551 008b 0200     		.2byte	0x2
 1552 008d 32       		.byte	0x32
 1553 008e 9F       		.byte	0x9f
 1554 008f 00000000 		.4byte	0
 1555 0093 00000000 		.4byte	0
 1556              		.section	.debug_aranges,"",%progbits
 1557 0000 A4000000 		.4byte	0xa4
 1558 0004 0200     		.2byte	0x2
 1559 0006 00000000 		.4byte	.Ldebug_info0
 1560 000a 04       		.byte	0x4
 1561 000b 00       		.byte	0
 1562 000c 0000     		.2byte	0
 1563 000e 0000     		.2byte	0
 1564 0010 00000000 		.4byte	.LFB1
 1565 0014 10000000 		.4byte	.LFE1-.LFB1
 1566 0018 00000000 		.4byte	.LFB3
 1567 001c 10000000 		.4byte	.LFE3-.LFB3
 1568 0020 00000000 		.4byte	.LFB4
 1569 0024 0C000000 		.4byte	.LFE4-.LFB4
 1570 0028 00000000 		.4byte	.LFB5
 1571 002c 0C000000 		.4byte	.LFE5-.LFB5
 1572 0030 00000000 		.4byte	.LFB6
 1573 0034 0C000000 		.4byte	.LFE6-.LFB6
 1574 0038 00000000 		.4byte	.LFB7
 1575 003c 0C000000 		.4byte	.LFE7-.LFB7
 1576 0040 00000000 		.4byte	.LFB8
 1577 0044 0C000000 		.4byte	.LFE8-.LFB8
 1578 0048 00000000 		.4byte	.LFB9
 1579 004c 0C000000 		.4byte	.LFE9-.LFB9
 1580 0050 00000000 		.4byte	.LFB10
 1581 0054 0C000000 		.4byte	.LFE10-.LFB10
 1582 0058 00000000 		.4byte	.LFB11
 1583 005c 0C000000 		.4byte	.LFE11-.LFB11
 1584 0060 00000000 		.4byte	.LFB12
 1585 0064 0C000000 		.4byte	.LFE12-.LFB12
 1586 0068 00000000 		.4byte	.LFB13
 1587 006c 14000000 		.4byte	.LFE13-.LFB13
 1588 0070 00000000 		.4byte	.LFB14
 1589 0074 1C000000 		.4byte	.LFE14-.LFB14
 1590 0078 00000000 		.4byte	.LFB15
 1591 007c 0C000000 		.4byte	.LFE15-.LFB15
 1592 0080 00000000 		.4byte	.LFB16
 1593 0084 0C000000 		.4byte	.LFE16-.LFB16
 1594 0088 00000000 		.4byte	.LFB17
 1595 008c 18000000 		.4byte	.LFE17-.LFB17
 1596 0090 00000000 		.4byte	.LFB0
 1597 0094 54000000 		.4byte	.LFE0-.LFB0
 1598 0098 00000000 		.4byte	.LFB2
 1599 009c 1C000000 		.4byte	.LFE2-.LFB2
 1600 00a0 00000000 		.4byte	0
 1601 00a4 00000000 		.4byte	0
 1602              		.section	.debug_ranges,"",%progbits
 1603              	.Ldebug_ranges0:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 43


 1604 0000 00000000 		.4byte	.LBB14
 1605 0004 02000000 		.4byte	.LBE14
 1606 0008 04000000 		.4byte	.LBB20
 1607 000c 06000000 		.4byte	.LBE20
 1608 0010 00000000 		.4byte	0
 1609 0014 00000000 		.4byte	0
 1610 0018 02000000 		.4byte	.LBB17
 1611 001c 04000000 		.4byte	.LBE17
 1612 0020 0A000000 		.4byte	.LBB21
 1613 0024 0E000000 		.4byte	.LBE21
 1614 0028 00000000 		.4byte	0
 1615 002c 00000000 		.4byte	0
 1616 0030 00000000 		.4byte	.LFB1
 1617 0034 10000000 		.4byte	.LFE1
 1618 0038 00000000 		.4byte	.LFB3
 1619 003c 10000000 		.4byte	.LFE3
 1620 0040 00000000 		.4byte	.LFB4
 1621 0044 0C000000 		.4byte	.LFE4
 1622 0048 00000000 		.4byte	.LFB5
 1623 004c 0C000000 		.4byte	.LFE5
 1624 0050 00000000 		.4byte	.LFB6
 1625 0054 0C000000 		.4byte	.LFE6
 1626 0058 00000000 		.4byte	.LFB7
 1627 005c 0C000000 		.4byte	.LFE7
 1628 0060 00000000 		.4byte	.LFB8
 1629 0064 0C000000 		.4byte	.LFE8
 1630 0068 00000000 		.4byte	.LFB9
 1631 006c 0C000000 		.4byte	.LFE9
 1632 0070 00000000 		.4byte	.LFB10
 1633 0074 0C000000 		.4byte	.LFE10
 1634 0078 00000000 		.4byte	.LFB11
 1635 007c 0C000000 		.4byte	.LFE11
 1636 0080 00000000 		.4byte	.LFB12
 1637 0084 0C000000 		.4byte	.LFE12
 1638 0088 00000000 		.4byte	.LFB13
 1639 008c 14000000 		.4byte	.LFE13
 1640 0090 00000000 		.4byte	.LFB14
 1641 0094 1C000000 		.4byte	.LFE14
 1642 0098 00000000 		.4byte	.LFB15
 1643 009c 0C000000 		.4byte	.LFE15
 1644 00a0 00000000 		.4byte	.LFB16
 1645 00a4 0C000000 		.4byte	.LFE16
 1646 00a8 00000000 		.4byte	.LFB17
 1647 00ac 18000000 		.4byte	.LFE17
 1648 00b0 00000000 		.4byte	.LFB0
 1649 00b4 54000000 		.4byte	.LFE0
 1650 00b8 00000000 		.4byte	.LFB2
 1651 00bc 1C000000 		.4byte	.LFE2
 1652 00c0 00000000 		.4byte	0
 1653 00c4 00000000 		.4byte	0
 1654              		.section	.debug_line,"",%progbits
 1655              	.Ldebug_line0:
 1656 0000 C8010000 		.section	.debug_str,"MS",%progbits,1
 1656      02005000 
 1656      00000201 
 1656      FB0E0D00 
 1656      01010101 
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 44


 1657              	.LASF24:
 1658 0000 52785F54 		.ascii	"Rx_Timer_WriteCounter\000"
 1658      696D6572 
 1658      5F577269 
 1658      7465436F 
 1658      756E7465 
 1659              	.LASF13:
 1660 0016 63686172 		.ascii	"char\000"
 1660      00
 1661              	.LASF35:
 1662 001b 52785F54 		.ascii	"Rx_Timer_SetInterruptCount\000"
 1662      696D6572 
 1662      5F536574 
 1662      496E7465 
 1662      72727570 
 1663              	.LASF34:
 1664 0036 52785F54 		.ascii	"Rx_Timer_WriteControlRegister\000"
 1664      696D6572 
 1664      5F577269 
 1664      7465436F 
 1664      6E74726F 
 1665              	.LASF27:
 1666 0054 70657269 		.ascii	"period\000"
 1666      6F6400
 1667              	.LASF3:
 1668 005b 73686F72 		.ascii	"short unsigned int\000"
 1668      7420756E 
 1668      7369676E 
 1668      65642069 
 1668      6E7400
 1669              	.LASF18:
 1670 006e 52785F54 		.ascii	"Rx_Timer_ReadCapture\000"
 1670      696D6572 
 1670      5F526561 
 1670      64436170 
 1670      74757265 
 1671              	.LASF12:
 1672 0083 646F7562 		.ascii	"double\000"
 1672      6C6500
 1673              	.LASF37:
 1674 008a 696E7465 		.ascii	"interruptCount\000"
 1674      72727570 
 1674      74436F75 
 1674      6E7400
 1675              	.LASF11:
 1676 0099 666C6F61 		.ascii	"float\000"
 1676      7400
 1677              	.LASF25:
 1678 009f 636F756E 		.ascii	"counter\000"
 1678      74657200 
 1679              	.LASF7:
 1680 00a7 6C6F6E67 		.ascii	"long long unsigned int\000"
 1680      206C6F6E 
 1680      6720756E 
 1680      7369676E 
 1680      65642069 
 1681              	.LASF1:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 45


 1682 00be 756E7369 		.ascii	"unsigned char\000"
 1682      676E6564 
 1682      20636861 
 1682      7200
 1683              	.LASF20:
 1684 00cc 52785F54 		.ascii	"Rx_Timer_SetInterruptMode\000"
 1684      696D6572 
 1684      5F536574 
 1684      496E7465 
 1684      72727570 
 1685              	.LASF32:
 1686 00e6 52785F54 		.ascii	"Rx_Timer_ReadPeriod\000"
 1686      696D6572 
 1686      5F526561 
 1686      64506572 
 1686      696F6400 
 1687              	.LASF14:
 1688 00fa 72656738 		.ascii	"reg8\000"
 1688      00
 1689              	.LASF45:
 1690 00ff 47656E65 		.ascii	"Generated_Source\\PSoC5\\Rx_Timer.c\000"
 1690      72617465 
 1690      645F536F 
 1690      75726365 
 1690      5C50536F 
 1691              	.LASF28:
 1692 0121 52785F54 		.ascii	"Rx_Timer_Enable\000"
 1692      696D6572 
 1692      5F456E61 
 1692      626C6500 
 1693              	.LASF44:
 1694 0131 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1694      43313120 
 1694      352E342E 
 1694      31203230 
 1694      31363036 
 1695 0164 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1695      20726576 
 1695      6973696F 
 1695      6E203233 
 1695      37373135 
 1696 0197 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1696      66756E63 
 1696      74696F6E 
 1696      2D736563 
 1696      74696F6E 
 1697              	.LASF9:
 1698 01bf 75696E74 		.ascii	"uint8\000"
 1698      3800
 1699              	.LASF36:
 1700 01c5 636F6E74 		.ascii	"control\000"
 1700      726F6C00 
 1701              	.LASF40:
 1702 01cd 52785F54 		.ascii	"Rx_Timer_Init\000"
 1702      696D6572 
 1702      5F496E69 
 1702      7400
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 46


 1703              	.LASF46:
 1704 01db 453A5C54 		.ascii	"E:\\TRC3500\\Psoc\\BCD\\Design01.cydsn\000"
 1704      52433335 
 1704      30305C50 
 1704      736F635C 
 1704      4243445C 
 1705              	.LASF39:
 1706 01fe 52785F54 		.ascii	"Rx_Timer_ClearFIFO\000"
 1706      696D6572 
 1706      5F436C65 
 1706      61724649 
 1706      464F00
 1707              	.LASF30:
 1708 0211 52785F54 		.ascii	"Rx_Timer_SoftwareCapture\000"
 1708      696D6572 
 1708      5F536F66 
 1708      74776172 
 1708      65436170 
 1709              	.LASF10:
 1710 022a 75696E74 		.ascii	"uint16\000"
 1710      313600
 1711              	.LASF26:
 1712 0231 52785F54 		.ascii	"Rx_Timer_WritePeriod\000"
 1712      696D6572 
 1712      5F577269 
 1712      74655065 
 1712      72696F64 
 1713              	.LASF42:
 1714 0246 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1714      74657243 
 1714      72697469 
 1714      63616C53 
 1714      65637469 
 1715              	.LASF5:
 1716 025d 6C6F6E67 		.ascii	"long unsigned int\000"
 1716      20756E73 
 1716      69676E65 
 1716      6420696E 
 1716      7400
 1717              	.LASF8:
 1718 026f 756E7369 		.ascii	"unsigned int\000"
 1718      676E6564 
 1718      20696E74 
 1718      00
 1719              	.LASF31:
 1720 027c 52785F54 		.ascii	"Rx_Timer_ReadControlRegister\000"
 1720      696D6572 
 1720      5F526561 
 1720      64436F6E 
 1720      74726F6C 
 1721              	.LASF43:
 1722 0299 43794578 		.ascii	"CyExitCriticalSection\000"
 1722      69744372 
 1722      69746963 
 1722      616C5365 
 1722      6374696F 
 1723              	.LASF21:
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 47


 1724 02af 52785F54 		.ascii	"Rx_Timer_SetCaptureCount\000"
 1724      696D6572 
 1724      5F536574 
 1724      43617074 
 1724      75726543 
 1725              	.LASF38:
 1726 02c8 52785F54 		.ascii	"Rx_Timer_ReadCaptureCount\000"
 1726      696D6572 
 1726      5F526561 
 1726      64436170 
 1726      74757265 
 1727              	.LASF17:
 1728 02e2 73697A65 		.ascii	"sizetype\000"
 1728      74797065 
 1728      00
 1729              	.LASF6:
 1730 02eb 6C6F6E67 		.ascii	"long long int\000"
 1730      206C6F6E 
 1730      6720696E 
 1730      7400
 1731              	.LASF41:
 1732 02f9 52785F54 		.ascii	"Rx_Timer_Start\000"
 1732      696D6572 
 1732      5F537461 
 1732      727400
 1733              	.LASF22:
 1734 0308 696E7465 		.ascii	"interruptMode\000"
 1734      72727570 
 1734      744D6F64 
 1734      6500
 1735              	.LASF19:
 1736 0316 52785F54 		.ascii	"Rx_Timer_ReadStatusRegister\000"
 1736      696D6572 
 1736      5F526561 
 1736      64537461 
 1736      74757352 
 1737              	.LASF29:
 1738 0332 52785F54 		.ascii	"Rx_Timer_Stop\000"
 1738      696D6572 
 1738      5F53746F 
 1738      7000
 1739              	.LASF2:
 1740 0340 73686F72 		.ascii	"short int\000"
 1740      7420696E 
 1740      7400
 1741              	.LASF15:
 1742 034a 72656731 		.ascii	"reg16\000"
 1742      3600
 1743              	.LASF23:
 1744 0350 63617074 		.ascii	"captureCount\000"
 1744      75726543 
 1744      6F756E74 
 1744      00
 1745              	.LASF4:
 1746 035d 6C6F6E67 		.ascii	"long int\000"
 1746      20696E74 
 1746      00
ARM GAS  C:\Users\Zwe\AppData\Local\Temp\ccfgNccr.s 			page 48


 1747              	.LASF33:
 1748 0366 52785F54 		.ascii	"Rx_Timer_ReadCounter\000"
 1748      696D6572 
 1748      5F526561 
 1748      64436F75 
 1748      6E746572 
 1749              	.LASF48:
 1750 037b 52785F54 		.ascii	"Rx_Timer_initVar\000"
 1750      696D6572 
 1750      5F696E69 
 1750      74566172 
 1750      00
 1751              	.LASF16:
 1752 038c 6C6F6E67 		.ascii	"long double\000"
 1752      20646F75 
 1752      626C6500 
 1753              	.LASF0:
 1754 0398 7369676E 		.ascii	"signed char\000"
 1754      65642063 
 1754      68617200 
 1755              	.LASF47:
 1756 03a4 52785F54 		.ascii	"Rx_Timer_interruptState\000"
 1756      696D6572 
 1756      5F696E74 
 1756      65727275 
 1756      70745374 
 1757              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
